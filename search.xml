<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>2019 Wannafly Camp day8</title>
      <link href="/article/2019-Wannafly-Camp-day8.html"/>
      <url>/article/2019-Wannafly-Camp-day8.html</url>
      
        <content type="html"><![CDATA[<h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>Camp最后一天了，上午 <font color="Red" size="6" face="宋体">hls</font> 给我们讲了计数和概率，太无奈自己太菜只听懂了一点点，有点可惜了。ε=(´ο｀*)))唉。下午训练果然和我预想的一样，最后一场应该是自闭场 <del>（虽然天天自闭）</del>，一套题目下来，J题T了，A题队友被自己hack了，G题死怼一下午，从开始毫无思绪，到后面展开各种毛病。心态简直爆炸了</p><p>不知不觉就过去了8天，突然对这段时光有点不舍，虽然自闭但却快乐着。晚上和队友回去，看着路上6人的影子 <del>（包括另外一队）</del>，突然感觉ACM是多么一件快乐并有意义的事情！还有9个月时间，加油Anoyer！</p></blockquote><h3 id="上题解"><a href="#上题解" class="headerlink" title="上题解"></a>上题解</h3><p><a href="https://www.zhixincode.com/contest/29/problem/G?problem_id=420" target="_blank" rel="noopener"><strong>G - 穗乃果的考试</strong></a></p><p>先对方块求一个二维前缀和，这样就相当于枚举前缀和中每一个小块的和了。</p><p><img src="https://img.vim-cn.com/e3/d2c220ef7fa7ddbc72b16d12ba073a36e00b27.png" alt=""></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">2200</span>][<span class="number">2200</span>];</span><br><span class="line">ll a[<span class="number">2200</span>][<span class="number">2200</span>],sum[<span class="number">2200</span>][<span class="number">2200</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)a[i][j]=s[i<span class="number">-1</span>][j<span class="number">-1</span>]-<span class="string">'0'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">    sum[i][j]=sum[i<span class="number">-1</span>][j]+sum[i][j<span class="number">-1</span>]-sum[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i][j];</span><br><span class="line"></span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)ans=(ans+sum[i][j]*(i*j))%mod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m;j++)ans=(ans+sum[i][j]*(n-i)*(m-j))%mod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m;j++)ans=(ans-sum[i][j]*i*(m-j))%mod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)ans=(ans-sum[i][j]*((n-i)*j))%mod;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(ans&lt;<span class="number">0</span>)ans+=mod;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans%mod);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Camp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019 Wannafly Camp day7</title>
      <link href="/article/2019-Wannafly-Camp-day7.html"/>
      <url>/article/2019-Wannafly-Camp-day7.html</url>
      
        <content type="html"><![CDATA[<h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>Camp第七天，上午<font color="Red" size="8" face="宋体">xls</font>给我们来了一波意识流图论讲解，我没有包图论所以听了些前面简单的，就去补day3，div1的数论了。经过群里一群大佬的点醒，发现自己傻逼了，明明可以直接用我div2的欧拉函数写法套上两个杜教加分块就能过，还整半天直接用莫比乌斯跑TT。</p><p>下午训练赛，感觉题目有点坑，数据范围好大，就写了两道签到题EG，队友没有怼出A题，晚上听解题发现自己D题推的离答案就差一两步了，结果放弃了。难受！！！快被自己菜哭了。</p><p>以后还是要多刷题啊，题量太少了，大佬们看啥都是原题，加油。</p></blockquote><h3 id="上题解"><a href="#上题解" class="headerlink" title="上题解"></a>上题解</h3><p><a href="https://www.zhixincode.com/contest/25/problem/E?problem_id=363" target="_blank" rel="noopener"><strong>E - 线性探查法</strong></a></p><p>按照哈希的操作进行逆操作，求出每一位最小数值，利用set维护压入的最小值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3e3</span>+<span class="number">20</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    ll a;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Node &amp;oth) <span class="keyword">const</span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &lt; oth.a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">ll b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">set</span>&lt;Node&gt;st;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;b[i]);</span><br><span class="line">        <span class="keyword">if</span>(b[i]%n==i)st.insert(&#123; b[i] , i &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;<span class="comment">//逆操作求解</span></span><br><span class="line">        Node f=*st.begin();</span><br><span class="line">        st.erase(st.begin());</span><br><span class="line">        b[f.id]=<span class="number">0</span>;   <span class="comment">//已经插入</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld "</span>,f.a);</span><br><span class="line">        <span class="keyword">int</span> j=f.id;</span><br><span class="line">        <span class="keyword">while</span>(!b[j])j=(j+<span class="number">1</span>)%n;<span class="comment">//找出应该放入的位置</span></span><br><span class="line">        <span class="keyword">int</span> k=b[j]%n,flag=<span class="number">1</span>;<span class="comment">//实际位置</span></span><br><span class="line">        <span class="keyword">while</span>(k!=j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[k])&#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            k=(k+<span class="number">1</span>)%n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)st.insert(&#123;b[j],j&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;st.begin()-&gt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/25/problem/G?problem_id=365" target="_blank" rel="noopener"><strong>G - 抢红包机器人</strong></a></p><p>枚举每个红包的第一个抢的人为机器人，去暴力正反扫两遍红包序列，找出机器人，最后取枚举得到的数的min，最后看看是否有人未参与抢红包，有的话就直接输出1。（可以更优，直接枚举人）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>][<span class="number">120</span>];</span><br><span class="line"><span class="keyword">bool</span> b[<span class="number">120</span>],mp[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> nn[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> aa;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;nn[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;nn[i];j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">            b[a[i][j]]=<span class="number">1</span>;<span class="comment">//标记此人参与了抢红包</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt1=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]==<span class="number">0</span>)cnt1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt1)<span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> res=<span class="number">0</span>,ans=<span class="number">999999</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="built_in">memset</span>(mp,<span class="number">0</span>,<span class="keyword">sizeof</span>(mp));</span><br><span class="line">            mp[a[i][<span class="number">0</span>]]=<span class="number">1</span>;</span><br><span class="line">            res=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;<span class="comment">//正扫</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=nn[j]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(mp[a[j][k]])&#123;</span><br><span class="line">                        <span class="keyword">for</span>(k--;k&gt;=<span class="number">0</span>;k--)&#123;</span><br><span class="line">                            mp[a[j][k]]=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=m<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)&#123;<span class="comment">//反扫</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=nn[j]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;k--)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(mp[a[j][k]])&#123;</span><br><span class="line">                        <span class="keyword">for</span>(k--;k&gt;=<span class="number">0</span>;k--)&#123;</span><br><span class="line">                            mp[a[j][k]]=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="keyword">if</span>(mp[i])res++;</span><br><span class="line">            ans=min(ans,res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Camp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019 Wannafly Camp day5</title>
      <link href="/article/2019-Wannafly-Camp-day5.html"/>
      <url>/article/2019-Wannafly-Camp-day5.html</url>
      
        <content type="html"><![CDATA[<h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>参加Camp第五天，今天是<font color="Red" size="6" face="宋体">dls</font>的计算几何专场，可是说是几何板子讲解，也是这几天听得最明白，学得最多的一天。dls从基础的点积叉积到线到圆等，感觉非常Nice，相对dls说<img src="http://pic1.sc.chinaz.com/Files/pic/Listfaces/5304/01.gif" alt="">。</p><p>下午依旧是训练赛，比昨天感觉好不少，真的是越来越亲民了，还以为今天要爆零自闭呢。同时经过今天的计算几何，感觉自己整理一套计算几何板子真的非常有必要，结束后也该操手了。</p></blockquote><h3 id="上题解"><a href="#上题解" class="headerlink" title="上题解"></a>上题解</h3><p><a href="https://www.zhixincode.com/contest/21/problem/A?problem_id=316" target="_blank" rel="noopener"><strong>A - Cactus Draw</strong></a></p><p>把节点的深度做x坐标，儿子序做y坐标，进行DFS遍历，因为是棵树所以肯定不会交边</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn=1e4+10;</span><br><span class="line">struct edge&#123;</span><br><span class="line">    int v,next;</span><br><span class="line">&#125;e[maxn];</span><br><span class="line">int head[maxn],hcnt=0;</span><br><span class="line">int u[maxn],v[maxn];</span><br><span class="line">void add(int u,int v)&#123;</span><br><span class="line">    e[hcnt]=edge&#123;v,head[u]&#125;;</span><br><span class="line">    head[u]=hcnt++;</span><br><span class="line">&#125;</span><br><span class="line">pair&lt;int,int&gt; point[maxn];</span><br><span class="line">bool vi[maxn];</span><br><span class="line">int vis[maxn];</span><br><span class="line">void dfs(int u,int x)&#123;</span><br><span class="line">    if(vi[u])return;</span><br><span class="line">    vi[u]=1;</span><br><span class="line">    if(!vis[x])</span><br><span class="line">    vis[x]=1;</span><br><span class="line">    point[u]=make_pair(x,vis[x]++);</span><br><span class="line">    for(int i=head[u];i&gt;=0;i=e[i].next)&#123;</span><br><span class="line">        int v=e[i].v;</span><br><span class="line">        if(vi[v])continue;</span><br><span class="line">        dfs(v,x+1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">    memset(head,-1,sizeof(head));</span><br><span class="line">    for(int i=1;i&lt;=m;i++)</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;u[i],&amp;v[i]),add(u[i],v[i]),add(v[i],u[i]);</span><br><span class="line">    dfs(1,1);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">    cout&lt;&lt;point[i].first&lt;&lt;&apos; &apos;&lt;&lt;point[i].second&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/21/problem/C?problem_id=318" target="_blank" rel="noopener"><strong>C - Division</strong></a></p><p>把每个数先压到优先队列中，每次操作取队顶元素除2再压进去，同时判断下队顶是否为0，如果为0就没必要继续操作了。因为数大小1e9所以每个数最多就操作30次。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt;a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,aa;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;aa);</span><br><span class="line">        a.push(aa);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        aa=a.top();</span><br><span class="line">        a.pop();</span><br><span class="line">        <span class="keyword">if</span>(aa==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a.push(aa/<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!a.empty())&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top()==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        ans+=a.top();</span><br><span class="line">        a.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/21/problem/I?problem_id=324" target="_blank" rel="noopener"><strong>I - Sorting</strong></a></p><p>将小于等于X的数当做0，大于x的数当做1，因为交换后相对顺序不会变，就可以预处理出各自的前缀和，根据处于的位置计算值。用线段树来维护区间内01的个数，Ok啦</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs rt&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> r0[maxn],r1[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt1=<span class="number">1</span>,cnt0=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tree</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">    <span class="keyword">int</span> lazy;</span><br><span class="line">&#125;t[maxn*<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(t[rt].lazy==<span class="number">1</span>)&#123;</span><br><span class="line">        t[ls].sum=t[ls].r-t[ls].l+<span class="number">1</span>;</span><br><span class="line">        t[rs].sum=t[rs].r-t[rs].l+<span class="number">1</span>;</span><br><span class="line">        t[ls].lazy=<span class="number">1</span>;</span><br><span class="line">        t[rs].lazy=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(t[rt].lazy==<span class="number">-1</span>)&#123;</span><br><span class="line">        t[ls].sum=<span class="number">0</span>;</span><br><span class="line">        t[rs].sum=<span class="number">0</span>;</span><br><span class="line">        t[ls].lazy=<span class="number">-1</span>;</span><br><span class="line">        t[rs].lazy=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t[rt].lazy=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    t[rt].l=l;</span><br><span class="line">    t[rt].r=r;</span><br><span class="line">    t[rt].x=<span class="number">0</span>;</span><br><span class="line">    t[rt].sum=<span class="number">0</span>;</span><br><span class="line">    t[rt].lazy=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(t[rt].l==t[rt].r)&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    build(ls,l,mid);</span><br><span class="line">    build(rs,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dadd</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[rt].l==x &amp;&amp; t[rt].r==x)&#123;</span><br><span class="line">        t[rt].x=<span class="number">1</span>;</span><br><span class="line">        t[rt].sum++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=t[rt].l+t[rt].r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid&lt;x)</span><br><span class="line">    dadd(rs,x);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    dadd(ls,x);</span><br><span class="line">    t[rt].sum=t[ls].sum+t[rs].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> type)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ql&gt;=l &amp;&amp; qr&lt;=r)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">                 t[rt].sum=<span class="number">0</span>;</span><br><span class="line">                 t[rt].lazy=<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                t[rt].sum=qr-ql+<span class="number">1</span>;</span><br><span class="line">                t[rt].lazy=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(rt);</span><br><span class="line">    <span class="keyword">int</span> mid=ql+qr&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid)</span><br><span class="line">        change(ls,ql,mid,l,r,x,type);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid)</span><br><span class="line">        change(rs,mid+<span class="number">1</span>,qr,l,r,x,type);</span><br><span class="line">    t[rt].sum=t[ls].sum+t[rs].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> rt,<span class="keyword">int</span> ql,<span class="keyword">int</span> qr,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;r)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">if</span>(ql&gt;=l &amp;&amp; qr&lt;=r)&#123;</span><br><span class="line">        <span class="keyword">return</span> t[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(rt);</span><br><span class="line">    <span class="keyword">int</span> mid=ql+qr&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid)</span><br><span class="line">      sum+=  query(ls,ql,mid,l,r);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid)</span><br><span class="line">    sum+=query(rs,mid+<span class="number">1</span>,qr,l,r);</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,q,x;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q&gt;&gt;x;</span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">         <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;=x)r0[cnt0]=r0[cnt0++<span class="number">-1</span>]+a[i];</span><br><span class="line">        <span class="keyword">else</span> dadd(<span class="number">1</span>,i),r1[cnt1]=r1[cnt1++<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> o,L,R;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">          <span class="built_in">cin</span>&gt;&gt;o&gt;&gt;L&gt;&gt;R;</span><br><span class="line">          <span class="keyword">if</span>(o==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> k=query(<span class="number">1</span>,<span class="number">1</span>,n,L,R);<span class="comment">//区间内有k个1</span></span><br><span class="line">            <span class="keyword">int</span> k1=query(<span class="number">1</span>,<span class="number">1</span>,n,<span class="number">1</span>,L<span class="number">-1</span>);<span class="comment">//前面有k1个1</span></span><br><span class="line">            <span class="keyword">int</span> S=R-L+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> k0=S-k;</span><br><span class="line">            <span class="keyword">int</span> k00=L<span class="number">-1</span>-k1;</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> sum1=r1[k1+k]-r1[k1];</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> sum0=r0[ S-k + L<span class="number">-1</span>-k1 ]-r0[L<span class="number">-1</span>-k1];</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;sum1 + sum0&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(o==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> k=query(<span class="number">1</span>,<span class="number">1</span>,n,L,R);<span class="comment">//区间内有k个1</span></span><br><span class="line">            <span class="keyword">int</span> k1=R-L+<span class="number">1</span>-k;<span class="comment">//k1个0</span></span><br><span class="line">            change(<span class="number">1</span>,<span class="number">1</span>,n,L,L+k1<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            change(<span class="number">1</span>,<span class="number">1</span>,n,L+k1,R,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(o==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> k=query(<span class="number">1</span>,<span class="number">1</span>,n,L,R);<span class="comment">//区间内有k个1</span></span><br><span class="line">            <span class="keyword">int</span> k1=R-L+<span class="number">1</span>-k;<span class="comment">//k1个0</span></span><br><span class="line">            change(<span class="number">1</span>,<span class="number">1</span>,n,L,L+k<span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">            change(<span class="number">1</span>,<span class="number">1</span>,n,L+k,R,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/21/problem/J?problem_id=325" target="_blank" rel="noopener"><strong>J - Special Judge</strong></a></p><p>对任意两条边都进行判断是否相交，如果相交则在判断是否是相交于端点，不过不是则ans++。是的话在判断下是不是重合边，如果不是重合边就不符合，是就ans++.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x;</span><br><span class="line"><span class="keyword">double</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(node a,node b,node c,node d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(min(a.x,b.x) &lt;= max(c.x,d.x) &amp;&amp; min(c.x,d.x) &lt;= max(a.x,b.x) &amp;&amp; min(a.y,b.y) &lt;= max(c.y,d.y) &amp;&amp;min(c.y,d.y)&lt;=max(a.y,b.y))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> u,v,w,z;<span class="comment">//保存叉乘</span></span><br><span class="line">          u=(c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y);</span><br><span class="line">          v=(d.x-a.x)*(b.y-a.y)-(b.x-a.x)*(d.y-a.y);</span><br><span class="line">          w=(a.x-c.x)*(d.y-c.y)-(d.x-c.x)*(a.y-c.y);</span><br><span class="line">          z=(b.x-c.x)*(d.y-c.y)-(d.x-c.x)*(b.y-c.y);</span><br><span class="line">          <span class="keyword">return</span> (u*v&lt;=<span class="number">0.00000001</span> &amp;&amp; w*z&lt;=<span class="number">0.00000001</span>); <span class="comment">//浮点数判断大小</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">onsegment</span><span class="params">(node pi,node pj,node Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((Q.x-pi.x)*(pj.y-pi.y)==(pj.x-pi.x)*(Q.y-pi.y)&amp;&amp;min(pi.x,pj.x)&lt;=Q.x&amp;&amp;Q.x&lt;=max(pi.x,pj.x)&amp;&amp;min(pi.y,pj.y)&lt;=Q.y&amp;&amp;Q.y&lt;=max(pi.y,pj.y))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(node a,node b,node c,node d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> len=(a.x-b.x)*(c.y-d.y)-(c.x-d.x)*(a.y-b.y);</span><br><span class="line">    <span class="keyword">if</span>(len==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1020</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">&#125;mp[<span class="number">2</span>*maxn];</span><br><span class="line">node p[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;mp[i].a,&amp;mp[i].b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;p[i].x,&amp;p[i].y);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(judge(p[mp[i].a],p[mp[i].b],p[mp[j].a],p[mp[j].b]))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(mp[i].a==mp[j].a||mp[i].a==mp[j].b||mp[i].b==mp[j].a||mp[i].b==mp[j].b)&#123;<span class="comment">//判断是否是交于端点</span></span><br><span class="line">                        <span class="keyword">if</span>(check(p[mp[i].a],p[mp[i].b],p[mp[j].a],p[mp[j].b]))&#123;<span class="comment">//看两边是否平行</span></span><br><span class="line"><span class="comment">//如果平行，通过判断一边的两端点是否在另外一边上</span></span><br><span class="line">                                <span class="keyword">if</span>((onsegment(p[mp[j].a],p[mp[j].b],p[mp[i].a])&amp;&amp;onsegment(p[mp[j].a],p[mp[j].b],p[mp[i].b]))||(onsegment(p[mp[i].a],p[mp[i].b],p[mp[j].a])&amp;&amp;onsegment(p[mp[i].a],p[mp[i].b],p[mp[j].b])))</span><br><span class="line">                                ans++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> ans++;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Camp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019 Wannafly Camp day4</title>
      <link href="/article/2019-Wannafly-Camp-day4.html"/>
      <url>/article/2019-Wannafly-Camp-day4.html</url>
      
        <content type="html"><![CDATA[<h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>Camp第四天，非常傻逼并快乐的一天​ 。</p><p>上午<font color="Red" size="6" face="宋体">Claris</font>给我们讲DP，而且从基础开始讲，虽然没有包DP，但是还是学到了不少，非常棒。中午所有人在科技楼下面来了一张大合影 <del>(寒风中瑟瑟发抖)</del> ，<font color="Blue" size="4" face="宋体">最最最最happy</font>的是找各位巨巨们要到了签名，(可惜没要到唐老师的​ ​​ )</p><p><img src="https://img.vim-cn.com/86/93a9af9b0b3ccb0d10da2e94559001ee065bfb.jpg" alt=""></p><p>下午训练是目前几场最签到的场了，但是不知为啥周围加我队3队人都傻逼了，明明非常简单片面的东西看的非常复杂，真的是…不想说了，<font color="Red" size="5" face="宋体">最后吸取教训不管题目怎么样，都有保持一颗平常心态和清醒的头脑</font>。</p></blockquote><h3 id="上题解"><a href="#上题解" class="headerlink" title="上题解"></a>上题解</h3><p><a href="https://www.zhixincode.com/contest/17/problem/A?problem_id=248" target="_blank" rel="noopener"><strong>A - 夺宝奇兵</strong></a></p><p>很简单的一道题，相邻两组宝藏走法只有两种交叉走，或者平行走（就是一号第一个宝藏走到二号第二个或者一号第一个走到二号第一个），所以for扫一遍去min就可以了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="function">ll <span class="title">dis</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">abs</span>(a[i]-a[j])+<span class="built_in">abs</span>(b[i]-b[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i],&amp;b[i]);</span><br><span class="line">    ll ans=dis(<span class="number">2</span>*n<span class="number">-1</span>,<span class="number">2</span>*n<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">2</span>*n;i+=<span class="number">2</span>)&#123;</span><br><span class="line">        ans+=min(dis(i,i<span class="number">-2</span>)+dis(i+<span class="number">1</span>,i<span class="number">-1</span>),dis(i,i<span class="number">-1</span>)+dis(i+<span class="number">1</span>,i<span class="number">-2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/17/problem/C?problem_id=250" target="_blank" rel="noopener"><strong>C - 最小边覆盖</strong></a></p><p>最小边覆盖，不能有多余的边重复覆盖点。所以如果发现一个点被多余的覆盖了就不是最小点覆盖</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> in[maxn],u[maxn],v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u[i],&amp;v[i]);</span><br><span class="line">        in[u[i]]++;</span><br><span class="line">        in[v[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(in[u[i]]&gt;<span class="number">1</span> &amp;&amp; in[v[i]]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/17/problem/F?problem_id=253" target="_blank" rel="noopener"><strong>F - 小小马</strong></a></p><p>因为走法比较特殊，如果当前xy奇偶性相同，下一步则必定不同，所以黑白格子是轮流出现的，这样就可以根据起点和终点的奇偶性判断是否黑格数等于白格数了。同时可以发现只有棋盘大于3 <em>4可以从一个点到达棋盘任何点， 3</em> 3的棋盘除去中心点其余点都能相互走到，其他棋盘情况就看看从起点和终点xy的关系，如果a%2==0&amp;&amp;(a/2)%2==1&amp;&amp;b==1则可以走。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,sx,sy,ex,ey;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;sx&gt;&gt;sy&gt;&gt;ex&gt;&gt;ey;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;=<span class="number">3</span>&amp;&amp;m&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((n==<span class="number">3</span>&amp;&amp;m==<span class="number">3</span>)&amp;&amp;(sx==<span class="number">2</span>&amp;&amp;sy==<span class="number">2</span>)||(ex==<span class="number">2</span>&amp;&amp;sy==<span class="number">2</span>))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((sx%<span class="number">2</span>+sy%<span class="number">2</span>)%<span class="number">2</span>==(ex%<span class="number">2</span>+ey%<span class="number">2</span>)%<span class="number">2</span>)<span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=max(<span class="built_in">abs</span>(sy-ey),<span class="built_in">abs</span>(sx-ex)),b=min(<span class="built_in">abs</span>(sy-ey),<span class="built_in">abs</span>(sx-ex));</span><br><span class="line">        <span class="keyword">if</span>(a%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;(a/<span class="number">2</span>)%<span class="number">2</span>==<span class="number">1</span>&amp;&amp;b==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/17/problem/G" target="_blank" rel="noopener"><strong>G - 置置置换</strong></a></p><p>定义dp[i][j]为 i个数的排列中，最后一个数字为j</p><p>当i为偶数的时候，位于山谷，需要前面大于他<br><code>dp[i][j]+=dp[i-1][k], j&lt;=k&lt;=i-1</code><br>之所以可以这么写是因为，前面并没有出现i这个数字，所以也没有计算dp[i-1][i]，但是有个巧妙的做法<br>假设把前面所有大于等于j的数+1，就刚好解决这个问题了。</p><p>当i为奇数的时候，位于山峰，需要前面小于他<br><code>dp[i][j]+=dp[i-1][k], 1&lt;=k&lt;=j-1;</code><br>这个很显然直接写是n^3，可以使用前缀和优化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll dp[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> sum[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;<span class="number">1</span>)<span class="comment">//奇数，升序 从1-&gt;(j-1)转移</span></span><br><span class="line">                dp[i][j]=(dp[i][j<span class="number">-1</span>]+dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+MOD)%MOD;<span class="comment">//前缀和优化</span></span><br><span class="line">            <span class="keyword">else</span>&#123;<span class="comment">//偶数，降序 从j -&gt; i转移</span></span><br><span class="line">                dp[i][j]=(dp[i][j<span class="number">-1</span>]+dp[i<span class="number">-1</span>][i<span class="number">-1</span>]-dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+MOD)%MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[n][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/17/problem/I?problem_id=256" target="_blank" rel="noopener"><strong>I - 咆咆咆哮</strong></a></p><p>基本思路就是贪心枚举选a的数量num，去选择num个对ans贡献最大a，然后ans取min。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e3</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Node a,Node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.a-num*a.b&gt;b.a-num*b.b;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].a,&amp;a[i].b);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">0</span>,anss=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(num=<span class="number">1</span>;num&lt;=n;num++)&#123;</span><br><span class="line">        sort(a,a+n,cmp);</span><br><span class="line">        anss=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)anss+=a[i].a;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=num;i&lt;n;i++)anss+=num*a[i].b;</span><br><span class="line">        ans=max(ans,anss);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Camp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019 Wannafly Camp day3</title>
      <link href="/article/2019-Wannafly-Camp-day3.html"/>
      <url>/article/2019-Wannafly-Camp-day3.html</url>
      
        <content type="html"><![CDATA[<h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>参加Camp的第三天，上午是数据结构专题分享，<font color="Red" size="6" face="宋体">dls</font> <del><font color="Blue" size="face=">不打CF，分数可能比我们都低的2300分只打过三场的巨巨队友</font></del> <font color="orange" size="6" face="宋体">wls</font>来给我们讲的​ ​​ 。比起昨天的数论专场，今天感觉好多了，懵逼少很多还能跟上节奏。wls是带着题目来给我们讲常见的数据结构运用，比如堆，并查集，线段树，平衡树等等。下午原本以为是数据结构专题训练，便戏耍的和lyy说下午你专场我回去了哈 ​ 。结果下午题目比day1,day2还难，而且不是想象中的数据结构专题。一开始我便瞄到了F题，好眼熟！！！这不是莫比乌斯反演吗？就开始怼了。lyy开了D，结果这​ SB不会写，我先放了下F题，看了下G题发现G题是个签到题 <del>(上面写的)</del> 。我就叫他看G，然后我切回了我的F。一波推式子，发现思路可行就巴拉巴拉敲了起来，中间因为炸int问题wa了几发，SB了！队友G题比我先过了，确实是个签到题​ ​​。最后有个乌龙，4点多的样子，队友和旁队的一起随机猜吧A题(因为只有2组数据，一共就1024种情况)，竟然A了，然后大喊了一声答案，果断一波A的AC流。不知道出题人看到会心咋想</p><p>感受：非常难得场上A出一道正儿八经的数论反演题，开森，同时发现队伍配合实在差，必须好好抓抓，不然要GG，尤其新人。</p></blockquote><h3 id="上题解（后期补题会更新其他能力范围内的题解）"><a href="#上题解（后期补题会更新其他能力范围内的题解）" class="headerlink" title="上题解（后期补题会更新其他能力范围内的题解）"></a>上题解（后期补题会更新其他能力范围内的题解）</h3><p><a href="https://www.zhixincode.com/contest/13/problem/F?problem_id=198" target="_blank" rel="noopener"><strong>F - 小清新数论</strong></a></p><p>做法一：欧拉函数</p><p><img src="https://img.vim-cn.com/38/bab153e92bc0ebeb28f1298554313cc751d7d9.png" alt=""></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>  maxn = <span class="number">1e7</span>+<span class="number">9</span>;</span><br><span class="line"><span class="keyword">const</span> LL mod = <span class="number">998244353</span>;</span><br><span class="line">LL phi[maxn],miu[maxn],fac[maxn];<span class="comment">//phi--欧拉函数表  miu--莫比乌斯函数表  fac--i最大的素因子辅助打phi表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; ++i) fac[i] = i;</span><br><span class="line">phi[<span class="number">1</span>] = miu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fac[i] == i)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i &lt;&lt; <span class="number">1</span>; j &lt; maxn; j += i)</span><br><span class="line">fac[j] = i;</span><br><span class="line"><span class="keyword">if</span> (i / fac[i] % fac[i]) phi[i] = (fac[i] - <span class="number">1</span>)*phi[i / fac[i]], miu[i] = -miu[i / fac[i]]; <span class="comment">//如果b质数  a%b！=0  phi(a*b) = phi(a)*b - phi(a)</span></span><br><span class="line"><span class="keyword">else</span> phi[i] = fac[i] * phi[i / fac[i]], miu[i] = <span class="number">0</span>;<span class="comment">//当b是质数，a%b==0，phi(a*b)=phi(a)*b</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)phi[i]=phi[i]+phi[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    LL n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    LL NN=n;</span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>;i&lt;=NN;i++)&#123;</span><br><span class="line">        LL res=(phi[NN/i]*(LL)<span class="number">2</span><span class="number">-1</span>)%mod;</span><br><span class="line">        ans=(ans+miu[i]*res%mod)%mod;</span><br><span class="line">        <span class="keyword">while</span>(ans&lt;<span class="number">0</span>)ans+=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>做法二：莫比乌斯反演</p><p><img src="https://img.vim-cn.com/3a/35d7086a95b8df2e7f472561afaa9574aa28a7.png" alt=""></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e7</span>+<span class="number">1</span>;</span><br><span class="line">ll phi[maxn],miu[maxn],vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;++i)vis[i]=i;</span><br><span class="line">    phi[<span class="number">1</span>]=miu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;maxn;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i]==i)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i&lt;&lt;<span class="number">1</span>;j&lt;maxn;j+=i)vis[j]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i/vis[i]%vis[i])miu[i]= -miu[i/vis[i]];</span><br><span class="line">        <span class="keyword">else</span> miu[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;maxn;i++)miu[i]=miu[i]+miu[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> N=min(n,m),r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l =<span class="number">1</span>;l&lt;=N;l=r+<span class="number">1</span>)&#123;</span><br><span class="line">        r=min(n/(n/l),m/(m/l)); <span class="comment">//取分块小的数</span></span><br><span class="line">        ll res=(miu[r]-miu[l<span class="number">-1</span>]+mod)%mod*(n/l)%mod*(n/l)%mod;   <span class="comment">//miu[r]-miu[l-1]表示l~r区间miu和，</span></span><br><span class="line">        ans=(ans+res+mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> n,r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    ll ans=<span class="number">0</span>,res;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=n;l=r+<span class="number">1</span>)&#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        res=(miu[r]-miu[l<span class="number">-1</span>]+mod)%mod*solve(n/l,n/l)%mod;</span><br><span class="line">        ans=(ans+res+mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>做法三：杜教筛能过div1，跑了1423ms，对做法一中欧拉函数前n项和，欧拉函数前n项和进行杜教筛，然后套一个分块求解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">#include&lt;tr1/unordered_map&gt;</span><br><span class="line">#define INV2 499122177</span><br><span class="line">using namespace std;</span><br><span class="line">typedef long long ll;</span><br><span class="line">const int N=1e7+20;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">bool vis[N];</span><br><span class="line">int mu[N],sum1[N];</span><br><span class="line">long long phi[N],sum2[N];</span><br><span class="line">int cnt,prim[N];</span><br><span class="line">int e,e1;</span><br><span class="line">tr1::unordered_map&lt;long long,long long&gt;w,w1;  //哈希 w用来求phi前缀和  w1用来求miu前缀和</span><br><span class="line">void get(int maxn)</span><br><span class="line">&#123;</span><br><span class="line">    phi[1]=mu[1]=1;</span><br><span class="line">    for(int i=2;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prim[++cnt]=i;</span><br><span class="line">            mu[i]=-1;phi[i]=i-1;</span><br><span class="line">        &#125;</span><br><span class="line">        for(int j=1;j&lt;=cnt&amp;&amp;prim[j]*i&lt;=maxn;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i*prim[j]]=1;</span><br><span class="line">            if(i%prim[j]==0)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prim[j]]=phi[i]*prim[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            else mu[i*prim[j]]=-mu[i],phi[i*prim[j]]=phi[i]*(prim[j]-1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=maxn;i++)sum1[i]=sum1[i-1]+mu[i],sum2[i]=(sum2[i-1]+phi[i])%mod;   //打一个maxn的phi前缀和表 和miu前缀和表</span><br><span class="line">&#125;</span><br><span class="line">int djsmu(long long x)//求miu前缀和</span><br><span class="line">&#123;</span><br><span class="line">    if(x&lt;=10000000)return sum1[x];</span><br><span class="line">    if(w[x])return w[x];</span><br><span class="line">    int ans=1;</span><br><span class="line">    for(long long l=2,r;l&lt;=x;l=r+1)</span><br><span class="line">    &#123;</span><br><span class="line">        r=x/(x/l);</span><br><span class="line">        ans-=(r-l+1ll)*djsmu(x/l);</span><br><span class="line">    &#125;</span><br><span class="line">    return w[x]=ans;</span><br><span class="line">&#125;</span><br><span class="line">long long djsphi(long long x)//求phi 前缀和</span><br><span class="line">&#123;</span><br><span class="line">    if(x&lt;=10000000)return sum2[x];</span><br><span class="line">    if(w1[x])return w1[x];</span><br><span class="line">    long long ans=x%mod*(x+1)%mod*INV2%mod;</span><br><span class="line">    for(long long l=2,r;l&lt;=x;l=r+1)</span><br><span class="line">    &#123;</span><br><span class="line">        r=x/(x/l);</span><br><span class="line">        ans=(ans-(r-l+1)%mod*djsphi(x/l)+mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    while(ans&lt;0)ans+=mod;</span><br><span class="line">    return w1[x]=ans%mod;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    get(10000000);</span><br><span class="line">    ll n,r;</span><br><span class="line">    scanf(&quot;%lld&quot;,&amp;n);</span><br><span class="line">    ll ans=0,res;</span><br><span class="line">    for(ll l=1;l&lt;=n;l=r+1)&#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        res=(ll)(djsmu(r)-djsmu(l-1)+mod)%mod*((djsphi(n/l)%mod*(ll)2%mod-1+mod)%mod)%mod;</span><br><span class="line">        ans=(ans+res+mod)%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%lld\n&quot;,ans);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/13/problem/G?problem_id=199" target="_blank" rel="noopener">G - 排列**</a></p><p>搞清楚每个数组都是干什么的。</p><ul><li>P 原数组</li><li>Ap 前缀数组</li><li>q Ap中第i大的位置（相同的先取左边，例如 AP={2，1， 1}，第1小的位置是2而不是3.）</li></ul><p>现在题目给了q，可以根据q倒推出Ap，然后倒推出P</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">include&lt;stdio.h&gt;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="keyword">int</span> q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> pre=maxn+<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;pre)</span><br><span class="line">q[a[i]]=cnt;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">q[a[i]]=++cnt;</span><br><span class="line">pre=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cnt=q[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,cnt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i]&lt;q[i<span class="number">-1</span>])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,q[i]);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,++cnt);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Camp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019 Wannafly Camp day2</title>
      <link href="/article/2019-Wannafly-Camp-day2.html"/>
      <url>/article/2019-Wannafly-Camp-day2.html</url>
      
        <content type="html"><![CDATA[<h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>今天上午<font color="Red" size="9" face="宋体">吉老师</font>吉老师给我们讲了一通数论知识，可以说是醍醐灌顶吧，半懂半懵<del>（简单的懂了，难的n^n脸懵逼）</del>，真的是菜的教不来啊 <del><font color="Blue" size="1" face="宋体">不过吉老师不亏是WF金牌爷，属实强大啊</font></del>。下午数论自闭专场（好像大部分数论题都没几个做出来的 ），自闭场了就写出2道题AH，有点难受，K题队友T了,B吃饭时候想出了正确的贪心策略。</p><p>开始我先开的A题，队友lyy和hxx开了K题，同时写崩，A题写半天发现怼的是div1的B题，K题lyy先T。后来A题瞎几把想了个假的贪心，贪最大值，果断wa了3发，发现是个假策略并算了算复杂度发现直接n方暴力。然后hxx的k也T了，对拍了波两人代码，发现没错误，那就凉了假算法。此时lyy便切到了B题，我开了H题，发现是个求球交体积的题目，取横截面积进行微积分<del>（我有板子自己裸板子过的）</del>，在这题还闹了个乌龙，样例完全正确后，我交了H并和队友说了句过了，队友说小心WA，秒回了“样例过了就是过了”,结果CE​ ​ ，有个结构体函数忘了函数类型，改改就A了。H过后便和lyy开始怼B题，因为K题实在不会了，目测是状压DP不会写。B题HACK了好几个YY出来的的假贪心策略之后，就直接去吃饭了，吃饭时候想到了贪长度，可惜已经GG了。</p><p>今天虽然是数论专场，但是感觉打脸最多的就是自己的假贪心策略，以后想出的策略觉得要证明正确性再写，一定不要莽</p></blockquote><h3 id="上题解（后期补题会更新其他能力范围内的题解）"><a href="#上题解（后期补题会更新其他能力范围内的题解）" class="headerlink" title="上题解（后期补题会更新其他能力范围内的题解）"></a>上题解（后期补题会更新其他能力范围内的题解）</h3><p><a href="https://www.zhixincode.com/contest/8/problem/A?problem_id=122" target="_blank" rel="noopener"><strong>A-Erase Numbers II</strong></a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">6e3</span> + <span class="number">10</span>;</span><br><span class="line">ull a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slove</span><span class="params">(ull &amp;a, ull b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        a *= <span class="number">10</span>;</span><br><span class="line">        b /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t, t1 = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        ull ans = <span class="number">0</span>, temp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; ++j)&#123;</span><br><span class="line">                temp = a[i];</span><br><span class="line">                slove(temp, a[j]);</span><br><span class="line">                ans = max(ans, temp + a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case #"</span> &lt;&lt; t1++ &lt;&lt; <span class="string">": "</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/8/problem/H?problem_id=129" target="_blank" rel="noopener"><strong>H-Cosmic Cleaner</strong></a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">120</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y,z;</span><br><span class="line">    point() &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b,<span class="keyword">double</span> c)</span></span>&#123;</span><br><span class="line">        x = a;</span><br><span class="line">        y = b;</span><br><span class="line">        z = c;</span><br><span class="line">    &#125;</span><br><span class="line">    point(<span class="keyword">double</span> a, <span class="keyword">double</span> b,<span class="keyword">double</span> c)&#123;</span><br><span class="line">        x = a;</span><br><span class="line">        y = b;</span><br><span class="line">        z = c;</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> -(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;     <span class="comment">//返回减去后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x - b.x, y - b.y,z-b.z);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> +(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;     <span class="comment">//返回加上后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x + b.x, y + b.y,z+b.z);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//数乘计算</span></span><br><span class="line">    point <span class="keyword">operator</span> *(<span class="keyword">const</span> <span class="keyword">double</span> &amp;k)<span class="keyword">const</span> &#123;    <span class="comment">//返回相乘后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x * k, y * k,z*k);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> /(<span class="keyword">const</span> <span class="keyword">double</span> &amp;k)<span class="keyword">const</span> &#123;    <span class="comment">//返回相除后的新点</span></span><br><span class="line">        <span class="keyword">return</span> point(x / k, y / k,z/k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">operator</span> *(<span class="keyword">const</span> point &amp;b)<span class="keyword">const</span> &#123;    <span class="comment">//点乘</span></span><br><span class="line">        <span class="keyword">return</span> x*b.x + y*b.y+z*b.z;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist</span><span class="params">(point p1, point p2)</span> </span>&#123;       <span class="comment">//返回平面上两点距离</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((p1 - p2)*(p1 - p2));</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sphere</span> &#123;</span><span class="comment">//球</span></span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    point centre;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SphereInterVS</span><span class="params">(sphere a, sphere b,<span class="keyword">double</span> &amp;v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> d = dist(a.centre, b.centre);<span class="comment">//球心距</span></span><br><span class="line">    <span class="keyword">if</span>(d&gt;=a.r+b.r)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a.r-d&gt;=b.r)&#123;</span><br><span class="line">        v+=PI*<span class="number">4.0</span>/<span class="number">3.0</span>*b.r*b.r*b.r;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a.r&lt;=b.r-d)&#123;</span><br><span class="line">        v+=PI*<span class="number">4.0</span>/<span class="number">3.0</span>*a.r*a.r*a.r;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> t = (d*d + a.r*a.r - b.r*b.r) / (<span class="number">2.0</span> * d);<span class="comment">//</span></span><br><span class="line">    <span class="keyword">double</span> h = <span class="built_in">sqrt</span>((a.r*a.r) - (t*t)) * <span class="number">2</span>;<span class="comment">//h1=h2，球冠的高</span></span><br><span class="line">    <span class="keyword">double</span> angle_a = <span class="number">2</span> * <span class="built_in">acos</span>((a.r*a.r + d*d - b.r*b.r) / (<span class="number">2.0</span> * a.r*d));  <span class="comment">//余弦公式计算r1对应圆心角，弧度</span></span><br><span class="line">    <span class="keyword">double</span> angle_b = <span class="number">2</span> * <span class="built_in">acos</span>((b.r*b.r + d*d - a.r*a.r) / (<span class="number">2.0</span> * b.r*d));  <span class="comment">//余弦公式计算r2对应圆心角，弧度</span></span><br><span class="line">    <span class="keyword">double</span> l1 = ((a.r*a.r - b.r*b.r) / d + d) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">double</span> l2 = d - l1;</span><br><span class="line">    <span class="keyword">double</span> x1 = a.r - l1, x2 = b.r - l2;<span class="comment">//分别为两个球缺的高度</span></span><br><span class="line">    <span class="keyword">double</span> v1 = PI*x1*x1*(a.r - x1 / <span class="number">3</span>);<span class="comment">//相交部分r1圆所对应的球缺部分体积</span></span><br><span class="line">    <span class="keyword">double</span> v2 = PI*x2*x2*(b.r - x2 / <span class="number">3</span>);<span class="comment">//相交部分r2圆所对应的球缺部分体积</span></span><br><span class="line">     v += v1 + v2;<span class="comment">//相交部分体积</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y,z,r;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"><span class="keyword">double</span> x,y,z,r;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> v=<span class="number">0</span>;</span><br><span class="line">    sphere A,B;</span><br><span class="line">    A.r=r;</span><br><span class="line">    A.centre.Init(x,y,z);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        B.r=a[i].r;</span><br><span class="line">        B.centre.Init(a[i].x,a[i].y,a[i].z);</span><br><span class="line">        SphereInterVS(A,B,v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,tt=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">/*sphere A,B;</span></span><br><span class="line"><span class="comment">    A.r=1;</span></span><br><span class="line"><span class="comment">    A.centre.Init(0,0,0);</span></span><br><span class="line"><span class="comment">    B.r=1;</span></span><br><span class="line"><span class="comment">    B.centre.Init(0,0,0);</span></span><br><span class="line"><span class="comment">    double v=0;</span></span><br><span class="line"><span class="comment">    SphereInterVS(A,B,v);</span></span><br><span class="line"><span class="comment">    printf("%lf",v);*/</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(tt&lt;=t)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;a[i].x,&amp;a[i].y,&amp;a[i].z,&amp;a[i].r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;x,&amp;y,&amp;z,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %.10lf\n"</span>,tt++,Solve());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Camp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019 Wannafly Camp Day1</title>
      <link href="/article/2019-Wannafly-Camp-day1.html"/>
      <url>/article/2019-Wannafly-Camp-day1.html</url>
      
        <content type="html"><![CDATA[<h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>第一次参加这种线下的算法Camp，不得不说和队友都是内心非常的小鸡动。上午开幕式<font color="Red" size="6" face="宋体">wls</font>讲了一堆话，差不多就是一起呲逼加鸡汤吧<del>（哈哈希望wls不要打死我）</del>。下午就是day训练赛了，因为一个主力队友生病没来，带着一个新队友2排，直接跳过了图论和DP题，差点就死怼C构造和E暴零自闭了，最后发现J题原题一发A，最后C题放弃了构造去写了100*100的暴力过了<del>（抹汗）</del>。自己还是太菜了，还有好多成长空间，细节，第一解题反应，耐心等等。</p></blockquote><h3 id="不多说上题解（后期补题会更新其他能力范围内的题解）"><a href="#不多说上题解（后期补题会更新其他能力范围内的题解）" class="headerlink" title="不多说上题解（后期补题会更新其他能力范围内的题解）"></a>不多说上题解（后期补题会更新其他能力范围内的题解）</h3><p><a href="https://www.zhixincode.com/contest/1/problem/B?problem_id=13" target="_blank" rel="noopener"><strong>B-吃豆豆</strong></a></p><p>思路：3维DP维护一个3维数组，表示(i,j)位置第K秒有多少糖果，通过k-1秒5个位置转移得到(i,j,k)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">10010</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">20</span>][<span class="number">20</span>][maxn];</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,c,xs,ys,xt,yt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;c);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;mp[i][j]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;xs,&amp;ys,&amp;xt,&amp;yt);</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">-0x3f</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[xs][ys][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;maxn;k++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">        dp[i][j][k]=max(&#123;dp[i<span class="number">-1</span>][j][k<span class="number">-1</span>],dp[i][j+<span class="number">1</span>][k<span class="number">-1</span>],dp[i+<span class="number">1</span>][j][k<span class="number">-1</span>],dp[i][j<span class="number">-1</span>][k<span class="number">-1</span>],dp[i][j][k<span class="number">-1</span>]&#125;)+(k%mp[i][j]==<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> _max=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxn;i++)<span class="keyword">if</span>(dp[xt][yt][i]&gt;=c)&#123;_max=i;<span class="keyword">break</span>;&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,_max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/1/problem/C?problem_id=14" target="_blank" rel="noopener"><strong>C-拆拆拆数</strong></a></p><p>思路：题目只有1和2的情况，如果ab互质则为1，如果不互质n为2，且一定存在答案（第一感觉是这样）。开始我对n=2的情况去构造，发现一直wa<del>（菜哭了）</del>，后来A了J题后重新换了100*100暴力枚举两组ai,bi。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        ll a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span>(__gcd(a,b)==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1\n%lld %lld\n"</span>,a,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(ll j=<span class="number">2</span>;j&lt;=<span class="number">100</span>;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(__gcd(a-i,b-j)==<span class="number">1</span>&amp;&amp;__gcd(i,j)==<span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"2\n%lld %lld\n"</span>,i,j);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,a-i,b-j);</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/1/problem/E?problem_id=16" target="_blank" rel="noopener"><strong>E - 流流流动</strong></a></p><p>直接连边树形dp计算。需要注意的是图并非联通，可以使用并查集，判断这个集合是否已经处理过。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;e[u].push_back(v),e[v].push_back(u);&#125;</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fin</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> pre[x]==x?x:pre[x]=fin(pre[x]);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unio</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;pre[fin(a)]=fin(b);&#125;</span><br><span class="line"><span class="keyword">int</span> f[maxn],d[maxn];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> dp[maxn][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> pre)</span></span>&#123;</span><br><span class="line">    dp[u][<span class="number">1</span>]=f[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[u].size();i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=e[u][i];</span><br><span class="line">        <span class="keyword">if</span>(v==pre)<span class="keyword">continue</span>;</span><br><span class="line">        dfs(v,u);</span><br><span class="line">        dp[u][<span class="number">0</span>]+=max(dp[v][<span class="number">0</span>],dp[v][<span class="number">1</span>]);</span><br><span class="line">        dp[u][<span class="number">1</span>]+=max(dp[v][<span class="number">0</span>],dp[v][<span class="number">1</span>]-d[min(u,v)]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;f[i]);pre[i]=i;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d[i]);&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((i&amp;<span class="number">1</span>) &amp;&amp; (<span class="number">3</span>*i+<span class="number">1</span>&lt;=n))&#123;</span><br><span class="line">            add(i,<span class="number">3</span>*i+<span class="number">1</span>);</span><br><span class="line">            unio(i,<span class="number">3</span>*i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            add(i,i/<span class="number">2</span>);</span><br><span class="line">            unio(i,i/<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">             <span class="keyword">int</span> p=fin(i);</span><br><span class="line">        <span class="keyword">if</span>(!vis[fin(i)])&#123;</span><br><span class="line">            vis[fin(i)]=<span class="number">1</span>;</span><br><span class="line">            dfs(fin(i),fin(i));</span><br><span class="line">            ans+=max(dp[fin(i)][<span class="number">0</span>],dp[fin(i)][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/1/problem/F?problem_id=17" target="_blank" rel="noopener"><strong>F-爬爬爬山</strong></a></p><p>第一座山的高度确定了，R[1]。当前体力为k，山与山之间的边权为w。那么当后面山的高度大于R[1]+k的时候就需要将山的高度降低。上山消耗体力，下山增加体力，其实就相同高度低于R[1]的时候这个山不存在。因为如果碰到了一个在高的山，增加的体力就被抵消了，相同于没有。那就将边权加上多出来的那部分，（R[x]-（R[1]+k）)^2，然后跑最短路就行了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> inf=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dis[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> dis;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;r)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dis&gt;r.dis;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> w;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line">&#125;e[maxn*<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> head[maxn*<span class="number">10</span>],hcnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    e[hcnt]=edge&#123;v,w,head[u]&#125;;</span><br><span class="line">    head[u]=hcnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dij</span><span class="params">(<span class="keyword">int</span> start)</span></span>&#123;</span><br><span class="line">    priority_queue&lt;node&gt; que;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        vis[i]=<span class="literal">false</span>,dis[i]=inf;</span><br><span class="line">    que.push(&#123;start,<span class="number">0</span>&#125;);</span><br><span class="line">    dis[start]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=que.top().u;</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">if</span>(vis[u])<span class="keyword">continue</span>;</span><br><span class="line">        vis[u]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];i&gt;=<span class="number">0</span>;i=e[i].next)&#123;</span><br><span class="line">            <span class="keyword">int</span> v=e[i].v;</span><br><span class="line">            <span class="keyword">if</span>(dis[v]&gt;dis[u]+e[i].w)</span><br><span class="line">            dis[v]=dis[u]+e[i].w,que.push(&#123;v,dis[v]&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> r[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;r[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> u,v,w;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">        add(u,v,w+max(<span class="number">0L</span>L,r[v]-(r[<span class="number">1</span>]+k))*max(<span class="number">0L</span>L,r[v]-(r[<span class="number">1</span>]+k)));</span><br><span class="line">        add(v,u,w+max(<span class="number">0L</span>L,r[u]-(r[<span class="number">1</span>]+k))*max(<span class="number">0L</span>L,r[u]-(r[<span class="number">1</span>]+k)));</span><br><span class="line">    &#125;</span><br><span class="line">    dij(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dis[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/1/problem/J?problem_id=21" target="_blank" rel="noopener"><strong>J-夺宝奇兵</strong></a></p><p>思路：看着题比较晚了，一看woc这不就是CF原题嘛，考虑枚举最终票数。枚举完票数就开始处理，把每个党超过这个票数且收钱最少的人收买过来，如果这些人都收买完了可是还没有达到预定的票数，就一直收买之前还没有收买过的学生直到人数达标,就这样巴拉巴拉A了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits\stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,m,ns,cnt[<span class="number">3005</span>],Sum[<span class="number">3005</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">peo</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> p,c,rk;</span><br><span class="line">&#125;a[<span class="number">3005</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">val</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> rk,v;</span><br><span class="line">&#125;b[<span class="number">3005</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">3005</span>];</span><br><span class="line">ll min_ans=<span class="number">-1</span>,ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpa</span> <span class="params">(peo a,peo b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.p==b.p) <span class="keyword">return</span> a.c&lt;b.c;</span><br><span class="line">    <span class="keyword">return</span> a.p&lt;b.p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpb</span> <span class="params">(val a,val b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.v&lt;b.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].c,&amp;a[i].p);</span><br><span class="line">        a[i].p++;</span><br><span class="line">        a[i].rk=i;</span><br><span class="line">        b[i].rk=i;</span><br><span class="line">        b[i].v=a[i].c;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmpa);</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+n,cmpb);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">        Sum[ a[i].p ]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> s=<span class="number">1</span>;s&lt;=n;++s)&#123;</span><br><span class="line">        ns=<span class="number">0</span>;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j].p==<span class="number">1</span>) ns++,vis[ a[j].rk ]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(Sum[ a[j].p ]-cnt[ a[j].p ]&gt;=s)&#123;</span><br><span class="line">                    vis[ a[j].rk ]=<span class="literal">true</span>;</span><br><span class="line">                    cnt[ a[j].p ]++;</span><br><span class="line">                    ans+=a[j].c;</span><br><span class="line">                    ns++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ns&gt;=s) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(vis[ b[i].rk ]) <span class="keyword">continue</span>;</span><br><span class="line">            ns++;</span><br><span class="line">            ans+=b[i].v;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(min_ans==<span class="number">-1</span>) min_ans=ans;</span><br><span class="line">        min_ans=min(ans,min_ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;min_ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Camp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>输入外挂总结</title>
      <link href="/article/Fread.html"/>
      <url>/article/Fread.html</url>
      
        <content type="html"><![CDATA[<h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>明明在C语言中有scanf()、printf()，C++中有cin、cout，为什么我们还要用输入输出外挂呢？</p><p>这个问题很明显，一定是因为这些输入输出函数功能过于强大而导致效率低，（很多时候，功能越强大的东西越臃肿），而我们使用的输入输出外挂既然叫外挂，那说明其一定有很大的优势，而这方面优势就体现在术有专攻上。原来的输入输出函数因为要应对不同类型的输入输出，所以内部一定做了很多的判断，而我们在遇见实际问题时，往往都是对特定类型的进行输入输出，所以这些判断就显得无用且浪费资源。这时，我们的输入输出外挂也就有了存在的必要性，也就应运而生。</p><p>我们都知道，scanf()、printf()、cin、cout其实就是对其他一些基础的获取或输出语句（getchar() putchar()等）进行封装，而这些基础的函数功能弱，效率高，所以我们的输入输出外挂也是仿照着scanf()、printf()、cin、cout来实现的，只不过做了针对性的改造，最终我们改造出来多种功能比scanf()等弱、比getchar()等强，效率比scanf()等高、比gerchar()等低的函数，从而达到针对性的作用，减少了不必要的资源消耗。</p><p>当然输入输出外挂一般用在大量输入输出的情况下，这样性价比才高一些，否则得不偿失（牺牲了代码长度而换来了微不足道的效率提升）。<br>摘抄原文：<a href="https://blog.csdn.net/f_zyj/article/details/51473493" target="_blank" rel="noopener">https://blog.csdn.net/f_zyj/article/details/51473493</a></p><h3 id="普通输入外挂-适用于正整数"><a href="#普通输入外挂-适用于正整数" class="headerlink" title="普通输入外挂(适用于正整数)"></a>普通输入外挂(适用于正整数)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>; ch = getchar());</span><br><span class="line"><span class="keyword">for</span> (; ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>; ch = getchar()) x = x * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="整数输入外挂-适用于整数"><a href="#整数输入外挂-适用于整数" class="headerlink" title="整数输入外挂(适用于整数)"></a>整数输入外挂(适用于整数)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BufferSize=<span class="number">1</span>&lt;&lt;<span class="number">16</span>;</span><br><span class="line"><span class="keyword">char</span> buffer[BufferSize],*head,*tail;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head==tail) &#123;</span><br><span class="line">        <span class="keyword">int</span> l=fread(buffer,<span class="number">1</span>,BufferSize,<span class="built_in">stdin</span>);</span><br><span class="line">        tail=(head=buffer)+l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *head++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> c=Getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=Getchar()) <span class="keyword">if</span>(c==<span class="string">'-'</span>) f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=Getchar()) x=x*<span class="number">10</span>+c-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="加强版输入外挂-速度比普通输入外挂快不少"><a href="#加强版输入外挂-速度比普通输入外挂快不少" class="headerlink" title="加强版输入外挂(速度比普通输入外挂快不少)"></a>加强版输入外挂(速度比普通输入外挂快不少)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> fastIO &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 100000</span></span><br><span class="line">    <span class="comment">//fread -&gt; read</span></span><br><span class="line">    <span class="keyword">bool</span> IOerror = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">nc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">char</span> buf[BUF_SIZE], *p1 = buf + BUF_SIZE, *pend = buf + BUF_SIZE;</span><br><span class="line">        <span class="keyword">if</span> (p1 == pend) &#123;</span><br><span class="line">            p1 = buf;</span><br><span class="line">            pend = buf + fread(buf, <span class="number">1</span>, BUF_SIZE, <span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">if</span> (pend == p1) &#123;</span><br><span class="line">                IOerror = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *p1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">blank</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ch == <span class="string">' '</span> || ch == <span class="string">'\n'</span> || ch == <span class="string">'\r'</span> || ch == <span class="string">'\t'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        <span class="keyword">while</span> (blank(ch = nc()));</span><br><span class="line">        <span class="keyword">if</span> (IOerror) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span> (x = ch - <span class="string">'0'</span>; (ch = nc()) &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>; x = x * <span class="number">10</span> + ch - <span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> BUF_SIZE</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> fastIO;</span><br></pre></td></tr></table></figure><h3 id="加强版完整型输入外挂包-速度快，适用于整形，浮点型"><a href="#加强版完整型输入外挂包-速度快，适用于整形，浮点型" class="headerlink" title="加强版完整型输入外挂包(速度快，适用于整形，浮点型)"></a>加强版完整型输入外挂包(速度快，适用于整形，浮点型)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> fastIO&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 100000</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> OUT_SIZE 100000</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">    <span class="comment">//fread-&gt;read</span></span><br><span class="line">    <span class="keyword">bool</span> IOerror=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">nc</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">char</span> buf[BUF_SIZE],*p1=buf+BUF_SIZE,*pend=buf+BUF_SIZE;</span><br><span class="line">        <span class="keyword">if</span> (p1==pend)&#123;</span><br><span class="line">            p1=buf; pend=buf+fread(buf,<span class="number">1</span>,BUF_SIZE,<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">if</span> (pend==p1)&#123;IOerror=<span class="number">1</span>;<span class="keyword">return</span> <span class="number">-1</span>;&#125;</span><br><span class="line">            <span class="comment">//&#123;printf("IO error!\n");system("pause");for (;;);exit(0);&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *p1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">blank</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;<span class="keyword">return</span> ch==<span class="string">' '</span>||ch==<span class="string">'\n'</span>||ch==<span class="string">'\r'</span>||ch==<span class="string">'\t'</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=nc(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'-'</span>)sign=<span class="number">1</span>,ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(ll &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=nc(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'-'</span>)sign=<span class="number">1</span>,ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">double</span> &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=nc(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'-'</span>)sign=<span class="number">1</span>,ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'.'</span>)&#123;</span><br><span class="line">            <span class="keyword">double</span> tmp=<span class="number">1</span>; ch=nc();</span><br><span class="line">            <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())tmp/=<span class="number">10.0</span>,x+=tmp*(ch-<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span> (;!blank(ch)&amp;&amp;!IOerror;ch=nc())*s++=ch;</span><br><span class="line">        *s=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> &amp;c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (c=nc();blank(c);c=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)&#123;c=<span class="number">-1</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fwrite-&gt;write</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Ostream_fwrite</span>&#123;</span></span><br><span class="line">        <span class="keyword">char</span> *buf,*p1,*pend;</span><br><span class="line">        Ostream_fwrite()&#123;buf=<span class="keyword">new</span> <span class="keyword">char</span>[BUF_SIZE];p1=buf;pend=buf+BUF_SIZE;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">out</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (p1==pend)&#123;</span><br><span class="line">                fwrite(buf,<span class="number">1</span>,BUF_SIZE,<span class="built_in">stdout</span>);p1=buf;</span><br><span class="line">            &#125;</span><br><span class="line">            *p1++=ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">15</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">15</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1); out(<span class="string">'\n'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">25</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">25</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1); out(<span class="string">'\n'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> ll mul[]=&#123;<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>,<span class="number">10000</span>,<span class="number">100000</span>,<span class="number">1000000</span>,<span class="number">10000000</span>,<span class="number">100000000</span>,</span><br><span class="line">                <span class="number">1000000000</span>,<span class="number">10000000000L</span>L,<span class="number">100000000000L</span>L,<span class="number">1000000000000L</span>L,<span class="number">10000000000000L</span>L,</span><br><span class="line">                <span class="number">100000000000000L</span>L,<span class="number">1000000000000000L</span>L,<span class="number">10000000000000000L</span>L,<span class="number">100000000000000000L</span>L&#125;;</span><br><span class="line">            <span class="keyword">if</span> (x&lt;<span class="number">-1e-12</span>)out(<span class="string">'-'</span>),x=-x;x*=mul[y];</span><br><span class="line">            ll x1=(ll)<span class="built_in">floor</span>(x); <span class="keyword">if</span> (x-<span class="built_in">floor</span>(x)&gt;=<span class="number">0.5</span>)++x1;</span><br><span class="line">            ll x2=x1/mul[y],x3=x1-x2*mul[y]; print(x2);</span><br><span class="line">            <span class="keyword">if</span> (y&gt;<span class="number">0</span>)&#123;out(<span class="string">'.'</span>); <span class="keyword">for</span> (<span class="keyword">size_t</span> i=<span class="number">1</span>;i&lt;y&amp;&amp;x3*mul[i]&lt;mul[y];out(<span class="string">'0'</span>),++i); print(x3);&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;print(x,y);out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;<span class="keyword">while</span> (*s)out(*s++);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;<span class="keyword">while</span> (*s)out(*s++);out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>&#123;<span class="keyword">if</span> (p1!=buf)&#123;fwrite(buf,<span class="number">1</span>,p1-buf,<span class="built_in">stdout</span>);p1=buf;&#125;&#125;</span><br><span class="line">        ~Ostream_fwrite()&#123;flush();&#125;</span><br><span class="line">    &#125;Ostream;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;Ostream.print(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;Ostream.println(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;Ostream.out(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;Ostream.out(x);Ostream.out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(ll x)</span></span>&#123;Ostream.print(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(ll x)</span></span>&#123;Ostream.println(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;Ostream.print(x,y);&#125;<span class="comment">//y为小数点后几位</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;Ostream.println(x,y);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;Ostream.print(s);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;Ostream.println(s);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">()</span></span>&#123;Ostream.out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>&#123;Ostream.flush();&#125;<span class="comment">//清空</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> ll</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> OUT_SIZE</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> BUF_SIZE</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> fastIO;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 输入外挂 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++记录程序运行时间5大方法</title>
      <link href="/article/Run-Time.html"/>
      <url>/article/Run-Time.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-用clock-函数"><a href="#1-用clock-函数" class="headerlink" title="1.用clock()函数"></a>1.用clock()函数</h3><p>用clock()函数，得到系统启动以后的毫秒级时间，然后除以CLOCKS_PER_SEC，就可以换成“秒”，标准c函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">clock_t</span> start_time=clock();</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">clock_t</span> end_time=clock();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The run time is: "</span> &lt;&lt;(<span class="keyword">double</span>)(end_time - start_time) / CLOCKS_PER_SEC &lt;&lt; <span class="string">"s"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h3 id="2-用GetTickCount-函数"><a href="#2-用GetTickCount-函数" class="headerlink" title="2.用GetTickCount()函数"></a>2.用GetTickCount()函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DWORD Start = GetTickCount();</span><br><span class="line"><span class="comment">//这里运行你的程序代码</span></span><br><span class="line">DWORD End = GetTickCount();</span><br><span class="line"><span class="comment">//则(End-Start)就是你的程序运行时间, 以毫秒为单位这个函数只精确到55ms，1个tick就是55ms。</span></span><br></pre></td></tr></table></figure><h3 id="3-timeGetTime-函数"><a href="#3-timeGetTime-函数" class="headerlink" title="3.timeGetTime()函数"></a>3.timeGetTime()函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DWORD Start = timeGetTime();</span><br><span class="line"><span class="comment">//这里运行你的程序代码</span></span><br><span class="line">DWORD End = timeGetTime();</span><br><span class="line"><span class="comment">//则(End-Start)就是你的程序运行时间, 以毫秒为单位</span></span><br><span class="line"><span class="comment">//虽然返回的值单位应该是ms,但精度只有10ms。</span></span><br></pre></td></tr></table></figure><h3 id="4-使用Boost库中的timer"><a href="#4-使用Boost库中的timer" class="headerlink" title="4.使用Boost库中的timer"></a>4.使用Boost库中的timer</h3><p>timer类可以测量时间的流逝，是小型计时器，提供毫秒级别的计时精度。</p><p>头文件：<code>#include&lt;boost/timer.hpp&gt;</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timer t;<span class="comment">//声明计时器对象并开始计时 </span></span><br><span class="line">    <span class="comment">//...测试代码</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"运行时间："</span>&lt;&lt;t.elapsed() &lt;&lt;<span class="string">"s"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//输出已流失的时间</span></span><br></pre></td></tr></table></figure><h3 id="5-高精度时控函数QueryPerformanceFrequency-，QueryPerformanceCounter"><a href="#5-高精度时控函数QueryPerformanceFrequency-，QueryPerformanceCounter" class="headerlink" title="5.高精度时控函数QueryPerformanceFrequency()，QueryPerformanceCounter()"></a>5.高精度时控函数QueryPerformanceFrequency()，QueryPerformanceCounter()</h3><p>QueryPerformanceCounter()这个函数返回高精确度性能计数器的值,它可以以微妙为单位计时.但是QueryPerformanceCounter()确切的精确计时的最小单位是与系统有关的,所以,必须要查询系统以得到QueryPerformanceCounter()返回的嘀哒声的频率.QueryPerformanceFrequency()提供了这个频率值,返回每秒嘀哒声的个数.计算确切的时间是从第一次调用QueryPerformanceCounter()开始的假设得到的LARGE_INTEGER为nStartCounter,过一段时间后再次调用该函数结束的,设得到nStopCounter.两者之差除以QueryPerformanceFrequency()的频率就是开始到结束之间的秒数.由于计时函数本身要耗费很少的时间,要减去一个很少的时间开销.但一般都把这个开销忽略。头文件：<code>#include&lt;windows.h&gt;</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> time=<span class="number">0</span>;  </span><br><span class="line"><span class="keyword">double</span> counts=<span class="number">0</span>;  </span><br><span class="line">LARGE_INTEGER nFreq;  </span><br><span class="line">LARGE_INTEGER nBeginTime;  </span><br><span class="line">LARGE_INTEGER nEndTime;  </span><br><span class="line">QueryPerformanceFrequency(&amp;nFreq);  </span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);<span class="comment">//开始计时  </span></span><br><span class="line">    <span class="comment">//...测试代码</span></span><br><span class="line">QueryPerformanceCounter(&amp;nEndTime);<span class="comment">//停止计时  </span></span><br><span class="line">time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s  </span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"运行时间："</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Henau-2018训练题1</title>
      <link href="/article/henau-test1.html"/>
      <url>/article/henau-test1.html</url>
      
        <content type="html"><![CDATA[<h2 id="小刘爱复读"><a href="#小刘爱复读" class="headerlink" title="小刘爱复读"></a>小刘爱复读</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="comment">//把诗歌存入字符串</span></span><br><span class="line"><span class="keyword">char</span> s[maxn] = <span class="string">"I am the bone of my language repeater plastic is my body and wire is my blood I have created over a thousand copies  Unknown to Death Nor known to Life Have withstood pain to create copies Yet,those hands will never hold anything So as I pray,unlimited repeat works"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s), cnt = <span class="number">0</span>;<span class="comment">//cnt表示字母个数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;<span class="comment">//遍历一遍字符串</span></span><br><span class="line"><span class="keyword">if</span> ((s[i] &gt;= <span class="string">'a'</span>&amp;&amp;s[i] &lt;= <span class="string">'z'</span>) || (s[i] &gt;= <span class="string">'A'</span>&amp;&amp;s[i] &lt;= <span class="string">'Z'</span>))cnt++;<span class="comment">//如果当前字符是个字母，则cnt++;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="洋洋爱模仿"><a href="#洋洋爱模仿" class="headerlink" title="洋洋爱模仿"></a>洋洋爱模仿</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn], t[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line"><span class="keyword">while</span> (T--)&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;<span class="comment">//ans表示s,t串相同位相同字符个数</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);<span class="comment">//获取串长度</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)<span class="comment">//for遍历字符串</span></span><br><span class="line"><span class="keyword">if</span> (s[i] == t[i])ans++;<span class="comment">//如果发现一个s[i]和t[i]相同,ans++;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, (<span class="keyword">double</span>)ans / (<span class="keyword">double</span>)len);<span class="comment">//ans/总字符数=相似度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小温爱蔬菜"><a href="#小温爱蔬菜" class="headerlink" title="小温爱蔬菜"></a>小温爱蔬菜</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> sum[maxn];<span class="comment">//前缀和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, a, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;sum[i]);</span><br><span class="line">sum[i] += sum[i - <span class="number">1</span>];<span class="comment">//获取a数组的前缀和表</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line"><span class="comment">//前缀和性质：sum[r]-sum[l-1]=a[l]+....+a[r]</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum[r] - sum[l - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="洋洋爱密码"><a href="#洋洋爱密码" class="headerlink" title="洋洋爱密码"></a>洋洋爱密码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, cnt = <span class="number">0</span>, ans = <span class="number">0</span>;<span class="comment">//ans用来记录当前所花费金额</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">sort(a, a + n, cmp);<span class="comment">//先对物品价格从大到小排序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">ans += a[i];</span><br><span class="line"><span class="keyword">if</span> (ans &gt;= <span class="number">30</span>)cnt++;<span class="comment">//如果sum&gt;=30，则cnt++,输入密码次数cnt++</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SPOJ - REPEATS - Repeats（RMQ+后缀数组）</title>
      <link href="/article/SPOJ-REPEATS-Repeats.html"/>
      <url>/article/SPOJ-REPEATS-Repeats.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://www.spoj.com/problems/REPEATS/en/" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/82/2317bc82b176b2edbd0f05ea43b09d94fcb978.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>对于给出的字符串(长度&lt;= 50000,只包含字符’a’或’b’)找到最大的k使得存在某个字符串t重复k次是给出的字符串的子串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>如果每一个循环节的长度为len, 那么在原字符串S中, S[i<em>len]与S[(i + 1)</em>len]一定会被包含在答案的子串当中那么枚举可能的答案的循环节的长度, 然后枚举可能的位置, 对于每一组可能被包含的位置S[i<em>len], S[(i + 1)</em>len]求出其对应后缀的最长公共前缀长度L, 则该循环节至少循环了L/len + 1次, 但是当L%len != 0时, 后面多余出来的部分(长度L%len的部分)可能和前面的拼凑成循环节, 于是对于位置i<em>len - (len - L % len)和(i + 1)</em>len - (len - L % len)求其后缀的最长公共前缀长度, 如果大于之前的结果,自然就说明从这个位置开始可以比之前多一个循环节, 于是这样枚举得到最多循环次数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) for(i=0;i&lt;(n);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UPTO(i,l,h) for(i=(l);i&lt;=(h);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DOWN(i,h,l) for(i=(h);i&gt;=(l);--i)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> LEN&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">suffixarray</span>&#123;</span></span><br><span class="line">    <span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="keyword">int</span> str[LEN*<span class="number">3</span>],sa[LEN*<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> rank[LEN],height[LEN];</span><br><span class="line"><span class="keyword">int</span> id[LEN];</span><br><span class="line"><span class="keyword">int</span> best[LEN][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equal</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> str[a]==str[b]&amp;&amp;str[a+<span class="number">1</span>]==str[b+<span class="number">1</span>]&amp;&amp;str[a+<span class="number">2</span>]==str[b+<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *nstr, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(str[a]!=str[b])<span class="keyword">return</span> str[a]&lt;str[b];</span><br><span class="line"><span class="keyword">if</span>(str[a+<span class="number">1</span>]!=str[b+<span class="number">1</span>])<span class="keyword">return</span> str[a+<span class="number">1</span>]&lt;str[b+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> nstr[a+b%<span class="number">3</span>]&lt;nstr[b+b%<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">radixsort</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> *res, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">REP(i,m)id[i]=<span class="number">0</span>;</span><br><span class="line">REP(i,n)++id[str[sa[i]]];</span><br><span class="line">REP(i,m)id[i+<span class="number">1</span>]+=id[i];</span><br><span class="line">DOWN(i,n<span class="number">-1</span>,<span class="number">0</span>)res[--id[str[sa[i]]]]=sa[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dc3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x) ((x)/3+((x)%3==1?0:one))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x) ((x)&lt;one?(x)*3+1:((x)-one)*3+2)</span></span><br><span class="line"><span class="keyword">int</span> *nstr=str+n, *nsa=sa+n, *tmpa=rank, *tmpb=height;</span><br><span class="line"><span class="keyword">int</span> i,j,k,len=<span class="number">0</span>,num=<span class="number">0</span>,zero=<span class="number">0</span>,one=(n+<span class="number">1</span>)/<span class="number">3</span>;</span><br><span class="line">REP(i,n)<span class="keyword">if</span>(i%<span class="number">3</span>)tmpa[len++]=i;</span><br><span class="line">str[n]=str[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">radixsort(str+<span class="number">2</span>, tmpa, tmpb, len, m);</span><br><span class="line">radixsort(str+<span class="number">1</span>, tmpb, tmpa, len, m);</span><br><span class="line">radixsort(str+<span class="number">0</span>, tmpa, tmpb, len, m);</span><br><span class="line">nstr[F(tmpb[<span class="number">0</span>])]=num++;</span><br><span class="line">UPTO(i,<span class="number">1</span>,len<span class="number">-1</span>)</span><br><span class="line">nstr[F(tmpb[i])]=equal(str,tmpb[i<span class="number">-1</span>],tmpb[i])?num<span class="number">-1</span>:num++;</span><br><span class="line"><span class="keyword">if</span>(num&lt;len)dc3(nstr,nsa,len,num);</span><br><span class="line"><span class="keyword">else</span> REP(i,len)nsa[nstr[i]]=i;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">1</span>)tmpa[zero++]=n<span class="number">-1</span>;</span><br><span class="line">REP(i,len)<span class="keyword">if</span>(nsa[i]&lt;one)tmpa[zero++]=nsa[i]*<span class="number">3</span>;</span><br><span class="line">radixsort(str, tmpa, tmpb, zero, m);</span><br><span class="line">REP(i,len)tmpa[nsa[i]=G(nsa[i])]=i;</span><br><span class="line">i=j=<span class="number">0</span>;</span><br><span class="line">REP(k,n)</span><br><span class="line"><span class="keyword">if</span>(j&gt;=len||(i&lt;zero&amp;&amp;cmp3(str,tmpa,tmpb[i],nsa[j])))sa[k]=tmpb[i++];</span><br><span class="line"><span class="keyword">else</span> sa[k]=nsa[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initSA</span><span class="params">(T *s, <span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k=<span class="number">0</span>;</span><br><span class="line">str[len=n]=<span class="number">0</span>;<span class="comment">//末尾增加一个0，这样就省去一些特殊情况的讨论，也就是最后一个mod 3刚好等于0</span></span><br><span class="line">REP(i,n)str[i]=s[i];</span><br><span class="line">dc3(str,sa,n+<span class="number">1</span>,m);      <span class="comment">//可以切换成dc3</span></span><br><span class="line">REP(i,n)sa[i]=sa[i+<span class="number">1</span>];<span class="comment">//第0小的默认为最后一个字符0，所以答案向前移动一位，da算法不用</span></span><br><span class="line">        <span class="comment">//da(str,sa,n,m);</span></span><br><span class="line">REP(i,n)rank[sa[i]]=i;</span><br><span class="line">REP(i,n)<span class="comment">//计算height数组</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k)--k;</span><br><span class="line"><span class="keyword">if</span>(rank[i])<span class="keyword">for</span>(j=sa[rank[i]<span class="number">-1</span>];str[i+k]==str[j+k];++k);</span><br><span class="line"><span class="keyword">else</span> k=<span class="number">0</span>;</span><br><span class="line">height[rank[i]]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initRMQ</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> m=(<span class="keyword">int</span>)(<span class="built_in">log</span>(len*<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line">REP(i,len)best[i][<span class="number">0</span>]=height[i];</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=m;++j)</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;len;++i)</span><br><span class="line">best[i][j]=min(best[i][j<span class="number">-1</span>],best[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k=<span class="keyword">int</span>(<span class="built_in">log</span>(r-l+<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line"><span class="keyword">return</span> min(best[l][k],best[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCPSA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;<span class="comment">//查询区间RMQ(i,j)</span></span><br><span class="line">a=rank[a],b=rank[b];</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)swap(a,b);</span><br><span class="line"><span class="keyword">return</span> RMQ(a+<span class="number">1</span>,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">suffixarray&lt;<span class="keyword">int</span>,maxn&gt; msa;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span> ,<span class="keyword">int</span> &gt; mymap;   <span class="comment">//计算m,m表示不同字符个数，如果是字母直接用256</span></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> ss[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,Max=<span class="number">0</span>,ans,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        Max=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">            ss[i]=s[<span class="number">0</span>]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        msa.initSA(ss,len,<span class="number">4</span>);</span><br><span class="line">        msa.initRMQ();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;  <span class="comment">//枚举长度</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j+i&lt;len;j+=i)&#123;  <span class="comment">//+i极大的降低了复杂度</span></span><br><span class="line">                <span class="comment">//但也产生了需要向前比较的问题</span></span><br><span class="line">                ans=msa.LCPSA(j,j+i); <span class="comment">//公共后缀的长度</span></span><br><span class="line">                k=j-(i-ans%i); <span class="comment">//前推到k位置</span></span><br><span class="line">                ans=ans/i+<span class="number">1</span>;  <span class="comment">//出现次数</span></span><br><span class="line">                <span class="keyword">if</span>(k&gt;=<span class="number">0</span>&amp;&amp;msa.LCPSA(k,k+i)&gt;=i)ans++;</span><br><span class="line">                <span class="comment">//printf("L=%d,R=%d\n",i,ans);</span></span><br><span class="line">                Max=max(Max,ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Max);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串题解 </tag>
            
            <tag> 后缀数组 </tag>
            
            <tag> SPOJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>后缀自动机DC3模板</title>
      <link href="/article/Suffix-Array-DC3.html"/>
      <url>/article/Suffix-Array-DC3.html</url>
      
        <content type="html"><![CDATA[<p><strong>后缀数组一些性质</strong></p><blockquote><ul><li><p>suffix（j）和suffix（k）的最长公共前缀为height【rank【j】+1】到height【rank【k】】中的最小值；</p></li><li><p>待更新</p></li></ul></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">POJ-2406</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) for(i=0;i&lt;(n);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UPTO(i,l,h) for(i=(l);i&lt;=(h);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DOWN(i,h,l) for(i=(h);i&gt;=(l);--i)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> LEN&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">suffixarray</span>&#123;</span></span><br><span class="line">    <span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="keyword">int</span> str[LEN*<span class="number">3</span>],sa[LEN*<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> rank[LEN],height[LEN];</span><br><span class="line"><span class="keyword">int</span> id[LEN];</span><br><span class="line"><span class="keyword">int</span> best[LEN][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equal</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> str[a]==str[b]&amp;&amp;str[a+<span class="number">1</span>]==str[b+<span class="number">1</span>]&amp;&amp;str[a+<span class="number">2</span>]==str[b+<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *nstr, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(str[a]!=str[b])<span class="keyword">return</span> str[a]&lt;str[b];</span><br><span class="line"><span class="keyword">if</span>(str[a+<span class="number">1</span>]!=str[b+<span class="number">1</span>])<span class="keyword">return</span> str[a+<span class="number">1</span>]&lt;str[b+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> nstr[a+b%<span class="number">3</span>]&lt;nstr[b+b%<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">radixsort</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> *res, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">REP(i,m)id[i]=<span class="number">0</span>;</span><br><span class="line">REP(i,n)++id[str[sa[i]]];</span><br><span class="line">REP(i,m)id[i+<span class="number">1</span>]+=id[i];</span><br><span class="line">DOWN(i,n<span class="number">-1</span>,<span class="number">0</span>)res[--id[str[sa[i]]]]=sa[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dc3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x) ((x)/3+((x)%3==1?0:one))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x) ((x)&lt;one?(x)*3+1:((x)-one)*3+2)</span></span><br><span class="line"><span class="keyword">int</span> *nstr=str+n, *nsa=sa+n, *tmpa=rank, *tmpb=height;</span><br><span class="line"><span class="keyword">int</span> i,j,k,len=<span class="number">0</span>,num=<span class="number">0</span>,zero=<span class="number">0</span>,one=(n+<span class="number">1</span>)/<span class="number">3</span>;</span><br><span class="line">REP(i,n)<span class="keyword">if</span>(i%<span class="number">3</span>)tmpa[len++]=i;</span><br><span class="line">str[n]=str[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">radixsort(str+<span class="number">2</span>, tmpa, tmpb, len, m);</span><br><span class="line">radixsort(str+<span class="number">1</span>, tmpb, tmpa, len, m);</span><br><span class="line">radixsort(str+<span class="number">0</span>, tmpa, tmpb, len, m);</span><br><span class="line">nstr[F(tmpb[<span class="number">0</span>])]=num++;</span><br><span class="line">UPTO(i,<span class="number">1</span>,len<span class="number">-1</span>)</span><br><span class="line">nstr[F(tmpb[i])]=equal(str,tmpb[i<span class="number">-1</span>],tmpb[i])?num<span class="number">-1</span>:num++;</span><br><span class="line"><span class="keyword">if</span>(num&lt;len)dc3(nstr,nsa,len,num);</span><br><span class="line"><span class="keyword">else</span> REP(i,len)nsa[nstr[i]]=i;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">1</span>)tmpa[zero++]=n<span class="number">-1</span>;</span><br><span class="line">REP(i,len)<span class="keyword">if</span>(nsa[i]&lt;one)tmpa[zero++]=nsa[i]*<span class="number">3</span>;</span><br><span class="line">radixsort(str, tmpa, tmpb, zero, m);</span><br><span class="line">REP(i,len)tmpa[nsa[i]=G(nsa[i])]=i;</span><br><span class="line">i=j=<span class="number">0</span>;</span><br><span class="line">REP(k,n)</span><br><span class="line"><span class="keyword">if</span>(j&gt;=len||(i&lt;zero&amp;&amp;cmp3(str,tmpa,tmpb[i],nsa[j])))sa[k]=tmpb[i++];</span><br><span class="line"><span class="keyword">else</span> sa[k]=nsa[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initSA</span><span class="params">(T *s, <span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k=<span class="number">0</span>;</span><br><span class="line">str[len=n]=<span class="number">0</span>;<span class="comment">//末尾增加一个0，这样就省去一些特殊情况的讨论，也就是最后一个mod 3刚好等于0</span></span><br><span class="line">REP(i,n)str[i]=s[i];</span><br><span class="line">dc3(str,sa,n+<span class="number">1</span>,m);      <span class="comment">//可以切换成dc3</span></span><br><span class="line">REP(i,n)sa[i]=sa[i+<span class="number">1</span>];<span class="comment">//第0小的默认为最后一个字符0，所以答案向前移动一位，da算法不用</span></span><br><span class="line">        <span class="comment">//da(str,sa,n,m);</span></span><br><span class="line">REP(i,n)rank[sa[i]]=i;</span><br><span class="line">REP(i,n)<span class="comment">//计算height数组</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k)--k;</span><br><span class="line"><span class="keyword">if</span>(rank[i])<span class="keyword">for</span>(j=sa[rank[i]<span class="number">-1</span>];str[i+k]==str[j+k];++k);</span><br><span class="line"><span class="keyword">else</span> k=<span class="number">0</span>;</span><br><span class="line">height[rank[i]]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initRMQ</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> m=(<span class="keyword">int</span>)(<span class="built_in">log</span>(len*<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line">REP(i,len)best[i][<span class="number">0</span>]=height[i];</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=m;++j)</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;len;++i)</span><br><span class="line">best[i][j]=min(best[i][j<span class="number">-1</span>],best[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k=<span class="keyword">int</span>(<span class="built_in">log</span>(r-l+<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line"><span class="keyword">return</span> min(best[l][k],best[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCPSA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;<span class="comment">//查询区间RMQ(i,j)</span></span><br><span class="line">a=rank[a],b=rank[b];</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)swap(a,b);</span><br><span class="line"><span class="keyword">return</span> RMQ(a+<span class="number">1</span>,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">suffixarray&lt;<span class="keyword">char</span>,maxn&gt; msa;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span> ,<span class="keyword">int</span> &gt; mymap;   <span class="comment">//计算m,m表示不同字符个数，如果是字母直接用256</span></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s))&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'.'</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> len= <span class="built_in">strlen</span>(s);</span><br><span class="line">        msa.initSA(s,len,<span class="number">256</span>);</span><br><span class="line">         <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (len % i == <span class="number">0</span> &amp;&amp; msa.rank[<span class="number">0</span>] == msa.rank[i] + <span class="number">1</span> &amp;&amp; msa.height[msa.rank[<span class="number">0</span>]] == len - i) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len / i);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!flag)<span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>一些模板利用</strong></p><blockquote><p>求重复次数最多的连续重复子串</p><p>例题：<a href="https://vjudge.net/problem/19292/origin" target="_blank" rel="noopener">SPOJ - REPEATS-Repeats</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msa.initRMQ();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;  <span class="comment">//枚举长度</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j+i&lt;len;j+=i)&#123;  <span class="comment">//+i极大的降低了复杂度</span></span><br><span class="line">        <span class="comment">//但也产生了需要向前比较的问题</span></span><br><span class="line">        ans=msa.LCPSA(j,j+i); <span class="comment">//公共后缀的长度</span></span><br><span class="line">        k=j-(i-ans%i); <span class="comment">//前推到k位置</span></span><br><span class="line">        ans=ans/i+<span class="number">1</span>;  <span class="comment">//出现次数</span></span><br><span class="line">        <span class="keyword">if</span>(k&gt;=<span class="number">0</span>&amp;&amp;msa.LCPSA(k,k+i)&gt;=i)ans++;</span><br><span class="line">        <span class="comment">//printf("L=%d,R=%d\n",i,ans);</span></span><br><span class="line">        Max=max(Max,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Max);</span><br></pre></td></tr></table></figure><blockquote><p>求最小循环节</p><p>例题：<a href="https://vjudge.net/problem/POJ-2406" target="_blank" rel="noopener">POJ-2406 - Power Strings</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (len % i == <span class="number">0</span> &amp;&amp; msa.rank[<span class="number">0</span>] == msa.rank[i] + <span class="number">1</span> &amp;&amp; msa.height[msa.rank[<span class="number">0</span>]] == len - i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len / i);</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag)<span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br></pre></td></tr></table></figure><blockquote><p>求两串中长度大于k的公共子串有多少个。</p><p>例题：<a href="https://vjudge.net/problem/12599/origin" target="_blank" rel="noopener">POJ - 3415 - Common Substrings</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line">    ll ans=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(msa.height[i]&lt;k)tot=<span class="number">0</span>,top=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i<span class="number">-1</span>]&lt;lena)&#123;     <span class="comment">//说明不在同一串中</span></span><br><span class="line">                cnt++;</span><br><span class="line">                tot+=msa.height[i]-k+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(top&amp;&amp;msa.height[i]&lt;=sta[top<span class="number">-1</span>][<span class="number">0</span>])&#123;</span><br><span class="line">                top--;</span><br><span class="line">                tot+=(msa.height[i]-sta[top][<span class="number">0</span>])*sta[top][<span class="number">1</span>];</span><br><span class="line">                cnt+=sta[top][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            sta[top][<span class="number">0</span>]=msa.height[i],sta[top++][<span class="number">1</span>]=cnt;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i]&gt;lena)ans+=tot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tot=top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(msa.height[i]&lt;k)tot=<span class="number">0</span>,top=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i<span class="number">-1</span>]&gt;lena)&#123;     <span class="comment">//说明不在同一串中</span></span><br><span class="line">                cnt++;</span><br><span class="line">                tot+=msa.height[i]-k+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(top&amp;&amp;msa.height[i]&lt;=sta[top<span class="number">-1</span>][<span class="number">0</span>])&#123;</span><br><span class="line">                top--;</span><br><span class="line">                tot+=(msa.height[i]-sta[top][<span class="number">0</span>])*sta[top][<span class="number">1</span>];</span><br><span class="line">                cnt+=sta[top][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            sta[top][<span class="number">0</span>]=msa.height[i],sta[top++][<span class="number">1</span>]=cnt;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i]&lt;lena)ans+=tot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-3336-Count the string（KMP-Next数组性质）</title>
      <link href="/article/HDU-3336-Count-the-string%EF%BC%88KMP-Next%E6%95%B0%E7%BB%84%E6%80%A7%E8%B4%A8%EF%BC%89.html"/>
      <url>/article/HDU-3336-Count-the-string%EF%BC%88KMP-Next%E6%95%B0%E7%BB%84%E6%80%A7%E8%B4%A8%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3336" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/fb/fdacc6c783890b2f4ad1eafef72092b30e5d6b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>求一个串中所有前缀子串出现次数之和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>对于每个串他前缀串出现次数和一定大于或等于n,因为有n个前缀；所以此时只需要去计算一下每一个前缀在后面出现了几次，也就是next数组的值。结合next数组的性质可以很容易得知，next数组中存在一个非0位，就出现了一种前缀，ans就++。所以只需对字符串求一遍next数组，统计都是个非零元素就可以了。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2</span>*<span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">0</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">1</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">Get_nex();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (nex[i] != <span class="number">0</span>)ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (n + ans) % <span class="number">10007</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2406-Power Strings(循环节)</title>
      <link href="/article/POJ-2406-Power-Strings.html"/>
      <url>/article/POJ-2406-Power-Strings.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://poj.org/problem?id=2046" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/fa/99917b832740706fd924e09a7586daaad5d82b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给我们一个字符串，我们要求出它最多由几个相同的连续子串连接而成。也就是求最小循环节</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先注意到如果他是循环子串那么n-next[n]一定是最小循环节。于是可以先求出nxt然后暴力匹配一遍看看。但是事实上只要满足n%(n-next[n])==0就可以保证答案正确了。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> Next[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Nex</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=s[j+<span class="number">1</span>]&amp;&amp;j!=<span class="number">-1</span>)j=Next[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>]&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">        Next[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s))&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'.'</span>)<span class="keyword">break</span>;</span><br><span class="line">        Get_Nex();</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">int</span> L=Next[len<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(len%(len-L<span class="number">-1</span>)==<span class="number">0</span>)ans=len/(len-L<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ - 3974 - Palindrome(裸马拉车)</title>
      <link href="/article/POJ-3974-Palindrome-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html"/>
      <url>/article/POJ-3974-Palindrome-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://poj.org/problem?id=3974" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/a2/4c803db0501e6785e47e12d645dfee64c18e0d.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个字符串，求连续最长的回文子串的长度。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用Manacher算法，裸的模板题，不多说了。不懂Manacher算法—-见<a href="https://blog.csdn.net/Anoy_acer/article/details/81102233" target="_blank" rel="noopener">Manacher最长回文串算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line">maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s))&#123;</span><br><span class="line">t++;</span><br><span class="line"><span class="built_in">memset</span>(p, <span class="number">0</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'E'</span>&amp;&amp;s[<span class="number">1</span>] == <span class="string">'N'</span>&amp;&amp;s[<span class="number">2</span>] == <span class="string">'D'</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, t, Manacher());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-3746-Cyclic Nacklace （KMP求循环节）</title>
      <link href="/article/HDU-3746-Cyclic-Nacklace-%EF%BC%88KMP%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html"/>
      <url>/article/HDU-3746-Cyclic-Nacklace-%EF%BC%88KMP%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3746" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/68/60e881361a8ea56aaa4d25b2e238630d2a441a.png" alt=""></p><p>Sample Input</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;3</span><br><span class="line">&gt;aaa</span><br><span class="line">&gt;abca</span><br><span class="line">&gt;abcde</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>Sample Output</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 0</span><br><span class="line">&gt; 2</span><br><span class="line">&gt; 5</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一些串，问如果想让这个串里面的循环节至少循环两次，需要添加几个字符（只能在最前面或者最后面添加）。比如ababc 需要添加5个就是添加ababc。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用Next数组的性质：</p><p>符合 <strong>i % ( i - next[i] ) == 0 &amp;&amp; next[i] != 0 , 则**</strong>说明字符串循环，而且**</p><p><strong>循环节长度为: i - next[i]</strong></p><p>循环次数为: i / ( i - next[i] )</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, next[N];</span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">n = <span class="built_in">strlen</span> (str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (p &gt; <span class="number">0</span> &amp;&amp; str[p+<span class="number">1</span>] != str[i])</span><br><span class="line">p = next[p];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (str[p+<span class="number">1</span>] == str[i])</span><br><span class="line">p++;</span><br><span class="line">next[i] = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cas;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cas);</span><br><span class="line"><span class="keyword">while</span> (cas--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str+<span class="number">1</span>);</span><br><span class="line">getNext();</span><br><span class="line"><span class="keyword">int</span> n= <span class="built_in">strlen</span> (str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (next[n] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> k = n - next[n];</span><br><span class="line"><span class="keyword">if</span> (n%k == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, k - (n - (n/k) * k));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round #525 (Div. 2) -C. Ehab and a 2-operation task</title>
      <link href="/article/Codeforces-Round-525-Div-2-C-Ehab-and-a-2-operation-task.html"/>
      <url>/article/Codeforces-Round-525-Div-2-C-Ehab-and-a-2-operation-task.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://codeforces.com/contest/1088/problem/C" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/47/e4b495b1a9027c37f160a62f49c2fb94ddc31d.png" alt=""></p><pre><code>**Note**In the first sample, the array is already increasing so we don&apos;t need any operations.In the second sample:In the first step: the array becomes [8,6,3].In the second step: the array becomes [0,2,3].    </code></pre><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个n，然后n个数a[1~n],现在你可以对数组进行两种操作：</p><ul><li>对a[1~i]所有的数+x</li><li>对a[1~i]所有的数对x取模</li></ul><p>要求你在n+1次操作内将数组a变成一个递增序列，并输出每次的操作（答案不唯一）</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>答案说了可以n+1次，那么就先对每个位置都进行一次操作1，让所有数在着n次1操作结束后对n取模值等于下表i，因为每次操作影响范围为1~i，所以可以选择倒着扫，保证处理过的数不会再变化。最后进行一次操作2，对1~n进行对n取模</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e4</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        ans=(i-(a[i]+sum)%(n+<span class="number">1</span>)+n+<span class="number">1</span>)%(n+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1 %d %d\n"</span>,i,ans);</span><br><span class="line">        sum+=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"2 %d %d\n"</span>,n,n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round #525 (Div. 2)-B. Ehab and subtraction</title>
      <link href="/article/Codeforces-Round-525-Div-2-B-Ehab-and-subtraction.html"/>
      <url>/article/Codeforces-Round-525-Div-2-B-Ehab-and-subtraction.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://codeforces.com/contest/1088/problem/B" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/e6/334111023f4887778556d14a0f6b8455941f70.png" alt=""></p><p><strong>Note</strong></p><p>In the first sample:</p><p>In the first step: the array is [1,2,3][1,2,3], so the minimum non-zero element is 1.</p><p>In the second step: the array is [0,1,2][0,1,2], so the minimum non-zero element is 1.</p><p>In the third step: the array is [0,0,1][0,0,1], so the minimum non-zero element is 1.</p><p>In the fourth and fifth step: the array is [0,0,0][0,0,0], so we printed 0.</p><p>In the second sample:</p><p>In the first step: the array is [10,3,5,3][10,3,5,3], so the minimum non-zero element is 3.</p><p>In the second step: the array is [7,0,2,0][7,0,2,0], so the minimum non-zero element is 2.</p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你两个整数n,k,然后n个整数a[1~n]。然后进行k次操作，每次操作打印出最小非零元素，并把所有非零元素减去这个数；如果没有没有非零数了就打印零</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先用sort对a排序，然后从最小位置开始消，同时定义一个变量sum，记录每一次操作前面减去数字的和，也就是当前位置需要减的数字。同时特判下当前位置数-sum==0，如果为真直接跳过看下一位，同时因为跳过了所以一定要k++;</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=n)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]-sum==<span class="number">0</span>)&#123;</span><br><span class="line">                k++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[i]-sum);</span><br><span class="line">            sum=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round #525 (Div. 2) (2)-A. Ehab and another construction problem</title>
      <link href="/article/Codeforces-Round-525-Div-2-2-A-Ehab-and-another-construction-problem.html"/>
      <url>/article/Codeforces-Round-525-Div-2-2-A-Ehab-and-another-construction-problem.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://codeforces.com/contest/1088/problem/A" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/a3/621951f785b25681e0a1c0f2d4d54967206a9a.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个x,让你求出两个整数a,b，满足他给的那些条件</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>数据范围很小就100，直接O(n*n)暴力枚举就可以了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%j==<span class="number">0</span>&amp;&amp;j*i&gt;x)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,j);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 暴力题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-2328-Corporate Identity(利用string函数)</title>
      <link href="/article/HDU-2328-Corporate-Identity-%E5%88%A9%E7%94%A8string%E5%87%BD%E6%95%B0.html"/>
      <url>/article/HDU-2328-Corporate-Identity-%E5%88%A9%E7%94%A8string%E5%87%BD%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2328" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/ab/a1f5037aeeb263530ce8bcb3a394ef2d26defd.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你n个字符串，问你这n个串的最长公共子串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>题目和HDU-1238感觉差不多，暴力枚举任意一个字符串的所有子串，然后暴力匹配，这里用string解决的；</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">4050</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>((<span class="built_in">cin</span>&gt;&gt;n)&amp;&amp;n!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span> t;</span><br><span class="line">        <span class="keyword">int</span> cot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len=s[<span class="number">1</span>].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len-i;j++)&#123;      <span class="comment">//枚举子串长度</span></span><br><span class="line">                <span class="keyword">if</span>(j&lt;maxx)<span class="keyword">continue</span>;</span><br><span class="line">                cot=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">2</span>;k&lt;=n;k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[k].find(s[<span class="number">1</span>].substr(i,j))==<span class="built_in">string</span>::npos)<span class="keyword">break</span>; <span class="comment">//string函数查找</span></span><br><span class="line">                    <span class="keyword">else</span> cot++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(cot==n<span class="number">-1</span>)&#123;<span class="comment">//如果这个子串出现了n-1次，选取的那个串本身就有一次，则维护maxx</span></span><br><span class="line">                    <span class="keyword">if</span>(maxx&lt;j)&#123;</span><br><span class="line">                        maxx=j;</span><br><span class="line">                        t=s[<span class="number">1</span>].substr(i,j);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(maxx==j)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(t&gt;s[<span class="number">1</span>].substr(i,j))t=s[<span class="number">1</span>].substr(i,j);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(maxx==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"IDENTITY LOST"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;t&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1238-Substrings(求公共子串)</title>
      <link href="/article/HDU-1238-Substrings-%E6%B1%82%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2.html"/>
      <url>/article/HDU-1238-Substrings-%E6%B1%82%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1238" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/1c/505dfba42792af3c1149d623746d83766bc4f7.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>找出所有字符串中共同拥有的一个子串，该子串（正、逆字符）是任何一个母串的子串，求该子串的最长长度。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用string库里的find函数+STL中的reverse反转函数。先找出最短的母串，即该符合要求的子串肯定在这个母串中，即在从长到短，从最短母串中取子串，在子串正反去查看是否符合要求。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> ( t--) &#123;</span><br><span class="line"><span class="keyword">int</span> n,sub;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s[i];</span><br><span class="line"><span class="keyword">if</span> (s[i].size() &lt; len)len = s[i].size(), sub = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = s[sub].size(); i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= s[sub].size(); j++) &#123;</span><br><span class="line"><span class="built_in">string</span> s1, s2;</span><br><span class="line">s1 = s[sub].substr(j, i);</span><br><span class="line">s2 = s1;</span><br><span class="line">reverse(s2.begin(), s2.end());   <span class="comment">//反转</span></span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[k].find(s1, <span class="number">0</span>) == <span class="number">-1</span> &amp;&amp; s[k].find(s2, <span class="number">0</span>) == <span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (k == n &amp;&amp; maxn &lt; s1.size())maxn = s1.size();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, maxn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 4847 - Wow! Such Doge!(暴力)</title>
      <link href="/article/HDU-4847-Wow-Such-Doge-%E6%9A%B4%E5%8A%9B.html"/>
      <url>/article/HDU-4847-Wow-Such-Doge-%E6%9A%B4%E5%8A%9B.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4847" target="_blank" rel="noopener">题目链接</a></h2><blockquote><p><strong>题面太长了，就不上题目截图了QAQ</strong></p></blockquote><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><blockquote><p>在给出的段落里面找出“doge”出现的次数，大小写都可以。<del>（超级大水题，就考你输入恶心恶心人）</del></p></blockquote><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><blockquote><p>直接暴力求每一句话出现的<code>doge</code>次数（大小写不限），在一块就可以了输入格式处理—-把类似于“Wow! Such Dooooooooooooooge!!!“这种一行输入看出多个字符串输入，这里看成三个字符串，所以直接用%s存，存一个处理一个</p></blockquote><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">21</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s)!=EOF)&#123;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span>(len&lt;<span class="number">3</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-3</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((s[i]==<span class="string">'d'</span>||s[i]==<span class="string">'D'</span>)&amp;&amp;(s[i+<span class="number">1</span>]==<span class="string">'o'</span>||s[i+<span class="number">1</span>]==<span class="string">'O'</span>)&amp;&amp;(s[i+<span class="number">2</span>]==<span class="string">'g'</span>||s[i+<span class="number">2</span>]==<span class="string">'G'</span>)&amp;&amp;(s[i+<span class="number">3</span>]==<span class="string">'e'</span>||s[i+<span class="number">3</span>]==<span class="string">'E'</span>))&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                i+=<span class="number">3</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 4513 - 吉哥系列故事――完美队形II (马拉车加判断条件)</title>
      <link href="/article/HDU-4513-%E5%90%89%E5%93%A5%E7%B3%BB%E5%88%97%E6%95%85%E4%BA%8B%E2%80%95%E2%80%95%E5%AE%8C%E7%BE%8E%E9%98%9F%E5%BD%A2II-%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E5%88%A4%E6%96%AD%E6%9D%A1%E4%BB%B6.html"/>
      <url>/article/HDU-4513-%E5%90%89%E5%93%A5%E7%B3%BB%E5%88%97%E6%95%85%E4%BA%8B%E2%80%95%E2%80%95%E5%AE%8C%E7%BE%8E%E9%98%9F%E5%BD%A2II-%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E5%88%A4%E6%96%AD%E6%9D%A1%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4513" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/81/435a266aa4c1e6e9a9385cc5642bc379cec801.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>在一个长度为n的数组里面找回文串，要求回文串从中间向两边一次递减</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>在manacher过程中添加限制语句保证题目要求即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s_new[i+p[i]]!=<span class="number">-1111</span>)&#123;   <span class="comment">//如果前面位置大于当前位置，则不符合跳出</span></span><br><span class="line">    <span class="keyword">if</span>(s_new[i+p[i]]&lt;=s_new[i+p[i]<span class="number">-2</span>])p[i]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">100050</span>];</span><br><span class="line"><span class="keyword">int</span> s_new[<span class="number">100050</span>*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">100050</span>*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    s_new[<span class="number">0</span>] = <span class="number">-111</span>;</span><br><span class="line">    s_new[<span class="number">1</span>] = <span class="number">-1111</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">        s_new[j++] = s[i];</span><br><span class="line">        s_new[j++] = <span class="number">-1111</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    s_new[j] = <span class="number">-11</span>;  <span class="comment">//别忘了哦</span></span><br><span class="line">    <span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">(<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;        <span class="comment">//取得新字符串长度并完成向s_new的转换</span></span><br><span class="line">    <span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">            p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p[i] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">if</span>(s_new[i+p[i]]!=<span class="number">-1111</span>)&#123;   <span class="comment">//如果前面位置大于当前位置，则不符合跳出</span></span><br><span class="line">                <span class="keyword">if</span>(s_new[i+p[i]]&lt;=s_new[i+p[i]<span class="number">-2</span>])p[i]++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p[i]++;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率</span></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">            id = i;</span><br><span class="line">            mx = i + p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span> (t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s[i]);</span><br><span class="line">        <span class="keyword">int</span> len=Init(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Manacher(len));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 4763 -Theme Section(迭代求公共前后缀跑KMP)</title>
      <link href="/article/HDU-4763-Theme-Section-%E8%BF%AD%E4%BB%A3%E6%B1%82%E5%85%AC%E5%85%B1%E5%89%8D%E5%90%8E%E7%BC%80%E8%B7%91KMP.html"/>
      <url>/article/HDU-4763-Theme-Section-%E8%BF%AD%E4%BB%A3%E6%B1%82%E5%85%AC%E5%85%B1%E5%89%8D%E5%90%8E%E7%BC%80%E8%B7%91KMP.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4763" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/a2/ec2c1e9e86d7e9d645dbff2b4f70dabfbcb2e9.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个字符串，求出字符串的最大的相同前缀后缀，并且满足前缀后缀在字符串中间出现了。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>可以先对字符串跑KMP求一下Next数组，由next数组定义可以知道，里面存的是当前字符最长前缀和后缀，所以我们只需要从最后一个字符出发，递归寻找每个长度为的Next值的前缀后缀，对于长度为len的前缀，只需要用该前缀起和字符串的除了前缀和后缀的部分匹配就可以了，如果匹配成功，就看是否需要更新答案。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">21</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNex</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=s[j+<span class="number">1</span>]&amp;&amp;j!=<span class="number">-1</span>)j=nex[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>]&amp;&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">        nex[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;len-l;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;s[j+<span class="number">1</span>]!=s[i])j=nex[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>])j++;</span><br><span class="line">        <span class="keyword">if</span>(j+<span class="number">1</span>==l)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span>(len&lt;<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GetNex();</span><br><span class="line">        <span class="keyword">int</span> ans=nex[len<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">int</span> mx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(ans!=<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(kmp(ans+<span class="number">1</span>))&#123;</span><br><span class="line">                mx=max(mx,ans+<span class="number">1</span>);  <span class="comment">//查找中间是否有这个串</span></span><br><span class="line">            &#125;</span><br><span class="line">            ans=nex[ans];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 3613 - Best Reward（马拉车加暴力）</title>
      <link href="/article/HDU-3613-Best-Reward%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E6%9A%B4%E5%8A%9B%EF%BC%89.html"/>
      <url>/article/HDU-3613-Best-Reward%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E6%9A%B4%E5%8A%9B%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3613" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/60/07b33780557d35b42be57cc6a1db5c55d14a99.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>字母表的26个字母都有一个价值，给你一个字符串，将该字符串切成两份，对于每一份，如果是回文串，就获得该子串的字母价值之和，否则该子串的价值为0。求出将字符串切成两份后能够获得的最大价值。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先用Manacher算法求出以每个字母为中心的回文串的长度，并计算该字符串的前缀价值和。然后枚举切割点，得到两份子串。这样就可以知道每个子串的中心点，然后检查以该子串的中心点作为中心点的回文串的长度，如果长度等于该子串的长度，那么就加上该子串的价值。然后和最优价值比较就行了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> sum[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="comment">//int maxLen = -1;   //最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//maxLen = max(maxLen, p[i] - 1);</span></span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="built_in">memset</span>(p, <span class="number">0</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">sum[<span class="number">0</span>] = v[s[<span class="number">0</span>] - <span class="string">'a'</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i]; i++)&#123;</span><br><span class="line">sum[i] = sum[i - <span class="number">1</span>] + v[s[i] - <span class="string">'a'</span>];</span><br><span class="line">&#125;</span><br><span class="line">Manacher();</span><br><span class="line"><span class="keyword">int</span> Mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num = p[i + <span class="number">2</span>] - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (num == i + <span class="number">1</span>)tmp += sum[i];</span><br><span class="line">num = p[i + len + <span class="number">2</span>] - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (num == len - i - <span class="number">1</span>)tmp += sum[len - <span class="number">1</span>] - sum[i];</span><br><span class="line"><span class="keyword">if</span> (tmp&gt;Mx)Mx = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Mx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 3294 - Girls research(裸马拉车)</title>
      <link href="/article/HDU-3294-Girls-research-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html"/>
      <url>/article/HDU-3294-Girls-research-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3294" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/3d/5819f0c145db07896823987a5fe2bb98ce8c2b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>通过第一个字符与a的关系翻译字符串，输出最长回文串和首尾下标，不存在则输出No solution!</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>用manachar求出最长回文串中心和半径，因为变换后的串各字符下标改变了，所以输出原首尾下标要公式倒推<br>输出字符时要跳过插入的符号。如果你没有马拉车板子，或者说你不会马拉车，请见<a href="https://blog.csdn.net/Anoy_acer/article/details/81102233" target="_blank" rel="noopener">Manacher最长回文串算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> iid = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p[i] - <span class="number">1</span>&gt;maxLen)&#123;</span><br><span class="line">maxLen = p[i] - <span class="number">1</span>;</span><br><span class="line">iid = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch ;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%c%s"</span>,&amp;ch,s)!=EOF)&#123;</span><br><span class="line">getchar();</span><br><span class="line"><span class="comment">//memset(p, 0, sizeof(p));</span></span><br><span class="line"><span class="keyword">int</span> k = ch - <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++)&#123;</span><br><span class="line">s[i] -= k;</span><br><span class="line"><span class="keyword">if</span> (s[i] &lt; <span class="string">'a'</span>)s[i] += <span class="string">'z'</span> - <span class="string">'a'</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mx = Manacher();</span><br><span class="line"><span class="keyword">if</span> (mx == <span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"No solution!\n"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, (iid - mx + <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span> , (iid + mx - <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span> );</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = (iid - mx + <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span>; i &lt;= (iid + mx - <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span>; i++)<span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 3068 - 最长回文(裸马拉车)</title>
      <link href="/article/HDU-3068-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html"/>
      <url>/article/HDU-3068-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3068" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/6f/2b754e3cae5ca6082b6d4ceaae0d7c4a4d13d4.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给出一个只由小写英文字符a,b,c…y,z组成的字符串S,求S中最长回文串的长度.<del>回文就是正反读都是一样的字符串,如aba, abba等</del></p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>裸的马拉车（Manacher）算法，直接上板子就够了。如果你没有马拉车板子，或者说你不会马拉车，请见<a href="https://blog.csdn.net/Anoy_acer/article/details/81102233" target="_blank" rel="noopener">Manacher最长回文串算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">110050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line">maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s)!=EOF)&#123;</span><br><span class="line">getchar();</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">memset</span>(p, <span class="number">0</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'E'</span>&amp;&amp;s[<span class="number">1</span>] == <span class="string">'N'</span>&amp;&amp;s[<span class="number">2</span>] == <span class="string">'D'</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Manacher());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 2609 - How many （最小表示法+set除重）</title>
      <link href="/article/HDU-2609-How-many-%EF%BC%88%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95-set%E9%99%A4%E9%87%8D%EF%BC%89.html"/>
      <url>/article/HDU-2609-How-many-%EF%BC%88%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95-set%E9%99%A4%E9%87%8D%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2609" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/6e/9fbb82d7bd3c7c900dde14f54b53f6df4b6138.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>有n个环形字符串，一个环形字符串移动会形成不能的字符串，我们把它们看作同一串字符串，求有多少个不同的字符串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>用最小表示法把每个串的最小字典序找出来, ==(如果两个循环串相等则他们的最小字典序也一定相等)==,set带有除重功能，因为<code>set</code>具有除重功能所以用<code>set</code>来存每个串求出的最小字典序</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e4</span>+<span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt;sub;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">            len=s.size();</span><br><span class="line">            s+=s;</span><br><span class="line">            <span class="keyword">int</span> l=GetMin();</span><br><span class="line">            sub.insert(s.substr(l,len));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sub.size());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> 最大最小表示法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 2087-减花布条(裸KMP模板)</title>
      <link href="/article/HDU-2087-%E5%87%8F%E8%8A%B1%E5%B8%83%E6%9D%A1-%E8%A3%B8KMP%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/HDU-2087-%E5%87%8F%E8%8A%B1%E5%B8%83%E6%9D%A1-%E8%A3%B8KMP%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2087" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/d9/ccd006228581c5bdc16d88fba3ec6bb2046880.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>中文题面，题意也说得非常清楚了，给一个文本串，求文本串中有多少个不重复的模式串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>kmp标准做法，甚至基本没有变动。 判断的时候，每当完整的匹配一次之后令j=0，ans++，即模式串的下标从0开始，匹配数量加1</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000030</span>;</span><br><span class="line"><span class="keyword">int</span> next1[<span class="number">10030</span>];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> p[<span class="number">10030</span>];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prefix_next</span><span class="params">()</span></span>&#123;</span><br><span class="line">next1[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">next1[<span class="number">1</span>]=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;p[i]!=<span class="string">'\0'</span>;i++)&#123;</span><br><span class="line">        j = next1[i];   </span><br><span class="line">        <span class="keyword">while</span>(j &amp;&amp; p[j] != p[i]) j = next1[j];  </span><br><span class="line">        next1[i+<span class="number">1</span>] = p[j] == p[i] ? j + <span class="number">1</span>: <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>,m=<span class="built_in">strlen</span>(p),n=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i]!=<span class="string">'\0'</span>;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j &amp;&amp; p[j] != s[i]) j = next1[j];  </span><br><span class="line">        <span class="keyword">if</span>(p[j] == s[i]) j ++;  </span><br><span class="line">        <span class="keyword">if</span>(j == m) &#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span>(i+m&lt;n)</span><br><span class="line">        j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">/*#ifdef LOCAL</span></span><br><span class="line"><span class="comment">freopen("C:/Users/Administrator/Desktop/input.txt","r",stdin);</span></span><br><span class="line"><span class="comment">#endif*/</span></span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s),<span class="built_in">strcmp</span>(s,<span class="string">"#"</span>))&#123;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;p;</span><br><span class="line">prefix_next();</span><br><span class="line">kmp();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1711-Number Sequence(数组跑KMP)</title>
      <link href="/article/HDU-1711-Number-Sequence-%E6%95%B0%E7%BB%84%E8%B7%91KMP.html"/>
      <url>/article/HDU-1711-Number-Sequence-%E6%95%B0%E7%BB%84%E8%B7%91KMP.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1711" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/02/c93a1d9d16981b0ff94f816e7948280132025b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你两个数组的所有元素，让你对它们进行匹配，当位置为多少时候它们能完全匹配。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>直接跑KMP就可以了，唯一注意的…..emmm….应该不用注意吧，也就原先是字符串，现在把字符串换成数组<del>超级大水题</del></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">1000100</span>],t[<span class="number">11000</span>];</span><br><span class="line"><span class="keyword">int</span> nex[<span class="number">1000100</span>];<span class="comment">//nex数组大小和短串一致</span></span><br><span class="line"><span class="keyword">int</span> ans,n,m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">get_nex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;<span class="comment">//影响next[0] </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(t[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>)</span><br><span class="line">j=nex[j];</span><br><span class="line">        <span class="keyword">if</span> (t[i]==t[j+<span class="number">1</span>] &amp;&amp; i!=<span class="number">0</span>) </span><br><span class="line">j++;</span><br><span class="line">        nex[i]=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>) </span><br><span class="line">j=nex[j];</span><br><span class="line">        <span class="keyword">if</span> (s[i]==t[j+<span class="number">1</span>]) j++;</span><br><span class="line">        <span class="keyword">if</span> (j==m<span class="number">-1</span>)&#123;</span><br><span class="line">        ans++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i-j+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tt;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line"><span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t[i]);</span><br><span class="line">get_nex();</span><br><span class="line">kmp();</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1841-Find the Shortest Common Superstring（kmp）</title>
      <link href="/article/HDU-1841-Find-the-Shortest-Common-Superstring%EF%BC%88kmp%EF%BC%89.html"/>
      <url>/article/HDU-1841-Find-the-Shortest-Common-Superstring%EF%BC%88kmp%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1841" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/55/f23bb1e1b105188b2f30461767ee855b2c98ab.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给出两个串，用这两个串组成一个新串，使新串包含这两个串，问这个新串的长度最小是多少；</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>显然，对于两个串A，B；A如果是B的子串或者B如果是A的子串的话，直接输出那个母串的长度即可，如果没有这种关系，那么看一个串的后缀是否是另一个串的前缀，如果某个串的后缀与另一个串的前缀的公共部分最长，则答案=A.length+B.length-公共长度，所以可以直接用kmp去做。(kmp匹配最后j值为模式串前缀和主串后缀最长公共长度)</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000100</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">3</span>][<span class="number">2</span>*N];</span><br><span class="line"><span class="keyword">int</span> fail[<span class="number">2</span>*N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> &amp;i, <span class="keyword">int</span> &amp;j, <span class="keyword">char</span>* str, <span class="keyword">char</span>* pat)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">memset</span>(fail, <span class="number">-1</span>, <span class="keyword">sizeof</span>(fail));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; pat[i]; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (k = fail[i - <span class="number">1</span>]; k &gt;= <span class="number">0</span> &amp;&amp; pat[i] != pat[k + <span class="number">1</span>]; k = fail[k]);</span><br><span class="line">        <span class="keyword">if</span> (pat[k + <span class="number">1</span>] == pat[i])&#123;</span><br><span class="line">            fail[i] = k + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i = j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i] &amp;&amp; pat[j])&#123;</span><br><span class="line">        <span class="keyword">if</span> (pat[j] == str[i])&#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>)&#123;</span><br><span class="line">            i++;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            j = fail[j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf("%d %d\n",i,j);</span></span><br><span class="line">    <span class="keyword">if</span> (pat[j])&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i - j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, l1 = <span class="number">0</span>, l2 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[<span class="number">0</span>] &gt;&gt; a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> len1 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">0</span>]), len2 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">1</span>]), val;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">1</span>], a[<span class="number">0</span>]);            </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)&#123;</span><br><span class="line">            l1 = len1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len2 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">1</span>][len2 - <span class="number">1</span>] == a[<span class="number">0</span>][j - <span class="number">1</span>])&#123;</span><br><span class="line">                l1 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">0</span>], a[<span class="number">1</span>]);           </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)&#123;</span><br><span class="line">            l2 = len2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len1 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>][len1 - <span class="number">1</span>] == a[<span class="number">1</span>][j - <span class="number">1</span>])&#123;</span><br><span class="line">                l2 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len1 + len2 - max(l1, l2));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python入门教程</title>
      <link href="/article/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html"/>
      <url>/article/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>1.注释———# 标注文本</p><p>2.数字</p><ul><li>整数，不区分long和int<ul><li>进制0xa (16进制的10),0o10（8进制的10）,0b10（2进制的10）</li><li>bool，2个值True，False</li></ul></li><li>浮点数<ul><li>1.2，3.1415.-0.12，1.46e9等价于1.46*10^9</li></ul></li><li>复数，1+2j</li></ul><p>3.字符串</p><ul><li><p>使用‘ “单双引号引用字符的序列</p></li><li><p>‘ ’ ‘ ” “ ” 单双三引号，可以跨行，可以在其中自由的使用单双引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">''' welcome 'to' python'''</span>) <span class="comment">#输出  welcome 'to' python</span></span><br><span class="line">print(<span class="string">''' welcome 'to' </span></span><br><span class="line"><span class="string">1\#输出welcome 'to'</span></span><br><span class="line"><span class="string">2\# 123</span></span><br><span class="line"><span class="string">3\#    'python'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'python' '''</span>)</span><br></pre></td></tr></table></figure></li><li><p>在字符串前面加上r或者R前缀，表示该字符串不做特殊处理(比如字符串中含有\)</p></li><li><p>python为强类型语言，所以不允许’<code>a‘+1</code></p></li><li><p>字符串可以直接连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'abc'</span>+<span class="string">'efg'</span>)  <span class="comment">#打印出abcefg</span></span><br></pre></td></tr></table></figure></li></ul><p>4.转义序列</p><ul><li>\\ \t \r \n \‘ \“</li><li>前缀r,把里面的所有的字符当普通字符对待</li></ul><p>5.缩进</p><ul><li>未使用C等语言的花括号，而是采用缩进的方式表示层次关系</li><li>约定使用4个空格缩进</li></ul><p>6.续行</p><ul><li>在行尾使用 \</li><li>如果使用各种括号，认为括号内的是一个整体，内部跨行不用 \</li></ul><p>7.标识符</p><ul><li><p>一个名字，用来指代一个值</p></li><li><p>只能字母，下划线和数字</p></li><li><p>只能以字母或下划线开头</p></li><li><p>不能是python的关键字，例如def，class就不能作为标识符</p></li><li><p>python是大小写敏感的</p><p>约定：</p><p>不允许使用中文</p><p>不允许使用歧义单词，例如class_</p><p>在python中不要随便使用下划线开头的标识符</p></li></ul><p>8.常量</p><ul><li>一旦赋值就不能改变值的标识符</li><li>python中无法定义常量</li></ul><p>9.字面常量</p><ul><li>一个单独的量，例如12，“abc”,’2341356514.03e-9’</li></ul><p>10.变量</p><ul><li>赋值后，可以改变值的标识符</li></ul><h2 id="运算符Operator"><a href="#运算符Operator" class="headerlink" title="运算符Operator"></a>运算符Operator</h2><p>1.算数运算符</p><ul><li><p>+ - * / % **</p><ul><li><p>**表示次方</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">2</span>**<span class="number">3</span>)  <span class="comment">#输出 8</span></span><br><span class="line">print(<span class="number">4</span>**<span class="number">0.5</span>) <span class="comment">#输出 2.0</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>自然除/结果是浮点数，整除//。注：2.x中对于整数都是/和//都是整除</p></li></ul><p>2.位运算符</p><ul><li><p>&amp; | ~ ^ &lt;&lt; &gt;&gt;</p><ul><li><p>&amp; 按位与</p></li><li><p>| 按位或</p></li><li><p>~ 按反码补码取反（反出来会比真实相反数小一）</p><ul><li><p>原码</p><ul><li><p>5=&gt; 0b101, 1=&gt;0b1 ,-1=&gt; -0b1, bin(-1) #可以获取数字原码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin(<span class="number">-1</span>)  <span class="comment">#获得-0b1;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>反码</p><ul><li>正数将原码按位取反；负数符号位不变其余按位取反</li></ul></li><li><p>补码</p><ul><li>正数的补码是其本身；负数符合位不变其余按位取反后-1</li></ul></li></ul></li><li><p>^ 按位异或</p></li><li><p>&lt;&lt; 向左的位移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">1</span>&lt;&lt;<span class="number">2</span>) <span class="comment">#输出4</span></span><br></pre></td></tr></table></figure></li><li><p>>&gt; 向右的位移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">4</span>&gt;&gt;<span class="number">1</span>) <span class="comment">#输出 2</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>常用方式：乘除2的倍数，32//4相当于32&gt;&gt;2</p></li><li><p>12,0xc,0o14,0b1100</p><ul><li>~12等于-13</li></ul></li></ul><p>3.比较运算符</p><ul><li>== != &gt; &lt; &gt;= &lt;=</li><li>返回一个bool值</li><li>1&lt;’1’ 1==’1’</li></ul><p>4.逻辑运算符</p><ul><li>与或非 and or not</li><li>短路运算符<ul><li>and 如果第一个表达式位False，后面的就没有必要计算了，这个逻辑表达式一定False</li><li>or 如果第一个表达式True，后面没有必要计算了，这个逻辑表达式一定是True</li></ul></li></ul><p>5.赋值运算符</p><ul><li>a=min(3,5)</li><li>+= -= <em>=</em>= /= %=</li><li>x=y=z=10</li></ul><p>6.成员运算符</p><ul><li>in ,not in</li></ul><p>7.身份运算符</p><ul><li>is,not is</li></ul><p>8.运算优先级（由高到底）</p><ul><li>算数运算符 &gt; 位运算符 &gt; 身份运算符 &gt; 成员运算符 &gt; 逻辑运算符</li></ul><h2 id="表达式-Expression"><a href="#表达式-Expression" class="headerlink" title="表达式 Expression"></a>表达式 Expression</h2><p>1.由数字，符号，括号，变量等的组合</p><ul><li>算数表达式</li><li>逻辑表达式</li><li>赋值表达式<ul><li>Python，赋值及定义，如果一个变量了已经定义，赋值相当于重新定义</li></ul></li></ul><h2 id="程序控制"><a href="#程序控制" class="headerlink" title="程序控制"></a>程序控制</h2><ul><li>顺序<ul><li>按照先后顺序一条一条执行</li><li>例如，先洗手，再吃饭，再洗碗</li></ul></li><li>分支<ul><li>根据不同的情况判断，条件满足执行某条件下的语句</li><li>例如，先洗手，如果饭没做好，玩游戏，如果饭做好了，就吃饭，如果饭都没做，叫外卖</li></ul></li><li>循环<ul><li>条件满足就反复执行，不满足就不执行或者不再执行</li><li>例如：先洗手，看饭好了没有，没有好，一会来看一次是否好了，一会儿来看一次，直到饭好了，才可以吃饭。这里循环的条件就是<strong>饭好了没</strong>，饭没好，就循环的来看饭好了没有。</li></ul></li></ul><h2 id="单分支结构"><a href="#单分支结构" class="headerlink" title="单分支结构"></a>单分支结构</h2><p>1.if语句</p><p>​ if 表达式：</p><pre><code>代码块(必须由4个空格，不允许使用缩进)</code></pre><p>​ 表达式必须是一个bool类型，这个地方有一个隐式转换bool(表达式)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>&lt;<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">'1 less than 2'</span>)</span><br></pre></td></tr></table></figure><p>2.代码块</p><ul><li>类似于if语句的冒号后面的就是一个代码块</li><li>if, for , def ,class 等</li></ul><h2 id="真值表-bool-表达式-对应的隐式转换"><a href="#真值表-bool-表达式-对应的隐式转换" class="headerlink" title="真值表   bool(表达式)对应的隐式转换"></a>真值表 bool(表达式)对应的隐式转换</h2><table><thead><tr><th style="text-align:center">对象/常量</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center">“”</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">“string”</td><td style="text-align:center">真</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">&gt;=1</td><td style="text-align:center">真</td></tr><tr><td style="text-align:center">&lt;=-1</td><td style="text-align:center">真</td></tr><tr><td style="text-align:center">()空原组</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">[]空列表</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">{}空字典</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">None</td><td style="text-align:center">假</td></tr></tbody></table><h2 id="多分支结构"><a href="#多分支结构" class="headerlink" title="多分支结构"></a>多分支结构</h2><ul><li><p>if…elif…else语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 表达式<span class="number">1</span>:</span><br><span class="line">    代码块<span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> 表达式<span class="number">2</span>:</span><br><span class="line">    代码块<span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> 表达式<span class="number">3</span>:</span><br><span class="line">    代码块<span class="number">3</span></span><br><span class="line">……</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    代码块</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> a=<span class="number">4</span></span><br><span class="line"> <span class="keyword">if</span> a&lt;<span class="number">1</span>:</span><br><span class="line">     print(<span class="string">'S'</span>)</span><br><span class="line"> <span class="keyword">elif</span> a&lt;<span class="number">3</span>:</span><br><span class="line">     print(<span class="string">'AS'</span>)</span><br><span class="line"> <span class="keyword">elif</span> a&lt;<span class="number">4</span>:</span><br><span class="line">     print(<span class="string">'B'</span>)</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">'sss'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出：sss</span></span><br></pre></td></tr></table></figure></li></ul><p>2.分支嵌套</p><ul><li><p>举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">score=<span class="number">80</span></span><br><span class="line"><span class="keyword">if</span> score&lt;<span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"wrong"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> score==<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'egg'</span>)</span><br><span class="line">    <span class="keyword">elif</span> score&lt;=<span class="number">100</span>:</span><br><span class="line">        print(<span class="string">'right'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'too big'</span>)</span><br><span class="line"><span class="comment">#输出：right</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环——while语句"><a href="#循环——while语句" class="headerlink" title="循环——while语句"></a>循环——while语句</h2><ul><li><p>语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 表达式:</span><br><span class="line">代码块</span><br><span class="line"><span class="comment">#当条件满足表达式为true，进入循环题，执行代码块</span></span><br></pre></td></tr></table></figure></li><li><p>举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">flag=<span class="number">10</span></span><br><span class="line"><span class="keyword">while</span> flag:</span><br><span class="line">print(flag)</span><br><span class="line">flag-=<span class="number">1</span></span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环——for语句"><a href="#循环——for语句" class="headerlink" title="循环——for语句*"></a>循环——for语句*</h2><ul><li><p>语法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> iteratable:</span><br><span class="line">block</span><br><span class="line"><span class="comment">#当可迭代对象中有对象可以迭代，进入循环体，执行代码块</span></span><br></pre></td></tr></table></figure></li><li><p>range函数</p></li><li><p>举例：打印1~10</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):  //从<span class="number">0</span>开始迭代到<span class="number">9</span>，每次i++;</span><br><span class="line">print(i+<span class="number">1</span>)</span><br><span class="line"><span class="comment">#输出:</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印0~9的偶数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">10</span>,<span class="number">2</span>)://从<span class="number">2</span>开始迭代到<span class="number">9</span>，每次i+=<span class="number">2</span>;</span><br><span class="line">print(i)</span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环continue语句"><a href="#循环continue语句" class="headerlink" title="循环continue语句"></a>循环continue语句</h2><ul><li><p>中断当前循环的当次执行，继续下一次循环</p></li><li><p>举例：计算10以内的偶数（for循环）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">if i%2:</span><br><span class="line">continue</span><br><span class="line">print(i)</span><br><span class="line">#输出</span><br><span class="line">0</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环break语句"><a href="#循环break语句" class="headerlink" title="循环break语句"></a>循环break语句</h2><ul><li><p>终止当前循环</p></li><li><p>举例：计算1000以内的被7整除的前20个数（for循环）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>,<span class="number">7</span>):</span><br><span class="line">print(i)</span><br><span class="line">count+=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span>(count&gt;=<span class="number">20</span>):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="number">21</span></span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="number">35</span></span><br><span class="line"><span class="number">42</span></span><br><span class="line"><span class="number">49</span></span><br><span class="line"><span class="number">56</span></span><br><span class="line"><span class="number">63</span></span><br><span class="line"><span class="number">70</span></span><br><span class="line"><span class="number">77</span></span><br><span class="line"><span class="number">84</span></span><br><span class="line"><span class="number">91</span></span><br><span class="line"><span class="number">98</span></span><br><span class="line"><span class="number">105</span></span><br><span class="line"><span class="number">112</span></span><br><span class="line"><span class="number">119</span></span><br><span class="line"><span class="number">126</span></span><br><span class="line"><span class="number">133</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环else子句"><a href="#循环else子句" class="headerlink" title="循环else子句"></a>循环else子句</h2><ul><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">while condition:</span><br><span class="line">block</span><br><span class="line">else:</span><br><span class="line">block</span><br><span class="line">for element in iteratable:</span><br><span class="line">block</span><br><span class="line">else:</span><br><span class="line">block</span><br></pre></td></tr></table></figure></li><li><p>如果循环正常的执行结束，就执行else子句；如果使用break终止，else子句不会执行</p></li></ul><h2 id="Python输入输出"><a href="#Python输入输出" class="headerlink" title="Python输入输出"></a>Python输入输出</h2><p>1.输入</p><ul><li><p>input()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num=intput(<span class="string">'请输入一个数'</span>)  <span class="comment">#输入一个数回车结束</span></span><br><span class="line">print(num)  <span class="comment">#输入1234  输出1234</span></span><br><span class="line"><span class="comment">#在有的版本python中存在一下问题</span></span><br><span class="line">num=input()  <span class="comment">#输入的是一个字符串</span></span><br><span class="line"><span class="keyword">print</span> num   <span class="comment">#如果输入1234  打印的是一个字符串’1234‘</span></span><br><span class="line">num=int(input())<span class="comment">#输入的是一个整数</span></span><br><span class="line"><span class="keyword">print</span> num     <span class="comment">#打印这个整数</span></span><br></pre></td></tr></table></figure></li><li><p>print</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> a <span class="comment">#打印变量a</span></span><br><span class="line">print(a) <span class="comment">#打印a</span></span><br><span class="line">print(a,b)  <span class="comment">#打印(a,b)</span></span><br><span class="line"><span class="keyword">print</span> a,b   <span class="comment">#打印a,b</span></span><br></pre></td></tr></table></figure></li></ul><p><center><font size="6"><center><font size="6">未完待续</font></center><br></font></center><br></p>]]></content>
      
      
      <categories>
          
          <category> Pyhton </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python入门 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Material Plus主题安装和使用文档</title>
      <link href="/article/Material-Plus%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3.html"/>
      <url>/article/Material-Plus%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3.html</url>
      
        <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="这是一篇加密文档，请输入密码去阅读。" />    <label for="pass">这是一篇加密文档，请输入密码去阅读。</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Material Plus </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记一次Hexo博客更新</title>
      <link href="/article/%E8%AE%B0%E4%B8%80%E6%AC%A1Hexo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0.html"/>
      <url>/article/%E8%AE%B0%E4%B8%80%E6%AC%A1Hexo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0.html</url>
      
        <content type="html"><![CDATA[<p>这次更新成功将博客从Next主题换到了Material Plus…….</p><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><blockquote><p>先上一个更新前及更新后预览图对比</p></blockquote><blockquote><p>更新前：</p><p><img src="https://i.loli.net/2018/12/02/5c0393211ae2f.png" alt=""></p></blockquote><blockquote><p>更新后：</p><p><img src="https://i.loli.net/2018/12/02/5c03931b1e22d.png" alt=""></p></blockquote><blockquote><p>是不是灰常好看捏^_^</p></blockquote><h2 id="开工："><a href="#开工：" class="headerlink" title="开工："></a>开工：</h2><h3 id="第一步：删库备份"><a href="#第一步：删库备份" class="headerlink" title="第一步：删库备份"></a>第一步：删库备份</h3><p>首先，把E盘Blog仓库复制一份到D盘<del>（方便以后两主题来回切换）</del>，然后删库<del>你没听错，直接把E盘Blog删了</del>，然后<code>init</code>一个新Blog仓库。</p><h3 id="第二步：下载主题及覆盖"><a href="#第二步：下载主题及覆盖" class="headerlink" title="第二步：下载主题及覆盖"></a>第二步：下载主题及覆盖</h3><p>下载主题后把Blog里的<code>themes</code>和<code>source</code>，<code>scaffolds</code>覆盖了</p><h3 id="第三步：进行主题配置："><a href="#第三步：进行主题配置：" class="headerlink" title="第三步：进行主题配置："></a>第三步：进行主题配置：</h3><p>因为版权问题，详细步骤请看—<a href="https://anoyer.cn/article/Material-Plus%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3.html">Material Plus主题安装和使用文档</a>（还是别看了，加密的，哈哈哈）</p><h2 id="完工："><a href="#完工：" class="headerlink" title="完工："></a>完工：</h2><p>本蒟蒻不懂前端，以上代码大部分都是去 <code>Inspect Element</code> 然后复制粘贴再改一下的成果。。。还请各位大佬指正！好了，本文结束，下篇文章再见~ ✿✿ヽ(°▽°)ノ✿</p>]]></content>
      
      
      <categories>
          
          <category> 闲记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-3261-Milk Patterns(后缀数组)</title>
      <link href="/article/POJ-3261-Milk-Patterns-%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84.html"/>
      <url>/article/POJ-3261-Milk-Patterns-%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/anoy_acer?t=1" target="_blank" rel="noopener">博主CSDN</a></p><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://poj.org/problem?id=3261" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://i.loli.net/2018/11/28/5bfe6057b5b4e.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给定一个字符串S，求至少出现k次的最长重复子串，这k个子串可以重叠。</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>后缀数组。先二分答案，然后将后缀分成若干组。这里要判断的是有没有一个组的后缀个数不小于k。如果有，那么存在k个相同的子串满足条件，否则不存在。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    题意：找出出现k次的可重叠的最长子串的长度</span></span><br><span class="line"><span class="comment">        这都是套路题了，二分长度L,按照height值分组，在同一组内的组数如果大于K,则成立。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ch[MAXN], All[MAXN];</span><br><span class="line"><span class="keyword">int</span> SA[MAXN], rank[MAXN], Height[MAXN], tax[MAXN], tp[MAXN], a[MAXN], n, m;</span><br><span class="line"><span class="keyword">char</span> str[MAXN];</span><br><span class="line"><span class="keyword">int</span> k,cnt;</span><br><span class="line"><span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="comment">//tax[i] 计数排序辅助数组; tp[i] rank的辅助数组(计数排序中的第二关键字),与SA意义一样。</span></span><br><span class="line"><span class="comment">//a为原串</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RSort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//rank第一关键字,tp第二关键字。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) tax[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) tax[rank[tp[i]]] ++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++) tax[i] += tax[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i --) SA[tax[rank[tp[i]]] --] = tp[i]; <span class="comment">//确保满足第一关键字的同时，再满足第二关键字的要求</span></span><br><span class="line">&#125; <span class="comment">//计数排序,把新的二元组排序。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *f, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span> </span>&#123; <span class="keyword">return</span> f[x] == f[y] &amp;&amp; f[x + w] == f[y + w]; &#125;</span><br><span class="line"><span class="comment">//通过二元组两个下标的比较，确定两个子串是否相同</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Suffix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//SA</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) rank[i] = a[i], tp[i] = i;</span><br><span class="line">    m = <span class="number">127</span> ,RSort(); <span class="comment">//一开始是以单个字符为单位，所以(m = 127)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> w = <span class="number">1</span>, p = <span class="number">1</span>, i; p &lt; n; w += w, m = p) &#123; <span class="comment">//把子串长度翻倍,更新rank</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//w 当前一个子串的长度; m 当前离散后的排名种类数</span></span><br><span class="line">        <span class="comment">//当前的tp(第二关键字)可直接由上一次的SA的得到</span></span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>, i = n - w + <span class="number">1</span>; i &lt;= n; i ++) tp[++ p] = i; <span class="comment">//长度越界,第二关键字为0</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i ++) <span class="keyword">if</span> (SA[i] &gt; w) tp[++ p] = SA[i] - w;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新SA值,并用tp暂时存下上一轮的rank(用于cmp比较)</span></span><br><span class="line">        RSort(), swap(rank, tp), rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用已经完成的SA来更新与它互逆的rank,并离散rank</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i ++) rank[SA[i]] = cmp(tp, SA[i], SA[i - <span class="number">1</span>], w) ? p : ++ p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//离散：把相等的字符串的rank设为相同。</span></span><br><span class="line">    <span class="comment">//LCP</span></span><br><span class="line">    <span class="keyword">int</span> j, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; Height[rank[i ++]] = k)</span><br><span class="line">        <span class="keyword">for</span>( k = k ? k - <span class="number">1</span> : k, j = SA[rank[i] - <span class="number">1</span>]; a[i + k] == a[j + k]; ++ k);</span><br><span class="line">    <span class="comment">//这个知道原理后就比较好理解程序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line">    cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Height[i]&lt;mid)cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> cnt++;</span><br><span class="line">        <span class="keyword">if</span>(cnt&gt;=k)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;=n; i ++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">freopen(<span class="string">"C:/Users/Administrator/Desktop/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    Init();</span><br><span class="line">    Suffix();</span><br><span class="line"></span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=n;i++)cout&lt;&lt;SA[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;Height[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">           l=mid+<span class="number">1</span>;</span><br><span class="line">           res=max(res,mid);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
            <tag> 后缀数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-4333-Revolving Digits(扩展KMP)</title>
      <link href="/article/HDU-4333-Revolving-Digits-%E6%89%A9%E5%B1%95KMP.html"/>
      <url>/article/HDU-4333-Revolving-Digits-%E6%89%A9%E5%B1%95KMP.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/anoy_acer?t=1" target="_blank" rel="noopener">CSDN</a></p><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4333" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://i.loli.net/2018/11/28/5bfe5e30b4b4e.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个字符串，你可以将该字符串的任意长度后缀截取下来然后接到最前面，让你统计所有新串中有多少种字典序小于、等于、大于原串。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先我们将原串扩展成两倍，算一遍扩展KMP（自匹配），时间复杂度O(n)。这样一来，我们就得到了eKMP[i]，eKMP[i]代表s[i…len-1]与s的最长公共子串。为了避免重复子串重复计数，我们先求出s的最小循环节：然后我们只需统计最小循环节以内的字符就可。当eKMP[i]&gt;=len时，显然是原串，E++;否则我们只需比较一位就可判断大小，即：比较s[i+eKMP[i]]和s[eKMP[i]]的大小。为什么只需比较一位?因为s[0…eKMP[i]-1]和s[i…i+eKMP[i]-1]是相同的，只需判断第一个不相同的位置就可</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100010</span>;<span class="comment">//字符串长度最大值</span></span><br><span class="line"><span class="keyword">int</span> next1[maxn*<span class="number">2</span>],ex[maxn];<span class="comment">//ex数组即为extend数组</span></span><br><span class="line"><span class="keyword">char</span> s[maxn*<span class="number">2</span>],s2[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="comment">//预处理计算next数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j,po,len=<span class="built_in">strlen</span>(s);</span><br><span class="line">next1[<span class="number">0</span>]=len;<span class="comment">//初始化next[0]</span></span><br><span class="line"><span class="keyword">while</span>(s[i]==s[i+<span class="number">1</span>]&amp;&amp;s[i+<span class="number">1</span>])<span class="comment">//计算next[1]</span></span><br><span class="line">i++;</span><br><span class="line">next1[<span class="number">1</span>]=i;</span><br><span class="line">po=<span class="number">1</span>;<span class="comment">//初始化po的位置</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(next1[i-po]+i&lt;=next1[po]+po<span class="number">-1</span>)<span class="comment">//第一种情况，可以直接得到next[i]的值</span></span><br><span class="line">next1[i]=next1[i-po];</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//第二种情况，要继续匹配才能得到next[i]的值</span></span><br><span class="line">&#123;</span><br><span class="line">j=next1[po]+po-i;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span>)j=<span class="number">0</span>;<span class="comment">//如果i&gt;po+next[po],则要从头开始匹配</span></span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len&amp;&amp;s[j]==s[j+i])<span class="comment">//计算next[i]</span></span><br><span class="line">j++;</span><br><span class="line">next1[i]=j;</span><br><span class="line">po=i;<span class="comment">//更新po的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret1,ret2,ret3;</span><br><span class="line">ret1=ret2=ret3=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;2*n;i++)printf("%d ",next1[i]);</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i!=<span class="number">0</span>&amp;&amp;next1[i]&gt;=n)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(next1[i]&lt;n)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i+next1[i]]&lt;s[next1[i]])ret1++;</span><br><span class="line"><span class="keyword">else</span> ret3++;</span><br><span class="line">&#125;<span class="keyword">else</span> ret2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,ret1,ret2,ret3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,cas=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">n=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: "</span>,++cas);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">s[n+i]=s[i];</span><br><span class="line">&#125;s[<span class="number">2</span>*n]=<span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("\n%s",s);</span></span><br><span class="line">getnext();</span><br><span class="line">work();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> 扩展KMP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Anoyer训练计划</title>
      <link href="/article/Anoyer%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92.html"/>
      <url>/article/Anoyer%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92.html</url>
      
        <content type="html"><![CDATA[<h2 id="Anoyer-JB训练规划"><a href="#Anoyer-JB训练规划" class="headerlink" title="Anoyer JB训练规划"></a>Anoyer JB训练规划</h2><ul><li><p>前期：18年12月-19年2月低完成算法专题训练一阶段+一些专题散题：</p><ul><li>kuangbin-字符串所有专题</li><li>kuangbin-数论所有专题</li><li>各OJ专题散题+cf比赛</li></ul><blockquote><p>该阶段必须掌握字符串和数论所有考点算法及其各种运用<del>（<strong>这也是刷专题的意义所在</strong>）</del>，除去一些特难算法稀有神兽级别的算法<del>（脑子不够，学意义也不大）</del></p></blockquote><p><img src="https://i.loli.net/2018/11/29/5bff8ff37dbc4.png" alt=""></p></li><li><p>中期：19年3月-省赛前完成计算几何 （<strong>重心</strong>） 和数据结构算法学习及专题训练++一些专题散题：</p><ul><li>kuangbin-计算几何所有专题</li><li>kuangbin-数据结构所有专题</li><li>各OJ专题散题+cf比赛</li></ul><blockquote><p>该阶段结束时，必须掌握字符串,数论,计算机几何,数据结构所有考点算法及其各种运用<del>（<strong>这也是刷专题的意义所在，粘贴复制上文的QAQ</strong>）</del>，除去一些特难算法稀有神兽级别的算法<del>（脑子不够，学意义也不大）</del></p></blockquote></li><li><p>后期：省赛结束后-暑假前开始补cf以前的题，锻炼思维及出题速度 <del><strong>学习较为单一的一个阶段</strong></del></p><ul><li>尽可能多的补cf以前的题，对于补的每一场比赛，尽可能的把这一场的题都补完，这样才是补题意义所在</li></ul><blockquote><p>该阶段意义在于训练思维能力，能快速的对于一道题目给出解题思路，这也是我半年训练及两次现场赛的经验<del>CF很重要，解题思维比算法更重要</del></p></blockquote></li></ul><ul><li><p>冲刺期：7月-8月准备参加多校训练或者时参加夏令营<del>个人意向时参加夏令营，提升会很大也很快</del></p><ul><li>进行高压训练，每场比赛都可以看出本赛季的希望，且对知识巩固利用并实战</li><li>同时利用空闲时间进行个人模板整理</li><li>cf补题</li></ul><blockquote><p>该阶段也是对知识点磨合对算法巩固脑子实战，也是队伍快速磨合阶段</p></blockquote></li><li><p>网络赛阶段：9月打6场网络赛，拿取名额。在冲刺期应该会有一场CCPC网络赛。目标打满该赛季的ICPC及一场CCPC（<del>估计得经济倒退一阵子</del>）</p><ul><li>网络赛</li><li>cf补题</li></ul><blockquote><p>好好打网络赛拿名额</p></blockquote></li><li><p>网络赛后备赛阶段，日常刷题训练</p><ul><li>cf补题</li><li>专题复习</li></ul><blockquote><p>平复赛前心态，以最好心态及状态参赛</p></blockquote></li></ul><p><strong>Anoyer训练规划讲完！！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 闲记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>莫比乌斯函数打表模板</title>
      <link href="/article/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E8%A1%A8.html"/>
      <url>/article/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E8%A1%A8.html</url>
      
        <content type="html"><![CDATA[<ul><li><strong>莫比乌斯打表（phi可以删除）</strong></li><li><strong>phi–欧拉函数表 miu–莫比乌斯函数表 fac–i最大的素因子辅助打phi表</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> phi[maxn],miu[maxn],fac[maxn];</span><br><span class="line">ll f[maxn], F[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; ++i) fac[i] = i;</span><br><span class="line">phi[<span class="number">1</span>] = miu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fac[i] == i)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i &lt;&lt; <span class="number">1</span>; j &lt; maxn; j += i)</span><br><span class="line">fac[j] = i; </span><br><span class="line"><span class="keyword">if</span> (i / fac[i] % fac[i]) phi[i] = (fac[i] - <span class="number">1</span>)*phi[i / fac[i]], miu[i] = -miu[i / fac[i]]; <span class="comment">//如果b质数  a%b！=0  phi(a*b) = phi(a)*b - phi(a)</span></span><br><span class="line"><span class="keyword">else</span> phi[i] = fac[i] * phi[i / fac[i]], miu[i] = <span class="number">0</span>;<span class="comment">//当b是质数，a%b==0，phi(a*b)=phi(a)*b </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>求一个数的欧拉函数值–复杂度n^1/2</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">miu</span><span class="params">(ll n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> prime = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (n%i == <span class="number">0</span>) &#123;</span><br><span class="line">prime++;</span><br><span class="line">n /= i;</span><br><span class="line"><span class="keyword">if</span> (n%i == <span class="number">0</span>) &#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (prime % <span class="number">2</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>逆元模板</title>
      <link href="/article/%E9%80%86%E5%85%83%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E9%80%86%E5%85%83%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><strong>费马小定理求逆元</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">quick_mod</span><span class="params">(ll a,ll b,ll c)</span> <span class="comment">//快速幂计算(a^b)%c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)   <span class="comment">//相当于b%2==1</span></span><br><span class="line">            ans = (ans*a)%c;</span><br><span class="line">        a = (a*a)%c;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;    <span class="comment">//相当于b/=2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll b,ll c)</span>   <span class="comment">//计算b的逆元</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> quick_mod(b,c<span class="number">-2</span>,c);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">div</span><span class="params">(ll a,ll b,ll c)</span>  <span class="comment">//计算(a/b)%c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((a%c)*(inv(b,c)%c))%c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>扩展GCD求逆元</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ex_gcd</span><span class="params">(ll a, ll b, ll &amp;d, ll &amp;x, ll &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) &#123;d = a, x = <span class="number">1</span>, y = <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ex_gcd(b, a % b, d, y, x);</span><br><span class="line">        y -= x * (a / b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll a, ll p)</span></span>&#123;<span class="comment">//如果不存在，返回-1  a,p互质</span></span><br><span class="line">    ll d, x, y;</span><br><span class="line">    ex_gcd(a, p, d, x, y);</span><br><span class="line">    <span class="keyword">return</span> d == <span class="number">1</span> ? (x % p + p) % p : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递归求逆元</strong></p><p><strong>当p是个质数的时候有inv(a) = (p - p / a) * inv(p % a) % p,且1的逆元就是1</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll t, ll p)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//求t关于p的逆元，注意:t要小于p，最好传参前先把t%p一下 ,即inv(a%p, p)求a对p的逆元</span></span><br><span class="line">    <span class="keyword">return</span> t == <span class="number">1</span> ? <span class="number">1</span> : (p - p / t) * inv(p % t, p) % p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>打表求逆元</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ll inv[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Prepare_inv</span><span class="params">(ll n,ll M)</span></span>&#123;</span><br><span class="line">    inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        inv[i]=(ll)(M-M/i)*inv[M%i]%M;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线段树模板</title>
      <link href="/article/%E7%BB%84%E5%90%88%E6%95%B0.html"/>
      <url>/article/%E7%BB%84%E5%90%88%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> C[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">C[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">1000</span>; j++)</span><br><span class="line">C[i][j] = C[i - <span class="number">1</span>][j - <span class="number">1</span>] + C[i - <span class="number">1</span>][j]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; C[<span class="number">4</span>][<span class="number">3</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基数排序MSD模板</title>
      <link href="/article/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8FMSD.html"/>
      <url>/article/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8FMSD.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> arr[maxn]=&#123;<span class="number">12</span>,<span class="number">14</span>,<span class="number">54</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">47</span>,<span class="number">89</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getdigit</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1e3</span>,<span class="number">1e4</span>,<span class="number">1e5</span>,<span class="number">1e6</span>,<span class="number">1e7</span>,<span class="number">1e8</span>,<span class="number">1e9</span>&#125;;<span class="comment">////因为待排数据最大数据位数</span></span><br><span class="line"><span class="keyword">return</span> ((x/a[d])%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">msdradix_sort</span><span class="params">(<span class="keyword">int</span> begin,<span class="keyword">int</span> end,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> radix=<span class="number">10</span>;<span class="comment">//进制数</span></span><br><span class="line"><span class="keyword">int</span> count[radix],i,j;<span class="comment">//count表示每个桶中元素个数</span></span><br><span class="line"><span class="comment">//置零</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)count[i]=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//给桶分配空间</span></span><br><span class="line"><span class="keyword">int</span> *bucket=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>((end-begin+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="comment">//统计各桶需要装的元素的个数</span></span><br><span class="line"><span class="keyword">for</span>(i=begin;i&lt;=end;++i)&#123;</span><br><span class="line">count[getdigit(arr[i], d)]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求出桶的边界索引，count[i]值为第i个桶的右边界索引+1</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;radix;++i)&#123;</span><br><span class="line">count[i]+=count[i<span class="number">-1</span>];<span class="comment">//每个桶的边界，便于下步将arr重新放入bucket里 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里要从右向左扫描，保证排序稳定性 </span></span><br><span class="line"><span class="keyword">for</span>(i=end;i&gt;=begin;--i)&#123;</span><br><span class="line">j=getdigit(arr[i],d);  <span class="comment">//求出关键码的第d位的数字， 例如：576的第3位是5 </span></span><br><span class="line">bucket[count[j]<span class="number">-1</span>]=arr[i];  <span class="comment">//放入对应的桶中，count[j]-1是第j个桶的右边界索引</span></span><br><span class="line">--count[j];  <span class="comment">//第j个桶放下一个元素的位置(右边界索引+1)  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意：此时count[i]为第i个桶左边界    </span></span><br><span class="line">    <span class="comment">//从各个桶中收集数据  </span></span><br><span class="line"><span class="keyword">for</span>(i = begin, j = <span class="number">0</span>;i &lt;= end; ++i, ++j)&#123;</span><br><span class="line">        arr[i] = bucket[j]; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="comment">//释放存储空间</span></span><br><span class="line"><span class="built_in">free</span>(bucket);</span><br><span class="line"><span class="comment">//对每个桶再次排序</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;radix;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> p1=begin+count[i];<span class="comment">//第I个桶的左边界</span></span><br><span class="line"><span class="keyword">int</span> p2=begin+count[i+<span class="number">1</span>]<span class="number">-1</span> ;<span class="comment">//第i个桶的右边界</span></span><br><span class="line"><span class="keyword">if</span>(p1&lt;p2&amp;&amp;d&gt;<span class="number">1</span>)&#123;</span><br><span class="line">msdradix_sort(p1, p2, d<span class="number">-1</span>);  <span class="comment">//对第i个桶递归调用，进行基数排序，数位降 1  </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="built_in">cout</span>&lt;&lt;arr[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> msdradix_sort(<span class="number">0</span>,<span class="number">10</span><span class="number">-1</span>,<span class="number">2</span>); <span class="comment">//2表示最高位数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="built_in">cout</span>&lt;&lt;arr[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>BM杜教</title>
      <link href="/article/BM%E6%9D%9C%E6%95%99.html"/>
      <url>/article/BM%E6%9D%9C%E6%95%99.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for (int i=a;i&lt;n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> per(i,a,n) for (int i=n-1;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(),(x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span> </span>&#123;ll res=<span class="number">1</span>;a%=mod; assert(b&gt;=<span class="number">0</span>); <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;a=a*a%mod;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="comment">// head</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _,n;</span><br><span class="line"><span class="keyword">namespace</span> linear_seq &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10010</span>;</span><br><span class="line">    ll res[N],base[N],_c[N],_md[N];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Md;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(ll *a,ll *b,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        rep(i,<span class="number">0</span>,k+k) _c[i]=<span class="number">0</span>;</span><br><span class="line">        rep(i,<span class="number">0</span>,k) <span class="keyword">if</span> (a[i]) rep(j,<span class="number">0</span>,k) _c[i+j]=(_c[i+j]+a[i]*b[j])%mod;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k+k<span class="number">-1</span>;i&gt;=k;i--) <span class="keyword">if</span> (_c[i])</span><br><span class="line">            rep(j,<span class="number">0</span>,SZ(Md)) _c[i-k+Md[j]]=(_c[i-k+Md[j]]-_c[i]*_md[Md[j]])%mod;</span><br><span class="line">        rep(i,<span class="number">0</span>,k) a[i]=_c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(ll n,VI a,VI b)</span> </span>&#123; <span class="comment">// a 系数 b 初值 b[n+1]=a[0]*b[n]+...</span></span><br><span class="line"><span class="comment">//        printf("%d\n",SZ(b));</span></span><br><span class="line">        ll ans=<span class="number">0</span>,pnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k=SZ(a);</span><br><span class="line">        assert(SZ(a)==SZ(b));</span><br><span class="line">        rep(i,<span class="number">0</span>,k) _md[k<span class="number">-1</span>-i]=-a[i];_md[k]=<span class="number">1</span>;</span><br><span class="line">        Md.clear();</span><br><span class="line">        rep(i,<span class="number">0</span>,k) <span class="keyword">if</span> (_md[i]!=<span class="number">0</span>) Md.push_back(i);</span><br><span class="line">        rep(i,<span class="number">0</span>,k) res[i]=base[i]=<span class="number">0</span>;</span><br><span class="line">        res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> ((<span class="number">1l</span>l&lt;&lt;pnt)&lt;=n) pnt++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> p=pnt;p&gt;=<span class="number">0</span>;p--) &#123;</span><br><span class="line">            mul(res,res,k);</span><br><span class="line">            <span class="keyword">if</span> ((n&gt;&gt;p)&amp;<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i=k<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) res[i+<span class="number">1</span>]=res[i];res[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">                rep(j,<span class="number">0</span>,SZ(Md)) res[Md[j]]=(res[Md[j]]-res[k]*_md[Md[j]])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        rep(i,<span class="number">0</span>,k) ans=(ans+res[i]*b[i])%mod;</span><br><span class="line">        <span class="keyword">if</span> (ans&lt;<span class="number">0</span>) ans+=mod;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">VI <span class="title">BM</span><span class="params">(VI s)</span> </span>&#123;</span><br><span class="line">        VI C(1,1),B(1,1);</span><br><span class="line">        <span class="keyword">int</span> L=<span class="number">0</span>,m=<span class="number">1</span>,b=<span class="number">1</span>;</span><br><span class="line">        rep(n,<span class="number">0</span>,SZ(s)) &#123;</span><br><span class="line">            ll d=<span class="number">0</span>;</span><br><span class="line">            rep(i,<span class="number">0</span>,L+<span class="number">1</span>) d=(d+(ll)C[i]*s[n-i])%mod;</span><br><span class="line">            <span class="keyword">if</span> (d==<span class="number">0</span>) ++m;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span>*L&lt;=n) &#123;</span><br><span class="line">                VI T=C;</span><br><span class="line">                ll c=mod-d*powmod(b,mod<span class="number">-2</span>)%mod;</span><br><span class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(<span class="number">0</span>);</span><br><span class="line">                rep(i,<span class="number">0</span>,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</span><br><span class="line">                L=n+<span class="number">1</span>-L; B=T; b=d; m=<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ll c=mod-d*powmod(b,mod<span class="number">-2</span>)%mod;</span><br><span class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(<span class="number">0</span>);</span><br><span class="line">                rep(i,<span class="number">0</span>,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</span><br><span class="line">                ++m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">gao</span><span class="params">(VI a,ll n)</span> </span>&#123;</span><br><span class="line">        VI c=BM(a);</span><br><span class="line">        c.erase(c.begin());</span><br><span class="line">        rep(i,<span class="number">0</span>,SZ(c)) c[i]=(mod-c[i])%mod;</span><br><span class="line">        <span class="keyword">return</span> solve(n,c,VI(a.begin(),a.begin()+SZ(c)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line">        v.push_back(<span class="number">2</span>);<span class="comment">//前几项</span></span><br><span class="line">        v.push_back(<span class="number">4</span>);</span><br><span class="line">        v.push_back(<span class="number">6</span>);</span><br><span class="line">        v.push_back(<span class="number">8</span>);</span><br><span class="line">        v.push_back(<span class="number">10</span>);</span><br><span class="line">        v.push_back(<span class="number">12</span>);</span><br><span class="line">        <span class="comment">//输入n ,输出第n项的值</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,linear_seq::gao(v,n<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>矩阵快速幂模板</title>
      <link href="/article/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82.html"/>
      <url>/article/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82.html</url>
      
        <content type="html"><![CDATA[<p><strong>快速幂函数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">quick_mod</span><span class="params">(ll a,ll b,ll c)</span> <span class="comment">//快速幂计算(a^b)%c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)   <span class="comment">//相当于b%2==1</span></span><br><span class="line">            ans = (ans*a)%c;</span><br><span class="line">        a = (a*a)%c;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;    <span class="comment">//相当于b/=2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>矩阵快速幂模版</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N=<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Matrix</span><span class="params">(<span class="keyword">int</span> (&amp;a)[<span class="number">2</span>][<span class="number">2</span>],<span class="keyword">int</span> b[<span class="number">2</span>][<span class="number">2</span>])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp[<span class="number">2</span>][<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">2</span>;++k)</span><br><span class="line">tmp[i][j]=(tmp[i][j]+a[i][k]*b[k][j])%N;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)&#123;</span><br><span class="line">a[i][j]=tmp[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;n))&#123;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>&amp;&amp;n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">           <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">           <span class="keyword">continue</span>;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="keyword">int</span> temp[<span class="number">2</span>][<span class="number">2</span>]=&#123;a,b,<span class="number">0</span>,<span class="number">0</span>&#125;,cot[<span class="number">2</span>][<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;, x[<span class="number">2</span>] = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">n-=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(n)&#123; </span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)Matrix(cot,temp);</span><br><span class="line">Matrix(temp,temp);</span><br><span class="line">n/=<span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">ans=(ans+x[i]*cot[<span class="number">0</span>][i])%N;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>素数筛+埃筛模板</title>
      <link href="/article/%E7%B4%A0%E6%95%B0%E7%AD%9B.html"/>
      <url>/article/%E7%B4%A0%E6%95%B0%E7%AD%9B.html</url>
      
        <content type="html"><![CDATA[<p><strong>普通的素数筛</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX=<span class="number">1e7</span>+<span class="number">7</span>;<span class="comment">//求MAX范围内的素数</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> su[MAX],cnt;</span><br><span class="line"><span class="keyword">bool</span> isprime[MAX];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(isprime,<span class="number">1</span>,<span class="keyword">sizeof</span>(isprime));<span class="comment">//初始化认为所有数都为素数</span></span><br><span class="line">    isprime[<span class="number">0</span>]=isprime[<span class="number">1</span>]=<span class="number">0</span>;<span class="comment">//0和1不是素数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">2</span>;i&lt;=MAX;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(isprime[i])</span><br><span class="line">            su[cnt++]=i;<span class="comment">//保存素数i</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> j=<span class="number">1</span>;j&lt;cnt&amp;&amp;su[j]*i&lt;MAX;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            isprime[su[j]*i]=<span class="number">0</span>;<span class="comment">//筛掉小于等于i的素数和i的积构成的合数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    prime();</span><br><span class="line">    <span class="comment">//for(long long i=1;i&lt;cnt;i++)</span></span><br><span class="line">     <span class="comment">//   printf("%d  ",su[i]);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>埃筛（线性筛）筛素数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> p[maxn], check[maxn], tot = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    check[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    check[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!check[i])p[++tot]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=tot&amp;&amp;i*p[j]&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            check[i*p[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!(i%p[j]))<span class="keyword">break</span>;<span class="comment">//*****关键</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Miller-Rabin素性测试模板</title>
      <link href="/article/Miller-Rabin%E7%B4%A0%E6%80%A7%E6%B5%8B%E8%AF%95.html"/>
      <url>/article/Miller-Rabin%E7%B4%A0%E6%80%A7%E6%B5%8B%E8%AF%95.html</url>
      
        <content type="html"><![CDATA[<p><strong>/*</strong></p><p><strong>* 随机素数测试（伪素数原理理）</strong></p><p><strong>* CALL: bool res = miller(n);</strong></p><p><strong>* 快速测试n是否满⾜足素数的“必要”条件，出错概率极低</strong></p><p><strong>* 对于任意奇数n &gt; 2和正整数s，算法出错概率≤2^(-s)</strong></p><p><strong>*/</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2</span>*<span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">quicks</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span>  a, <span class="keyword">long</span> <span class="keyword">long</span> b, <span class="keyword">long</span> <span class="keyword">long</span> c)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line">a = a % c;</span><br><span class="line"><span class="keyword">while</span> (b != <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = (ans*a) % c;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">a = (a*a) % c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin_1</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n)</span> </span>&#123;  <span class="comment">//标准代码 </span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> b = n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((b &amp; <span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">t++;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//现在的a^(b*2^t)=1(mod n)</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a = rand() % (n - <span class="number">1</span>) + <span class="number">1</span>;   <span class="comment">//测试</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x = quicks(a, b, n);</span><br><span class="line"><span class="comment">//个人认为这里如果加上优先判定是不是1，n-1的话，会更快一点？是不是呢？？？？？ </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i = <span class="number">1</span>; i &lt;= t; i++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> y = quicks(x, <span class="number">2</span>, n);</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">1</span> &amp;&amp; x != <span class="number">1</span> &amp;&amp; x != n - <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;    <span class="comment">//这里的意思是如果a^(d*2^r)是1，但是a^(d*2^(r-1))不是1也不是n-1的情况，这时候我们认为是合数 </span></span><br><span class="line">x = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x != <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ll n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (Miller_Rabin_1(n))<span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浮点型数据高精度乘法</title>
      <link href="/article/%E6%B5%AE%E7%82%B9%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E6%B3%95.html"/>
      <url>/article/%E6%B5%AE%E7%82%B9%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<p>有2堆石子。A B两个人轮流拿，A先拿。每次可以从一堆中取任意个或从2堆中取相同数量的石子，但不可不取。拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出2堆石子的数量，问最后谁能赢得比赛。<br>例如：2堆石子分别为3颗和5颗。那么不论A怎样拿，B都有对应的方法拿到最后1颗。<br>Input<br>第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 10000)<br>第2 - T + 1行：每行2个数分别是2堆石子的数量，中间用空格分隔。(1 &lt;= N &lt;= 10^18)<br>Output<br>共T行，如果A获胜输出A，如果B获胜输出B。<br>Input示例<br>3<br>3 5<br>3 4<br>1 9<br>Output示例<br>B<br>A<br>A</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//注意：sqrt产生精度问题 double最多存小数点后14位，模拟乘法 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="comment">//0.618033988749894848204586834... 拆成整数放进数组里，</span></span><br><span class="line"><span class="comment">//拆成三部分即可 </span></span><br><span class="line">ll tmp[<span class="number">3</span>] = &#123; <span class="number">618033988</span>,<span class="number">749894848</span>,<span class="number">204586834</span> &#125;;</span><br><span class="line">ll MOD = <span class="number">1e9</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line">ll a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">ll t = a;</span><br><span class="line">a = b;</span><br><span class="line">b = t;</span><br><span class="line">&#125;</span><br><span class="line">ll diff = b - a;</span><br><span class="line"><span class="comment">//把10^18分成两部分10^9</span></span><br><span class="line">ll ta = diff / MOD;</span><br><span class="line">ll tb = diff % MOD;</span><br><span class="line">ll tp = tb * tmp[<span class="number">2</span>];</span><br><span class="line">tp = ta * tmp[<span class="number">2</span>] + tb * tmp[<span class="number">1</span>] + tp / MOD;</span><br><span class="line">tp = ta * tmp[<span class="number">1</span>] + tb * tmp[<span class="number">0</span>] + tp / MOD;</span><br><span class="line">tp = ta * tmp[<span class="number">0</span>] + tp / MOD + diff;</span><br><span class="line"><span class="keyword">if</span> (tp == a)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>欧拉函数模板</title>
      <link href="/article/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0.html"/>
      <url>/article/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<p><strong>求一个数的欧拉函数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">phi</span><span class="params">(ll x)</span></span>&#123;<span class="comment">//求1~n与n互质的个数   //   phi(1323)=phi(3^3*7^2)=1323*(1-1/3)*(1-1/7)</span></span><br><span class="line">ll i, ans = x;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i*i &lt;= x; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line">ans = ans - ans / i;</span><br><span class="line"><span class="keyword">while</span>(x%i == <span class="number">0</span>)</span><br><span class="line">x /= i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">ans = ans - ans / x;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递推求欧拉函数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ll _phi(ll x) &#123;<span class="comment">//递推求欧拉函数   利用了欧拉函数的积性 </span></span><br><span class="line"><span class="comment">//如果b质数  a%b！=0  phi(a*b) = phi(a)*b - phi(a)</span></span><br><span class="line"><span class="comment">//当b是质数，a%b==0，phi(a*b)=phi(a)*b </span></span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">ll res = <span class="number">1</span>, t = x;</span><br><span class="line"><span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= (ll)<span class="built_in">sqrt</span>(<span class="number">1.</span>*x); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (t%i == <span class="number">0</span>) &#123;</span><br><span class="line">res *= (i - <span class="number">1</span>);</span><br><span class="line">t /= i;</span><br><span class="line"><span class="keyword">while</span> (t%i == <span class="number">0</span>) &#123;</span><br><span class="line">res *= i;</span><br><span class="line">t /= i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t &gt; <span class="number">1</span>) &#123; res *= (t - <span class="number">1</span>); &#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递推欧拉函数打表</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ll phi[maxn]; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">phi[i] = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt; maxn; i++)&#123;  <span class="comment">//最大素因子表</span></span><br><span class="line"><span class="keyword">if</span> (phi[i] == i)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i * i; j &lt; maxn; j += i)&#123;</span><br><span class="line">phi[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> ((i / phi[i]) % phi[i] == <span class="number">0</span>)&#123;</span><br><span class="line">phi[i] = phi[i / phi[i]] * phi[i];    <span class="comment">//当b是质数，a%b==0，phi(a*b)=phi(a)*b </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">phi[i] = phi[i / phi[i]] * (phi[i] - <span class="number">1</span>);  <span class="comment">//如果b质数  a%b！=0  phi(a*b) = phi(a)*b - phi(a) </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>杜教筛模板</title>
      <link href="/article/%E6%9D%9C%E6%95%99%E7%AD%9B.html"/>
      <url>/article/%E6%9D%9C%E6%95%99%E7%AD%9B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img-blog.csdn.net/20180915213717919?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fub3lfYWNlcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2001000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ni 500000004  <span class="comment">//2的逆元</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> mod=<span class="number">0x3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> &amp;x)</span>  <span class="comment">//输入外挂 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> p;p=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> c;c=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span>(c==<span class="string">'-'</span>)p=<span class="number">-1</span>;c=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) &#123;x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(c<span class="number">-48</span>);c=getchar();&#125;</span><br><span class="line">    x*=p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> mu[N],sum1[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> phi[N],sum2[N];</span><br><span class="line"><span class="keyword">int</span> cnt,prim[N];</span><br><span class="line"><span class="keyword">int</span> e,e1;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> ,<span class="keyword">int</span>&gt;w,w1;  <span class="comment">//哈希 w用来求phi前缀和  w1用来求miu前缀和 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> maxn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>]=mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prim[++cnt]=i;</span><br><span class="line">            mu[i]=<span class="number">-1</span>;phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prim[j]*i&lt;=maxn;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i*prim[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prim[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prim[j]]=phi[i]*prim[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> mu[i*prim[j]]=-mu[i],phi[i*prim[j]]=phi[i]*(prim[j]<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)sum1[i]=sum1[i<span class="number">-1</span>]+mu[i],sum2[i]=(sum2[i<span class="number">-1</span>]+phi[i])%mod;   <span class="comment">//打一个maxn的phi前缀和表 和miu前缀和表  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">djsmu</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span><span class="comment">//求miu前缀和 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=<span class="number">2000000</span>)<span class="keyword">return</span> sum1[x];</span><br><span class="line">    <span class="keyword">if</span>(w.count(x))<span class="keyword">return</span> w[x];</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;l&lt;=x;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=x/(x/l);</span><br><span class="line">        ans-=(r-l+<span class="number">1l</span>l)*djsmu(x/l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w[x]=ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">djsphi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span><span class="comment">//求phi 前缀和 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=<span class="number">2000000</span>)<span class="keyword">return</span> sum2[x];</span><br><span class="line">    <span class="keyword">if</span>(w1.count(x))<span class="keyword">return</span> w1[x];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=(x %mod* ((x + <span class="number">1</span>) % mod)) % mod*ni%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;l&lt;=x;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=x/(x/l);  <span class="comment">//最后一个分块中的数</span></span><br><span class="line">        ans = (ans - ((r - l + <span class="number">1</span>) % mod*djsphi(x / l)) % mod + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w1[x]=ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t;</span><br><span class="line">    read(t);</span><br><span class="line">    get(<span class="number">2000000</span>);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line">        read(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld %d\n"</span>,djsphi(n),djsmu(n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>整除分块模板</title>
      <link href="/article/%E6%95%B4%E9%99%A4%E5%88%86%E5%9D%97%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E6%95%B4%E9%99%A4%E5%88%86%E5%9D%97%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170305/22-1F305005631293.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,last;i&lt;=n;i=last+<span class="number">1</span>)&#123;</span><br><span class="line">last=n/(n/i);  <span class="comment">//该区间的最后一个数</span></span><br><span class="line">ans+=(last-i+<span class="number">1</span>)*(n/i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>最长循环节模板</title>
      <link href="/article/%E6%9C%80%E9%95%BF%E5%BE%AA%E7%8E%AF%E8%8A%82.html"/>
      <url>/article/%E6%9C%80%E9%95%BF%E5%BE%AA%E7%8E%AF%E8%8A%82.html</url>
      
        <content type="html"><![CDATA[<p><strong>正整数k的倒数1/k，写为10进制的小数如果为无限循环小数，</strong><br><strong>则存在一个循环节，求&lt;=n的数中，倒数循环节长度最长的那个数，</strong><br><strong>假如存在多个最优的答案，输出所有答案中最大的那个数。</strong></p><ul><li>如果1&lt;=b&lt;a,a没有2或5的质因子，并且a与b互质，那么b/a 的循环节位数恰好等于e 满足min(10^e≡1(moda))),e是正整数。</li><li>如果1&lt;=b&lt;a,a没有2或5的质因子，并且a与b互质，那么b/a 的循环节位数必整除ϕ(a)。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,ans=<span class="number">1</span>,maxx=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> tmp = i, tmp1 = <span class="number">1</span>, tmp2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (tmp % <span class="number">2</span> == <span class="number">0</span>)tmp /= <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (tmp % <span class="number">5</span> == <span class="number">0</span>)tmp /= <span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">1</span>)tmp2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">tmp1 = tmp1 * <span class="number">10</span> % tmp;</span><br><span class="line">++tmp2;</span><br><span class="line">&#125; <span class="keyword">while</span> (tmp1 != <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tmp2 &gt; maxx) &#123;</span><br><span class="line">maxx = tmp2;</span><br><span class="line">ans = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>欧几里得及拓展欧几里得模板</title>
      <link href="/article/%E6%8B%93%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%8F%8A%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97.html"/>
      <url>/article/%E6%8B%93%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%8F%8A%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97.html</url>
      
        <content type="html"><![CDATA[<p><strong>欧几里得</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> (b==<span class="number">0</span>)?a:gcd(b,a%b);    <span class="comment">//一条语句搞定（三元运算符）装逼，跟上面略有不同，上面做到t=0,这里做到b=0</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>拓展欧几里得</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> (b==<span class="number">0</span>)?a:gcd(b,a%b);    <span class="comment">//一条语句搞定（三元运算符）装逼，跟上面略有不同，上面做到t=0,这里做到b=0</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a / gcd(a,b) * b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">        y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> r=exgcd(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">int</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-a/b*y;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>拓展欧几里得求整数解个数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> b ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a / gcd(a, b) * b;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">extend_gcd</span><span class="params">(ll a, ll b, ll&amp;x, ll&amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b) &#123;</span><br><span class="line">x = <span class="number">1</span>;</span><br><span class="line">y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">ll xt = <span class="number">0</span>, yt = <span class="number">0</span>;</span><br><span class="line">ll d = extend_gcd(b, a % b, xt, yt);</span><br><span class="line">x = yt;</span><br><span class="line">y = xt - yt * (a / b);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">cal</span><span class="params">(ll a, ll b, ll n)</span> </span>&#123;    <span class="comment">//计算ax+by == n的非负整数解组数</span></span><br><span class="line">ll x = <span class="number">0</span>, y = <span class="number">0</span>, d;</span><br><span class="line">d = extend_gcd(a, b, x, y);</span><br><span class="line"><span class="keyword">if</span> (n % d != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">x *= n / d, y *= n / d;</span><br><span class="line">ll LCM = lcm(a, b);</span><br><span class="line">ll t1 = LCM / a, t2 = LCM / b;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">1</span>) &#123;</span><br><span class="line">ll num = (<span class="number">1</span> - x) / t1;</span><br><span class="line">x += num * t1;</span><br><span class="line">y -= num * t2;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">1</span>) &#123;</span><br><span class="line">y -= t2;</span><br><span class="line">x += t1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y &lt; <span class="number">1</span>) &#123;</span><br><span class="line">ll num = (<span class="number">1</span> - y) / t2;</span><br><span class="line">y += num * t2;</span><br><span class="line">x -= num * t1;</span><br><span class="line"><span class="keyword">if</span> (y &lt; <span class="number">1</span>) &#123;</span><br><span class="line">y += t2;</span><br><span class="line">x -= t1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans = x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (ans) &#123;</span><br><span class="line">ans += min((x - <span class="number">1</span>) / t1, ((n - <span class="number">1</span>) / b - y) / t2);</span><br><span class="line">ans += min((y - <span class="number">1</span>) / t2, ((n - <span class="number">1</span>) / a - x) / t1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>log(n)分解一个数的所有素因子模板</title>
      <link href="/article/%E5%88%86%E8%A7%A3%E7%B4%A0%E5%9B%A0%E5%AD%90.html"/>
      <url>/article/%E5%88%86%E8%A7%A3%E7%B4%A0%E5%9B%A0%E5%AD%90.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//n为要分解的数</span></span><br><span class="line"><span class="comment">//Fac数组存所有质因子</span></span><br><span class="line"><span class="comment">//cnt为质因子个数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">primeFactor</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        Fac[cnt++]=<span class="number">2</span>;</span><br><span class="line">        n/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 经过第二步, 此时 n 一定为奇数</span></span><br><span class="line">    <span class="comment">// 并且不存在偶数的素因子</span></span><br><span class="line">    <span class="comment">// 所以我们可以跳过所有偶数 (i += 2)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="built_in">sqrt</span>(n);i+=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            Fac[cnt++]=i;</span><br><span class="line">            n/=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//此处为了防止是一个大于 2 的素数</span></span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">2</span>)Fac[cnt++]=n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>求大数的n次方对m取模（欧拉降幂）</title>
      <link href="/article/%E5%A4%A7%E6%95%B0%E6%AC%A1%E6%96%B9%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%A4%A7%E6%95%B0%E6%AC%A1%E6%96%B9%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><strong>求2^n次方对mod取模，n为一个大数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">phi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ret = x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; ++i)</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ret -= ret / i;</span><br><span class="line"><span class="keyword">while</span> (x % i == <span class="number">0</span>)</span><br><span class="line">x /= i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">ret -= ret / x;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mpow</span><span class="params">(ll a, ll n, ll m)</span> <span class="comment">//a ^ n % m</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">t = (t * a) % m;</span><br><span class="line">a = (a * a) % m, n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line"><span class="comment">//freopen("C:/input.txt", "r", stdin);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">ll n = <span class="number">0</span>, p = phi(MOD);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);<span class="comment">//求2^s次方  s为一个大数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++)</span><br><span class="line">n = (n * <span class="number">10</span> + s[i] - <span class="string">'0'</span>) % p;</span><br><span class="line">n += p - <span class="number">1</span>;</span><br><span class="line">ll ans = mpow(<span class="number">2</span>, n, MOD);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博弈论模板</title>
      <link href="/article/%E5%8D%9A%E5%BC%88%E8%AE%BA.html"/>
      <url>/article/%E5%8D%9A%E5%BC%88%E8%AE%BA.html</url>
      
        <content type="html"><![CDATA[<p><strong>Bash–两人从一堆a个石子里面轮流取石子，每次最多去b个，取到最后一个石子获胜</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b,flag;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (a % (b + <span class="number">1</span>) == <span class="number">0</span>)flag = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Nim–两人从n堆石子中任选一堆取石子，不得不取，可以把一堆直接去玩，拿到最后一颗石子得人获胜</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> stone, tag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;stone);</span><br><span class="line">tag ^= stone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// tag为0则为后⼿手赢，否则为先⼿手赢 </span></span><br><span class="line"><span class="keyword">if</span> (tag == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>威佐夫博弈–有2堆石子。A B两个人轮流拿，A先拿。每次可以从一堆中取任意个或从2堆中取相同数量的石子，但不可不取。拿到最后1颗石子的人获胜</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> stone, tag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span> (a &lt; b)swap(a, b);</span><br><span class="line"><span class="keyword">int</span> flag = (a - b)*(<span class="built_in">sqrt</span>(<span class="number">5</span>) + <span class="number">1</span>) / <span class="number">2</span>;  <span class="comment">//黄金分割线</span></span><br><span class="line"><span class="comment">//  如果flag == b，则为后⼿手赢，否则先⼿手赢（奇异局）</span></span><br><span class="line"><span class="keyword">if</span> (flag == b)<span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SG打表</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//f[]：可以取走的石子个数</span></span><br><span class="line"><span class="comment">//sg[]:0~n的SG函数值</span></span><br><span class="line"><span class="comment">//hash[]:mex&#123;&#125;</span></span><br><span class="line"><span class="keyword">int</span> f[N],sg[N],hash[N];     </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSG</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="built_in">memset</span>(sg,<span class="number">0</span>,<span class="keyword">sizeof</span>(sg));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(hash,<span class="number">0</span>,<span class="keyword">sizeof</span>(hash));</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;f[j]&lt;=i;j++)</span><br><span class="line">            hash[sg[i-f[j]]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=n;j++)    <span class="comment">//求mes&#123;&#125;中未出现的最小的非负整数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(hash[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sg[i]=j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SG-DFS打表</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> s[<span class="number">110</span>],sg[<span class="number">10010</span>],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SG_dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>(sg[x]!=<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> sg[x];</span><br><span class="line">    <span class="keyword">bool</span> vis[<span class="number">110</span>];</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=s[i])</span><br><span class="line">        &#123;</span><br><span class="line">            SG_dfs(x-s[i]);</span><br><span class="line">            vis[sg[x-s[i]]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> e;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;;i++)</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            e=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> sg[x]=e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般DFS只在打表解决不了的情况下用，首选打表预处理。</p>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>置顶文章示例</title>
      <link href="/article/article-top.html"/>
      <url>/article/article-top.html</url>
      
        <content type="html"><![CDATA[<p>【前言】这是置顶文章的示例。在<code>&lt;!-- more --&gt;</code>标签前的内容都会显示在首页的文章列表的摘录中，内容不能太多，建议在一至两段后即可添加more标签。</p><h2 id="置顶文章的顶部参数设置"><a href="#置顶文章的顶部参数设置" class="headerlink" title="置顶文章的顶部参数设置"></a>置顶文章的顶部参数设置</h2><ul><li><code>img:</code> 设置了首页列表左侧显示的图片，使用默认的置顶图片即可。如果需要替换，请进入博客根目录下的<code>source\img</code>文件夹下进行替换。</li></ul><p><code>topimg:</code> 设置是否显示右侧的置顶标志，true为显示，false为不显示。</p><p><code>top:</code> 设置置顶顺序，当top的值越大时，文章会显示在首页列表最上方。若无特殊需求，建议不要在其他文章中设置top参数，以免导致文章顺序排列错误。</p><h2 id="置顶文章的内容建议"><a href="#置顶文章的内容建议" class="headerlink" title="置顶文章的内容建议"></a>置顶文章的内容建议</h2><p>可将某篇特别的文章进行置顶展示或者专门用来编辑各种公告、通知、留言等内容。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Hexo的入门教程及Next主题配置</title>
      <link href="/article/Hexo%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html"/>
      <url>/article/Hexo%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<h2 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h2><h1 id="Hexo的入门教程及Next主题配置"><a href="#Hexo的入门教程及Next主题配置" class="headerlink" title="Hexo的入门教程及Next主题配置"></a>Hexo的入门教程及Next主题配置</h1><h2 id="Node及Hexo安装"><a href="#Node及Hexo安装" class="headerlink" title="Node及Hexo安装"></a>Node及Hexo安装</h2><p>hexo是什么？简单的说，就是一个静态博客的生成工具也可以说是一个搭建静态博客的框架，我<a href="anoyer.cn">这个博客</a>就是就是基于hexo生成的。9月份把这个博客用hexo折腾出来，前几天ACM区域赛事结束了，所以想记录下来折腾的过程，留着以后备用。这里只说如何在windows下成功安装hexo并运行起来，关于主题以及配置不做记录。</p><p><strong>安装Node.js</strong></p><p>因为Hexo是基于Node.js的，所以必须先安装Node，所以请<a href="https://nodejs.org/en/" target="_blank" rel="noopener">点击这里</a>去下载适合自己windows版本的Node吧。</p><p>（注意：在安装步骤里Custom Setup这一步记得选<strong>Add to PATH</strong>）。</p><p>安装好以后，打开<code>CMD</code>，(<del>那对于小白来说如何打开<code>CMD</code>呢？<code>win+R</code>然后输入<code>cmd</code>，点击确定，这样<code>CMD</code>就打开了.</del>)，输入<code>npm -v</code>,如果出现版本号，那说明安装成功了，并且环境变量也配置好了，如果是未知命令那就要配置下环境变量。</p><p><strong>安装Hexo</strong></p><p>还是打开<code>CMD</code>然后输入安装hexo的命令：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这一步需要一点时间，请稍等一会，让他安装好。</p><p>安装完成后在<code>CMD</code>里输入<code>hexo -v</code>出现一系列版本号就是安装成功啦<del>QAQ</del></p><p><img src="https://i.loli.net/2018/11/26/5bfb5a150c82b.png" alt=""></p><p>到这里，就要恭喜你成功完成了Hexo的安装了。</p><h2 id="生成一个博客"><a href="#生成一个博客" class="headerlink" title="生成一个博客"></a>生成一个博客</h2><p><strong>初始化个人博客仓库</strong></p><p>在电脑中建一个文件夹（路径根据自己爱好，我是在E盘里建了一个名为Blog的文件夹），我在这里命名为Blog吧。</p><p>然后通过<code>CMD</code>的<code>cd</code>到这个文件夹下，运行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>这个时候会将这个文件夹初始化为一个博客专用文件夹，生成过程稍微要点时间，耐心等待。</p><p>然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>之后npm将会自动安装你需要的组件，只需要等待npm操作即可。</p><p><strong>开始生成博客</strong></p><p>继续操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/26/5bfb5c8b6a062.jpg" alt=""></p><p>然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>会出现：</p><p><img src="https://i.loli.net/2018/11/26/5bfb5d1e524b6.png" alt=""></p><p>在浏览器里打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，你将会看到：</p><p><img src="http://ww4.sinaimg.cn/large/9fe4afa0gw1falkk5mnsvj211y0lcten.jpg" alt=""></p><p>到这里你已经有了一个属于你的本地Blog了。</p><h2 id="Coding部署"><a href="#Coding部署" class="headerlink" title="Coding部署"></a>Coding部署</h2><p>why不是Github，因为我个人认为搭建一个个人博客用Github会有诸多不便。</p><p>比如：1.搭建一个博客肯定就要往百度推送，不然别人搜不到你的博客有什么意思。而如果部署Github的话，百度无法抓取blog链接。2.Coding服务器在中国，所以Blog加载速度比GitHub快很多。</p><p><strong>注册Coding</strong></p><p>现在我们的博客已经在本地搭建完成，那要怎么才能让别人看到我们的博客呢？我们选择把我们的静态网页的代码发到coding上去，然后由coding负责将我们的代码展现出来。注册步骤比较简单，<a href="https://dev.tencent.com/user?from=coding" target="_blank" rel="noopener">点击这里</a>去注册。需要声明的是，如果你以后不想绑定独立域名，那么coding给你的域名默认为 <code>仓库名.coding.me</code></p><p>而你需要建立的仓库名需要与你的用户名保持一致，不然会出现问题，所以慎重起名字。然后填好个人信息，就会升级为银牌会员（能拥有5个私人仓库）。</p><p><strong>新建仓库</strong></p><p>在coding上面新建仓库</p><p><img src="https://i.loli.net/2018/11/26/5bfb606e733fd.png" alt=""></p><p>项目名称写成你的用户名，比如我的仓库名字为Blog,然后描述写不写都行，自己选择公有还是私有，然后直接选择创建项目。</p><p><strong>配置ssh</strong></p><p>这个过程的目的是在你的电脑和coding之间建立联系的通道，不然谁都能往上面增加内容，那你的博客岂不乱套了？<br>首先查看目录C:Users\用户名<br>有没有.ssh目录,如果没有，cmd在本地blog路径下,输入命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;这里填上你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>然后按3个回车。<br>再检查有没有.ssh目录，打开目录，你会看到出现3个文件：</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-932d836ffeea17da" alt="img"></p><p>然后用notepad++打开id——rsa.pub(这个是公钥，不带pub的是私钥，这个不要泄露出去），你会开到一堆字母，全选复制下来。<br>下面打来浏览器，进入你刚才创建的仓库，设置-部署公钥-新建部署公钥，公钥名称可以不填，将刚才复制的公钥粘贴在公钥内容里面。把授予权限打上勾！，然后添加就可以了。</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-ecb651235adacd32..g!&amp;rf=viewer_4" alt="img"></p><p><strong>站点配置</strong></p><p>下面我们进行博客的站点配置，打开Blog文件夹，你会看到这样的文件</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-757829fcd92f6aa2..8!&amp;rf=viewer_4" alt=""></p><p>这个文件的意思就是对你的博客进行一些设置，比如的你的用户名等等，记住这个文件特别重要！，以后你进行配置都要在这里进行，下面我们用notepad++打开它，这是你的网站信息</p><p><img src="https://i.loli.net/2018/11/26/5bfb61b302f16.png" alt=""></p><p>要是不懂英文就查字典写，注意：名称后面要放空格，不然会出错！！！。然后滑倒最下面，填写你的git地址，这一步特别关键，你可以照我这个写，同样，别忘了空格！</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-da7d3697439b88f6" alt=""></p><p>（本张图片来自vzhiwen，因为我Blog修改了域名，后面会讲到）</p><p>然后点击文件保存</p><p><strong>上传代码</strong></p><p>在Blog文件路径里，依次输入下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>如果提及不上去，就下载一个插件，在命令行里输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>再次提交就可以了</p><p>clean表示清除缓存，d是deploy的缩写，意思是将代码推送到coding，然后等待一些时间，第一次需要输入coding的用户名和密码或者询问你yes/no，按照说明输入即可，出现下面的字样说明推送完毕</p><p><strong>打开pages服务</strong></p><p>打开浏览器，进入coding，代码-pages服务，部署来源选择master，然后可以选择https访问（）这个就是打开你网页的时候地址栏前面显示的绿锁头，后面写着安全，如果不选择，就会出现叹号，不过影响不大。<br>现在，你的博客已经基本配置完成，现在就打开你的浏览器，输入你的网址试试吧！</p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>如果你感觉默认Blog主题可以通过这一块来学习，如果给自己Blog换个主题。</p><p><strong>主题安装</strong></p><p>为了使博客不太难看，我们需要安装一个主题，切换至刚刚生成的Hexo 目录，安装主题<br>$ cd Blog<br>$ git clone <a href="https://link.jianshu.com?t=https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p><p>如果没有Git可以去下一个，百度有一堆</p><p>这里选了一个极简的主题，也是Hexo众多主题中最受欢迎的一个。上面出现的喵神的主题 在<a href="https://link.jianshu.com?t=https://github.com/monniya/hexo-theme-new-vno" target="_blank" rel="noopener">这里</a>。Hexo也有<a href="https://link.jianshu.com?t=https://hexo.io/themes/" target="_blank" rel="noopener">更多主题</a>供你选择。</p><p><strong>启用主题：</strong></p><p>在你的站点配置文件<code>_config.yml</code>里修改<code></code>theme: next //刚刚安装主题的，名字</p><p><strong>主题配置：</strong></p><p><img src="http://ww4.sinaimg.cn/large/9fe4afa0gw1fan5zwhgvij20lf0bxaaq.jpg" alt=""></p><p>这是 NexT 默认的 Scheme —— Muse ，现在，你已经成功安装并启用了 NexT 主题。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。 4）<strong>主题设定</strong> 选择 Scheme Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Muse</span> <span class="selector-tag">-</span> 默认 <span class="selector-tag">Scheme</span>，这是 <span class="selector-tag">NexT</span> 最初的版本，黑白主调，大量留白</span><br><span class="line"><span class="selector-tag">Mist</span> <span class="selector-tag">-</span> <span class="selector-tag">Muse</span> 的紧凑版本，整洁有序的单栏外观</span><br><span class="line"><span class="selector-tag">Pisces</span> <span class="selector-tag">-</span> 双栏 <span class="selector-tag">Scheme</span>，小家碧玉似的清新</span><br><span class="line"><span class="selector-tag">Scheme</span> 的切换通过更改 主题配置文件，搜索 <span class="selector-tag">scheme</span> 关键字。 你会看到有三行 <span class="selector-tag">scheme</span> 的配置，将你需用启用的 <span class="selector-tag">scheme</span> 前面</span><br></pre></td></tr></table></figure><p>注释 # 即可。 选择 Pisce Scheme</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><p><strong>写文章</strong></p><p>所有基础框架都已经创建完成，接下来可以开始写你的第一篇博客了<br>在Blog/source/_posts下创建你的第一个博客吧，例如，创建一个名为FirstNight.md的文件，用Markdown大肆发挥吧，注意保存。<br>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: First Night</span><br><span class="line">---</span><br><span class="line">&gt; 我有一头**小毛驴**，可是我从来都不骑。</span><br></pre></td></tr></table></figure><p>然后本体测试看看，输入<code>hexo s</code></p><p>测试服务启动，你可以在浏览器中输入<a href="https://link.jianshu.com/?t=https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> 访问了</p><p>如果测试没问题，就可以上传到Coding了</p><p>依次输入下面命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>然后你就可以再浏览器里输入你的Coding项目链接访问了</p><h2 id="标签-分类-关于-标签图标-侧边栏菜单"><a href="#标签-分类-关于-标签图标-侧边栏菜单" class="headerlink" title="标签 分类 关于 标签图标 侧边栏菜单"></a>标签 分类 关于 标签图标 侧边栏菜单</h2><p><strong>创建文章</strong></p><p>在Blog路径下输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名称&quot;</span><br></pre></td></tr></table></figure><p>生产后会提示你文件路径，一般在Blog/source/_posts下</p><p>文章基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: CentOS7下Tomcat启动慢的原因及解决方案</span><br><span class="line">date: 2017-12-02 21:01:24</span><br><span class="line">comments: true #是否可评论</span><br><span class="line">toc: true #是否显示文章目录</span><br><span class="line">categories: &quot;云服务器&quot; #分类</span><br><span class="line">tags:   #标签</span><br><span class="line">- centOS</span><br><span class="line">- tomcat</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>创建标签</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2017-12-02 21:01:24</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure><p><strong>创建分类</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2017-12-02 21:01:24</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>标签图标实现效果图</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-9f1817d2d7627f7a.png?imageMogr2/auto-orient/" alt=""></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><p><strong>设置菜单：</strong></p><p><strong>设置 菜单</strong> 菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。 编辑主题配置文件，修改以下内容： 设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。 菜单示例配置(在主题配置文件中)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  #about: /about</span><br><span class="line">  #categories: /categories</span><br><span class="line">  tags: /tags</span><br><span class="line">  #commonweal: /404.html</span><br></pre></td></tr></table></figure><p>若你的站点运行在子目录中，请将链接前缀的 / 去掉 NexT 默认的菜单项有（标注 的项表示需要手动创建这个页面）：</p><table><thead><tr><th style="text-align:center">键值</th><th style="text-align:center">设定值</th><th style="text-align:center">显示文本（简体中文）</th></tr></thead><tbody><tr><td style="text-align:center">home</td><td style="text-align:center">home: /</td><td style="text-align:center">主页</td></tr><tr><td style="text-align:center">archives</td><td style="text-align:center">archives: /archives</td><td style="text-align:center">归档页</td></tr><tr><td style="text-align:center">categories</td><td style="text-align:center">categories: /categories</td><td style="text-align:center">分类页</td></tr><tr><td style="text-align:center">tags</td><td style="text-align:center">tags: /tags</td><td style="text-align:center">标签页</td></tr><tr><td style="text-align:center">about</td><td style="text-align:center">about: /about</td><td style="text-align:center">关于页面</td></tr><tr><td style="text-align:center">commonweal</td><td style="text-align:center">commonweal: /404.html</td><td style="text-align:center">公益 404</td></tr></tbody></table><p>设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。 以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 languages/zh-Hans.yml，在 menu 字段下添加一项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">  <span class="selector-tag">home</span>: 首页</span><br><span class="line">  <span class="selector-tag">archives</span>: 归档</span><br><span class="line">  <span class="selector-tag">categories</span>: 分类</span><br><span class="line">  <span class="selector-tag">tags</span>: 标签</span><br><span class="line">  <span class="selector-tag">about</span>: 关于</span><br><span class="line">  <span class="selector-tag">search</span>: 搜索</span><br><span class="line">  <span class="selector-tag">commonweal</span>: 公益404</span><br><span class="line">  <span class="selector-tag">something</span>: 有料</span><br></pre></td></tr></table></figure><p>设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。 菜单图标配置示例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  <span class="comment"># Icon Mapping.</span></span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: archive</span><br><span class="line">  commonweal: heartbeat</span><br></pre></td></tr></table></figure><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，NexT 将会使用 作为图标。 请注意键值（如 home）的大小写要严格匹配 7）<strong>侧栏</strong> 默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 主题配置文件 中的 sidebar 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。 设置侧栏的位置，修改 sidebar.position 的值，支持的选项有：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">left - 靠左放置</span><br><span class="line">right - 靠右放置</span><br></pre></td></tr></table></figure><p>目前仅 Pisces Scheme 支持 position 配置。影响版本5.0.0及更低版本。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  position: left</span><br></pre></td></tr></table></figure><p>设置侧栏显示的时机，修改 sidebar.display 的值，支持的选项有：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post - 默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">always - 在所有页面中都显示</span><br><span class="line">hide - 在所有页面中都隐藏（可以手动展开）</span><br><span class="line">remove - 完全移除</span><br><span class="line">sidebar:</span><br><span class="line">  display: post</span><br></pre></td></tr></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>搜索功能真心好用，当文章多起来的时候，标签提供的作用已经很少了，只能简单索引，搜索却能精确查找，这里我用的依旧是最简单的本地站内搜索。</p><p><strong>安装插件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p><strong>修改 站点配置 文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p><strong>修改 主题配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><h2 id="头像-（头像旋转）"><a href="#头像-（头像旋转）" class="headerlink" title="头像  （头像旋转）"></a>头像 （头像旋转）</h2><p><strong>实现效果图：</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-e035ce8ac8ea0b5b.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/138/format/webp" alt=""></p><p><strong>设置头像</strong></p><p>编辑 主题配置文件_config.yml</p><p>， 修改字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar</span><br></pre></td></tr></table></figure><p>， 值设置成头像的链接地址。其中，头像的链接地址可以是</p><table><thead><tr><th>地址</th><th>值</th></tr></thead><tbody><tr><td>完整的互联网</td><td><code>URI</code>:<code>http://example.com/avatar.png</code></td></tr><tr><td>站点内的地址</td><td>将头像放置主题目录下的<code>source/uploads/</code>（新建 <code>uploads</code> 目录若不存在） 配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/ 目录下</code>, 配置为：<code>avatar: /images/avatar.png</code></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: http://example.com/avatar.png</span><br></pre></td></tr></table></figure><p><strong>实现头像旋转：</strong></p><p>打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: <span class="number">0</span> auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  border-radius: <span class="number">80</span>px;</span><br><span class="line">  -webkit-border-radius: <span class="number">80</span>px;</span><br><span class="line">  -moz-border-radius: <span class="number">80</span>px;</span><br><span class="line">  box-shadow: inset <span class="number">0</span> <span class="number">-1</span>px <span class="number">0</span> <span class="comment">#333sf;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></span><br><span class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  -webkit-transition: -webkit-transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">  transition: transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img:hover &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></span><br><span class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></span><br><span class="line"><span class="comment">  animation-play-state:paused;*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  -webkit-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">  -moz-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">  transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(<span class="number">0</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100</span>% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(<span class="number">-360</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    -moz-transform: rotateZ(<span class="number">0</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100</span>% &#123;</span><br><span class="line">    -moz-transform: rotateZ(<span class="number">-360</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    transform: rotateZ(<span class="number">0</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100</span>% &#123;</span><br><span class="line">    transform: rotateZ(<span class="number">-360</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="友链"><a href="#友链" class="headerlink" title="友链"></a>友链</h2><p>编辑主题配置文件</p><p>添加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># title</span></span><br><span class="line">links_title: Links</span><br><span class="line">links:</span><br><span class="line">  MacTalk: http:<span class="comment">//macshuo.com/</span></span><br><span class="line">  Title: http:<span class="comment">//example.com/</span></span><br></pre></td></tr></table></figure><h2 id="社交网站"><a href="#社交网站" class="headerlink" title="社交网站"></a>社交网站</h2><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在主题配置文件</p><p>中。</p><p>1、 链接放置在 <code>social</code>字段下，一行一个链接。其键值格式是 <code>显示文本: 链接地址</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https:<span class="comment">//github.com/your-user-name</span></span><br><span class="line">  Twitter: https:<span class="comment">//twitter.com/your-user-name</span></span><br><span class="line">  微博: http:<span class="comment">//weibo.com/your-user-name</span></span><br><span class="line">  豆瓣: http:<span class="comment">//douban.com/people/your-user-name</span></span><br><span class="line">  知乎: http:<span class="comment">//www.zhihu.com/people/your-user-name</span></span><br><span class="line">  <span class="comment"># 等等12345678</span></span><br></pre></td></tr></table></figure><p>2、 设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键:<code>Font Awesome</code>图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是<code>Font Awesome</code>图标的名字（不必带 fa- 前缀）。 <code>enable</code> 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Icons</span></span><br><span class="line">social_icons:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  <span class="comment"># Icon Mappings</span></span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  微博: weibo</span><br></pre></td></tr></table></figure><h2 id="浏览量-访客量-阅读数"><a href="#浏览量-访客量-阅读数" class="headerlink" title="浏览量 访客量  阅读数"></a>浏览量 访客量 阅读数</h2><p>打开文件： <code>themes/next/_config.yml</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="keyword">true</span></span><br><span class="line">  site_uv_header: &lt;i class="fa fa-user"&gt;&lt;/i&gt; 访问人数</span><br><span class="line">  site_uv_footer: 人</span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="keyword">true</span></span><br><span class="line">  site_pv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; 总访问量</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="keyword">true</span></span><br><span class="line">  page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; 阅读数</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><p>相关操作：</p><ol><li>enable: true</li><li>添加相关中文说明，不添加也行。</li></ol><p><strong>修改统计规则及busuanzi失效修复</strong></p><p>打开<code>\themes\next\layout_partials\footer.swig</code>文件,在copyright前加上画红线这句话：</p><p>代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后再合适的位置添加显示统计的代码，如图：</p><p>代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="powered-by"&gt;</span><br><span class="line">&lt;i class="fa fa-user-md"&gt;&lt;/i&gt;&lt;span id="busuanzi_container_site_uv"&gt;</span><br><span class="line">  本站访客数:&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在这里有两中不同计算方式的统计代码：</p><ol><li><p>pv的方式，单个用户连续点击n篇文章，记录n次访问量</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id="busuanzi_container_site_pv"&gt;</span><br><span class="line">    本站总访问量&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></li></ol><p>uv的方式，单个用户连续点击n篇文章，只记录1次访客数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id="busuanzi_container_site_uv"&gt;</span><br><span class="line">  本站总访问量&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>添加之后再执行hexo d -g，然后再刷新页面就能看到效果</p><h2 id="字数统计-阅读时长-总字数"><a href="#字数统计-阅读时长-总字数" class="headerlink" title="字数统计 阅读时长 总字数"></a>字数统计 阅读时长 总字数</h2><p>在站点的根目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>post_wordcount</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: <span class="keyword">true</span></span><br><span class="line">  <span class="comment">#字数统计</span></span><br><span class="line">  wordcount: <span class="keyword">true</span></span><br><span class="line">  <span class="comment">#预览时间</span></span><br><span class="line">  min2read: <span class="keyword">true</span></span><br><span class="line">  <span class="comment">#总字数,显示在页面底部</span></span><br><span class="line">  totalcount: <span class="keyword">true</span></span><br><span class="line">  separated_meta: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><h2 id="文章发表-更新时间"><a href="#文章发表-更新时间" class="headerlink" title="文章发表 更新时间"></a>文章发表 更新时间</h2><p>打开主题配置文件 <code>_config.yml</code> ,搜索关键字 <code>updated_at</code> 设置为 <code>true</code> ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line">post_meta:</span><br><span class="line">  item_text: <span class="keyword">true</span></span><br><span class="line">  created_at: <span class="keyword">true</span></span><br><span class="line">  updated_at: ture</span><br><span class="line">  categories: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p><del>编辑文章,增加关键字<code>updated</code></del>（next可以根据文章改变时间自动更改）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: layout</span><br><span class="line">title: 关于</span><br><span class="line">date: <span class="number">2017</span><span class="number">-08</span><span class="number">-18</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">18</span></span><br><span class="line">updated: <span class="number">2017</span><span class="number">-09</span><span class="number">-05</span> <span class="number">20</span>:<span class="number">18</span>:<span class="number">54</span> <span class="comment">#手动添加更新时间,不加这一行会自动更新</span></span><br></pre></td></tr></table></figure><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p>在 themes/next/source/css/_custom/custom.styl 中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    background:url(/images/bg.jpg);</span><br><span class="line">    background-size:cover;</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态粒子"><a href="#动态粒子" class="headerlink" title="动态粒子"></a>动态粒子</h2><p><strong>修改<code>_layout.swig</code></strong></p><p>打开 <code>next/layout/_layout.swig</code><br>在 <code>&lt; /body&gt;</code>之前添加代码(注意不要放在&lt; /head&gt;的后面)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><strong>修改配置文件</strong></p><p>打开 <code>/next/_config.yml</code>,在里面添加如下代码：(可以放在最后面)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>到此就结束了，运行 <code>hexo clean</code>，然后运行 <code>hexo g</code>,然后运行 <code>hexo s</code>，最后打开浏览器在浏览器的地址栏输入 <code>localhost:4000</code> 就能看到效果了\（￣︶￣）/</p><p><strong>如果你感觉默认的线条太多的话</strong></p><p><strong>可以这么设置====&gt;</strong></p><p>在上一步修改 <code>_layout.swig</code>中，把刚才的这些代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">color=<span class="string">"0,0,255"</span> opacity=<span class="string">'0.7'</span> zIndex=<span class="string">"-2"</span> count=<span class="string">"99"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br></pre></td></tr></table></figure><p><strong>配置项说明</strong></p><ul><li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li><li><code>count</code>: 线条的总数量, 默认: <code>150</code></li><li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li></ul><h2 id="加载动画"><a href="#加载动画" class="headerlink" title="加载动画"></a>加载动画</h2><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>pace</code> ,设置为 <code>true</code> ,可以更换加载样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">Progress</span> <span class="selector-tag">bar</span> <span class="selector-tag">in</span> <span class="selector-tag">the</span> <span class="selector-tag">top</span> <span class="selector-tag">during</span> <span class="selector-tag">page</span> <span class="selector-tag">loading</span>.</span><br><span class="line"><span class="selector-tag">pace</span>: <span class="selector-tag">true</span></span><br><span class="line"># <span class="selector-tag">Themes</span> <span class="selector-tag">list</span>:</span><br><span class="line"><span class="selector-id">#pace-theme-big-counter</span></span><br><span class="line"><span class="selector-id">#pace-theme-bounce</span></span><br><span class="line"><span class="selector-id">#pace-theme-barber-shop</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-atom</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-circle</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-radar</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-simple</span></span><br><span class="line"><span class="selector-id">#pace-theme-corner-indicator</span></span><br><span class="line"><span class="selector-id">#pace-theme-fill-left</span></span><br><span class="line"><span class="selector-id">#pace-theme-flash</span></span><br><span class="line"><span class="selector-id">#pace-theme-loading-bar</span></span><br><span class="line"><span class="selector-id">#pace-theme-mac-osx</span></span><br><span class="line"><span class="selector-id">#pace-theme-minimal</span></span><br><span class="line"># <span class="selector-tag">For</span> <span class="selector-tag">example</span></span><br><span class="line"># <span class="selector-tag">pace_theme</span>: <span class="selector-tag">pace-theme-center-simple</span></span><br><span class="line"><span class="selector-tag">pace_theme</span>: <span class="selector-tag">pace-theme-flash</span> #替换更换样式</span><br></pre></td></tr></table></figure><h2 id="透明背景"><a href="#透明背景" class="headerlink" title="透明背景"></a>透明背景</h2><p><strong>内容板块透明</strong></p><p>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code> 文件 <code>.content-wrap</code> 标签下 <code>background: white</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p><strong>菜单栏背景</strong></p><p>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code> 文件 <code>.header-inner</code> 标签下 <code>background: white</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p><strong>站点概况背景</strong></p><p>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_sidebar.styl</code> 文件 <code>.sidebar-inner</code> 标签下 <code>background: white</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p>然后修改博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code> 文件 <code>.sidebar</code> 标签下 <code>background: $body-bg-color</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p><strong>按钮背景</strong></p><p>博客根目录 <code>themes\next\source\css\_common\components\post\post-button.styl</code> 同上修改对应位置为 <code>background: transparent;</code></p><h2 id="修改底部Hexo和主题信息"><a href="#修改底部Hexo和主题信息" class="headerlink" title="修改底部Hexo和主题信息"></a>修改底部Hexo和主题信息</h2><ol><li>在图标库中找到你自己喜欢的图标, 修改桃心,打开 <code>themes/next_config.yml</code> ,搜索关键字 <code>authoricon</code>,替换图标名</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">icon</span> <span class="selector-tag">between</span> <span class="selector-tag">year</span> <span class="selector-tag">and</span> <span class="selector-tag">author</span> @<span class="keyword">Footer</span></span><br><span class="line">authoricon: id-card</span><br></pre></td></tr></table></figure><p>2.隐藏网页底部 <code>Hexo 强力驱动</code></p><p>打开主题配置文件,搜索关键字 <code>copyright</code> ，如下:(或者直接删除)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">Footer</span> `<span class="selector-tag">powered-by</span>` <span class="selector-tag">and</span> `<span class="selector-tag">theme-info</span>` <span class="selector-tag">copyright</span></span><br><span class="line"><span class="selector-tag">copyright</span>: <span class="selector-tag">false</span></span><br></pre></td></tr></table></figure><h2 id="博客运行时间"><a href="#博客运行时间" class="headerlink" title="博客运行时间"></a>博客运行时间</h2><p>打开<code>next\layout\_partials</code>路径中的<code>footer.swig</code>,在文件中合适位置<del>（我加在了最后面）</del>加入下面代码段：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id="timeDate" title="网站运行时间"&gt;载入天数...&lt;/span&gt;&lt;span id="times" title="网站运行时间"&gt;载入时分秒...&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>在<code>next\layout\_layout.swig</code>中插入下面代码块：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>此处为建站时间 <span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">  var now = new Date(); </span><br><span class="line">  <span class="selector-tag">function</span> <span class="selector-tag">createtime</span>() &#123; </span><br><span class="line">      var grt= new Date("09/24/2018 23:45:01");</span><br><span class="line">      <span class="selector-tag">now</span><span class="selector-class">.setTime</span>(<span class="selector-tag">now</span><span class="selector-class">.getTime</span>()+250); </span><br><span class="line">      days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); </span><br><span class="line">      hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); </span><br><span class="line">      if(String(hnum).length ==1 )&#123;hnum = "0" + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">      mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = "0" + mnum;&#125; </span><br><span class="line">      seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">      snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = "0" + snum;&#125; </span><br><span class="line">      document.getElementById("timeDate").innerHTML ="(ㆆᴗㆆ)本弱已菜菜的存活了"+dnum+"&amp;thinsp;天"; </span><br><span class="line">      document.getElementById("times").innerHTML = hnum + "&amp;thinsp;时" + mnum + "&amp;thinsp;分" + snum + "&amp;thinsp;秒"; </span><br><span class="line">  &#125; </span><br><span class="line"><span class="selector-tag">setInterval</span>("<span class="selector-tag">createtime</span>()",250);</span><br></pre></td></tr></table></figure><p>然后就可以上传看效果啦</p><h2 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h2><p>自己使用的Hexo+NexT主题，主题默认的版权声明配置在<code>themes\next\_config.yml</code>文件中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Copy<span class="comment"># Declare license on posts</span></span><br><span class="line">post_copyright:</span><br><span class="line">  enable: <span class="keyword">false</span></span><br><span class="line">  license: CC BY-NC-SA <span class="number">3.0</span></span><br><span class="line">  license_url: https:<span class="comment">//creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure><p>直接把<code>enable</code> 改为<code>true</code>即可开启。</p><h2 id="文章结尾–加入感谢阅读"><a href="#文章结尾–加入感谢阅读" class="headerlink" title="文章结尾–加入感谢阅读"></a>文章结尾–加入感谢阅读</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">        &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下画红色部分代码（post-footer之前两个DIV）：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-865c7f94f89b907e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">    &#123;% <span class="keyword">include</span> <span class="string">'passage-end-tag.swig'</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后打开主题配置文件（<code>_config.yml</code>),在末尾添加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p><h2 id="Valine评论"><a href="#Valine评论" class="headerlink" title="Valine评论"></a>Valine评论</h2><p><strong>注册Leancloud</strong></p><p>评论系统其实是放在Leancloud上的，因此首先需要去注册一个账号</p><p>Leancloud官网，<a href="https://leancloud.cn/" target="_blank" rel="noopener">点我注册</a></p><p>注册完以后需要创建一个应用，名字可以：blog ，然后 进入应用-&gt;设置-&gt;应用key</p><p>获取你的appid 和 appkey 如图所示：</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-f78e74b42f5bc7e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>博客主题配置文件配置</strong></p><p>拿到你的appid和appkey之后，打开主题配置文件 搜索 valine，填入appid 和 appkey</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  appid:  your app id</span><br><span class="line">  appkey: your app key</span><br><span class="line">  notify: <span class="keyword">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  verify: <span class="keyword">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  placeholder: just so so</span><br><span class="line">  guest_info: nick,mail,link</span><br><span class="line">  pageSize: <span class="number">10</span></span><br></pre></td></tr></table></figure><p><strong>配置域名</strong></p><p>记得在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名 把你的域名加进去</p><h2 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h2><p><img src="https://segmentfault.com/img/remote/1460000009254889?w=1240&amp;h=578" alt=""></p><ul><li><p><a href="http://sharesdk.mob.com/" target="_blank" rel="noopener">ShareSDK</a></p></li><li><p>开始使用<br>注册一个账号，然后打开后台，找到appkey</p><p><img src="https://segmentfault.com/img/remote/1460000009254890?w=895&amp;h=300" alt=""></p></li><li><p>打开</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">博客\themes\next\layout\_partials\share</span><br></pre></td></tr></table></figure><ul><li>新建一个文件名为 <code>sharesdk.swig</code> ，并输入以下代码：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--MOB</span> <span class="selector-tag">SHARE</span> <span class="selector-tag">BEGIN--</span>&gt;</span><br><span class="line">                            &lt;div class="-mob-share-ui-button -mob-share-open"&gt;分享&lt;/div&gt;</span><br><span class="line">                            &lt;div class="-mob-share-ui" style="display: none"&gt;</span><br><span class="line">                                &lt;ul class="-mob-share-list"&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-weibo"&gt;&lt;p&gt;新浪微博&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-tencentweibo"&gt;&lt;p&gt;腾讯微博&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-qzone"&gt;&lt;p&gt;QQ空间&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-qq"&gt;&lt;p&gt;QQ好友&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-weixin"&gt;&lt;p&gt;微信&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-douban"&gt;&lt;p&gt;豆瓣&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-renren"&gt;&lt;p&gt;人人网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-kaixin"&gt;&lt;p&gt;开心网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-facebook"&gt;&lt;p&gt;Facebook&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-twitter"&gt;&lt;p&gt;Twitter&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-pocket"&gt;&lt;p&gt;Pocket&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-google"&gt;&lt;p&gt;Google+&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-youdao"&gt;&lt;p&gt;有道云笔记&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-mingdao"&gt;&lt;p&gt;明道&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-pengyou"&gt;&lt;p&gt;朋友网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-tumblr"&gt;&lt;p&gt;Tumblr&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-instapaper"&gt;&lt;p&gt;Instapaper&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-linkedin"&gt;&lt;p&gt;LinkedIn&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                &lt;/ul&gt;</span><br><span class="line">                                &lt;div class="-mob-share-close"&gt;取消&lt;/div&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                            &lt;div class="-mob-share-ui-bg"&gt;&lt;/div&gt;</span><br><span class="line">                            &lt;script id="-mob-share" src="http://f1.webshare.mob.com/code/mob-share.js?appkey=&#123;&#123; theme.shareSDKappkey &#125;&#125;"&gt;&lt;/script&gt;</span><br><span class="line">                            &lt;!<span class="selector-tag">--MOB</span> <span class="selector-tag">SHARE</span> <span class="selector-tag">END--</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>打开：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LX-Blog\themes\next\layout\post.swig</span><br></pre></td></tr></table></figure><ul><li>将以下代码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="post-spread"&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> theme.jiathis %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/jiathis.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.baidushare %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/baidushare.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.add_this_id %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/add-this.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.duoshuo_shortname <span class="keyword">and</span> theme.duoshuo_share %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/duoshuo_share.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>改成：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="post-spread"&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> theme.jiathis %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/jiathis.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.baidushare %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/baidushare.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.add_this_id %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/add-this.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.duoshuo_shortname <span class="keyword">and</span> theme.duoshuo_share %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/duoshuo_share.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.sharesdk %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/sharesdk.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>打开 <code>主题配置文件</code>，添加以下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sharesdk: true</span><br><span class="line">shareSDKappkey: 你的appkey</span><br></pre></td></tr></table></figure><h2 id="向百度站长推送"><a href="#向百度站长推送" class="headerlink" title="向百度站长推送"></a>向百度站长推送</h2><p>当我们一开始建完博客时，搜索引擎是搜索不到的，我们需要做一项工作就是通知搜索引擎收录我们的网站。</p><p><strong>如何被百度收录</strong></p><p>这里需要做两个事情，一个是<code>验证网站</code>，一个是<code>链接提交</code>.</p><p><strong>验证网证</strong></p><p>我们到百度站长平台里面的<a href="http://zhanzhang.baidu.com/dashboard/index" target="_blank" rel="noopener">站长工具</a>里面去验证网站，大概步骤如下：</p><ol><li>第一步：输入网站</li><li>第二步：站点属性</li><li>第三步：验证网站</li></ol><p>前两步都很简单，第三步：验证网站有以下三种方法：</p><ul><li>文件验证</li><li>HTML标签验证</li><li>CNAME验证</li></ul><p>这里我们选择<code>文件验证</code>的方法，然后会得到一个<code>baidu_verify_xxxxx.html</code>文件。<br>我使用的主题是<code>next</code>，所以我把这个验证文件放在<code>theme/next/source/</code>根目录下面，<br>这样当我们编译网站<code>hexo generate</code>的时候，这个文件会被原封不动的拷贝到我们博客的<code>public/</code>根目录下。</p><p>好，重要编译hexo并部署，完成验证.</p><p><strong>链接提交</strong></p><p>接下来我们进入<a href="https://ziyuan.baidu.com/linksubmit/index" target="_blank" rel="noopener">链接提交</a>.<br>链接提交有<code>手动</code>和<code>自动</code>两种方法，手动就是每次你有新的链接生成，你就需要手动提交链接到百度，这种方法太麻烦了，不使用。<br><code>自动</code>提交有三种方式：</p><ol><li>主动推送(实时)</li><li>自动推送</li><li>sitemap</li></ol><p>这里我们选择<code>sitemap</code>方式。</p><ul><li><p>安装hexo的sitemap网站地图生成插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></li><li><p>在你的hexo站点的<code>_config.yml</code>添加下面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo sitemap网站地图</span></span><br><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br></pre></td></tr></table></figure></li><li><p>配置成功后，hexo编译时会在hexo站点根目录生成<code>baidusitemap.xml</code>，部署网站后，提交到百度：</p></li></ul><h2 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h2><ul><li><p>下载插件<a href="https://link.jianshu.com/?t=https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">clipboard.js</a> 。</p></li><li><p>将下载的clipboard.js文件下的dist文件夹中的文件拖到<code>.\themes\next\source\js\src</code> 文件夹下</p></li></ul><ul><li><p>也是在<code>.\themes\next\source\js\src</code>目录下，创建<code>clipboard-use.js</code>，文件内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*页面载入完成后，创建复制按钮*/</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123; </span><br><span class="line">  <span class="comment">/* code */</span></span><br><span class="line">  <span class="keyword">var</span> initCopyCode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = <span class="string">''</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'  &lt;i class="fa fa-globe"&gt;&lt;/i&gt;&lt;span&gt;copy&lt;/span&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;/button&gt;'</span>;</span><br><span class="line">    $(<span class="string">".highlight .code pre"</span>).before(copyHtml);</span><br><span class="line">    <span class="keyword">new</span> ClipboardJS(<span class="string">'.btn-copy'</span>, &#123;</span><br><span class="line">        target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></li><li><p>在<code>.\themes\next\source\css\_custom\custom.styl</code>样式文件中添加下面代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码块复制按钮</span></span><br><span class="line">.highlight&#123;</span><br><span class="line">  <span class="comment">//方便copy代码按钮（btn-copy）的定位</span></span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    background-color: #eee;</span><br><span class="line">    background-image: linear-gradient(#fcfcfc,#eee);</span><br><span class="line">    border: 1px solid #d5d5d5;</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    font-size: <span class="number">13</span>px;</span><br><span class="line">    font-weight: <span class="number">700</span>;</span><br><span class="line">    line-height: <span class="number">20</span>px;</span><br><span class="line">    color: #333;</span><br><span class="line">    -webkit-transition: opacity <span class="number">.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    -o-transition: opacity <span class="number">.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    transition: opacity <span class="number">.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    padding: <span class="number">2</span>px <span class="number">6</span>px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: <span class="number">5</span>px;</span><br><span class="line">    top: <span class="number">5</span>px;</span><br><span class="line">    opacity: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy span &#123;</span><br><span class="line">    margin-left: <span class="number">5</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight:hover .btn-copy&#123;</span><br><span class="line">  opacity: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>.\themes\next\layout\_layout.swig</code>文件中，添加引用（注：在 swig 末尾或 body 结束标签（<code>&lt;/body&gt;</code>）之前添加）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 代码块复制功能 --&gt;</span><br><span class="line">  &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clipboard.min.js"</span>&gt;&lt;/script&gt;  </span><br><span class="line">  &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clipboard-use.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="博客压缩加速访问"><a href="#博客压缩加速访问" class="headerlink" title="博客压缩加速访问"></a>博客压缩加速访问</h2><p>在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp -g</span><br><span class="line">$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure><p>在如下图所示，新建 gulpfile.js ，并填入以下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require('gulp');</span><br><span class="line">var minifycss = require('gulp-minify-css');</span><br><span class="line">var uglify = require('gulp-uglify');</span><br><span class="line">var htmlmin = require('gulp-htmlmin');</span><br><span class="line">var htmlclean = require('gulp-htmlclean');</span><br><span class="line">// 压缩 public 目录 css</span><br><span class="line">gulp.task('minify-css', function() &#123;</span><br><span class="line">    return gulp.src('./public/**/*.css')</span><br><span class="line">        <span class="selector-class">.pipe</span>(<span class="selector-tag">minifycss</span>())</span><br><span class="line">        .pipe(gulp.dest('./public'));</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public 目录 html</span><br><span class="line">gulp.task('minify-html', function() &#123;</span><br><span class="line">  return gulp.src('./public/**/*.html')</span><br><span class="line">    <span class="selector-class">.pipe</span>(<span class="selector-tag">htmlclean</span>())</span><br><span class="line">    <span class="selector-class">.pipe</span>(<span class="selector-tag">htmlmin</span>(&#123;</span><br><span class="line">         <span class="attribute">removeComments</span>: true,</span><br><span class="line">         minifyJS: true,</span><br><span class="line">         minifyCSS: true,</span><br><span class="line">         minifyURLs: true,</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest('./public'))</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public/js 目录 js</span><br><span class="line">gulp.task('minify-js', function() &#123;</span><br><span class="line">    return gulp.src('./public/**/*.js')</span><br><span class="line">        <span class="selector-class">.pipe</span>(<span class="selector-tag">uglify</span>())</span><br><span class="line">        .pipe(gulp.dest('./public'));</span><br><span class="line">&#125;);</span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task('default', [</span><br><span class="line">    'minify-html','minify-css','minify-js'</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>生成博文是执行 hexo g &amp;&amp; gulp 就会根据 gulpfile.js 中的配置，对 public 目录中的静态资源文件进行压缩。</p><h2 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h2><p><strong>实现效果图</strong></p><p><img src="http://os94ofsac.bkt.clouddn.com/hexo-next-blog/as.png" alt=""></p><p><strong>具体实现方法</strong></p><p>打开<code>\themes\next\source\css_custom\custom.styl</code>,向里面加入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*主页文章添加阴影效果*/</span></span><br><span class="line"> <span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);</span><br><span class="line">   <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="修改代码块自定义样式"><a href="#修改代码块自定义样式" class="headerlink" title="修改代码块自定义样式"></a>修改<code></code>代码块自定义样式</h2><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="博客宝宝"><a href="#博客宝宝" class="headerlink" title="博客宝宝"></a>博客宝宝</h2><p><strong>效果如图</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/12642878-e1616d8839c3d477.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/377/format/webp" alt=""></p><p>安装依赖包,在站点根目录，打开Git Bash ，安装hexo-helper-live2d</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>在<code>站点配置文件</code>或者<code>主题配置文件</code>添加以下内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    <span class="keyword">use</span>: <span class="title">live2d</span>-<span class="title">widget</span>-<span class="title">model</span>-<span class="title">wanko</span></span><br><span class="line">  <span class="title">display</span>:</span><br><span class="line">    <span class="title">position</span>: <span class="title">right</span></span><br><span class="line">    <span class="title">width</span>: 150</span><br><span class="line">    <span class="title">height</span>: 300</span><br><span class="line">  <span class="title">mobile</span>:</span><br><span class="line">    <span class="title">show</span>: <span class="title">true</span></span><br></pre></td></tr></table></figure><p>安装需要的宠物文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &#123;packagename&#125;</span><br></pre></td></tr></table></figure><p>如效果图所示的宠物名为haruto， 则为 <code>npm install live2d-widget-model-haruto</code>,其他宠物包点击<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">live2d-widget-models</a>。如果需要修改宠物的位置，可以在<code>display</code>下添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 水平位置</span><br><span class="line">hOffset: 0</span><br><span class="line"># 垂直位置</span><br><span class="line">vOffset: -20</span><br></pre></td></tr></table></figure><p>详细内容可参考<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener"><strong>hexo-helper-live2d</strong></a></p><h2 id="点击红心特效和爆炸特效"><a href="#点击红心特效和爆炸特效" class="headerlink" title="点击红心特效和爆炸特效"></a>点击红心特效和爆炸特效</h2><p><strong>红心特效</strong></p><p>实现效果图：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-78e64c0a80bb559e.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/66/format/webp" alt=""></p><p>实现方法：</p><p>在网址输入:<code>http://7u2ss1.com1.z0.glb.clouddn.com/love.js</code></p><p>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span> 页面点击小红心 <span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>爆炸特效</strong></p><p>实现效果图：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-39a777c8c36cec1a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/990/format/webp" alt=""></p><p>实现方法：</p><p>跟那个红心是差不多的，首先在<code>themes/next/source/js/src</code>里面建一个叫fireworks.js的文件，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span><span class="params">(e)</span></span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span><span class="params">(e)</span></span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*Math.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span><span class="params">(e)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,y:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,radius:<span class="number">0.1</span>,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(<span class="number">80</span>,<span class="number">160</span>),lineWidth:<span class="number">0</span>,alpha:&#123;value:<span class="number">0</span>,easing:<span class="string">"linear"</span>,duration:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;<span class="keyword">var</span> n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;canvasEl.width=<span class="number">2</span>*window.innerWidth,canvasEl.height=<span class="number">2</span>*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;duration:<span class="number">1</span>/<span class="number">0</span>,update:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span><span class="params">(e)</span></span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span><span class="params">(e)</span></span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*Math.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span><span class="params">(e)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,y:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,radius:<span class="number">0.1</span>,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(<span class="number">80</span>,<span class="number">160</span>),lineWidth:<span class="number">0</span>,alpha:&#123;value:<span class="number">0</span>,easing:<span class="string">"linear"</span>,duration:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;<span class="keyword">var</span> n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;canvasEl.width=<span class="number">2</span>*window.innerWidth,canvasEl.height=<span class="number">2</span>*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;duration:<span class="number">1</span>/<span class="number">0</span>,update:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><p>打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; </span><br><span class="line">   &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; </span><br><span class="line">   &lt;script type="text/javascript" src="/js/src/fireworks.js"&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件，在里面最后写下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line">fireworks: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p><img src="https://upload-images.jianshu.io/upload_images/5308475-0c7e5e61b78dc937.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt=""></p><p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-446793cd6d740b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt=""></p><p>代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">    (<span class="selector-tag">function</span>()&#123;</span><br><span class="line">        if('&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">            if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">                alert('密码错误！');</span><br><span class="line">                <span class="selector-tag">history</span><span class="selector-class">.back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后在文章上写成类似这样：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-e6c726a0152cb8ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/720/format/webp" alt=""></p><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><p><del>打开 <code>Hexo</code> 站点下 <code>node_modules/hexo-generator-index/lib/generator.js</code> 文件。代码全部替换为：</del>(next 5.1以后主题已自带此功能)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>打开文章添加top字段,设置数值，数值越大文章越靠前：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: layout</span><br><span class="line">title: 标签1</span><br><span class="line">date: 2017-08-18 15:41:18</span><br><span class="line">tags: 标签1</span><br><span class="line">top: 100</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="域名更换"><a href="#域名更换" class="headerlink" title="域名更换"></a>域名更换</h2><p><strong>1.申请域名</strong></p><ul><li>我在万网购买的域名，地址：<a href="https://wanwang.aliyun.com/domain/com?spm=5176.8142029.388261.137.LoKzy7" target="_blank" rel="noopener">https://wanwang.aliyun.com/domain/com?spm=5176.8142029.388261.137.LoKzy7</a></li><li>我这里是<code>.cn</code>结尾的域名，一年39大洋<a href="https://anoyer.cn/">anoyer.cn</a></li></ul><p><strong>2.解析域名</strong></p><p>添加如下的解析</p><p>得到域名之后，到控制台进行解析</p><p>控制台-&gt;域名与网站(万网)-&gt;域名-&gt;域名列表-&gt;解析</p><p><img src="https://i.loli.net/2018/11/26/5bfbb9d07c358.png" alt=""></p><p><img src="https://i.loli.net/2018/11/26/5bfbba20982b6.png" alt=""></p><p>在阿里云控制台，设置主机记录<code>www</code>，记录类型为<code>A</code>，记录值是IP<code>103.210.21.11</code>。其中103.210.21.11是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Coding Pages。</p><p>在阿里云控制台，设置主机记录<code>@</code>，记录类型为<code>CNAME</code>，记录值是<code>anoyer.coding.me</code>。表示将<code>https://anoyer.cn</code>这个主域名映射<code>anoyer.coding.me</code></p><p>如何知道知道的 Coding Pages IP</p><p>在<code>命令提示符</code>中输入<code>ping anoyer.cn</code></p><p><img src="https://i.loli.net/2018/11/26/5bfbbbb54551d.png" alt=""></p><p>成功之后:</p><p><img src="https://i.loli.net/2018/11/26/5bfbb9d07c358.png" alt=""></p><p><strong>3.配置</strong></p><ul><li>在<code>博客</code>的<code>source</code>文件夹下建立一个<code>CNAME</code>的文件</li><li>内容写入你的域名信息，比如我这里是<code>anoyer.cn</code></li><li>发布到Coding即可</li></ul><p><strong>4.Coding 配置</strong></p><p>进入Coding 项目的Pages服务，进入设置</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\1543224779578.png" alt=""></p><p>把刚解析的域名绑定上去。到这里就OK了。</p><h2 id="插入网易云音乐"><a href="#插入网易云音乐" class="headerlink" title="插入网易云音乐"></a>插入网易云音乐</h2><p>在知道了页面的结构之后，你就可以将你的播放器添加在页面的任意位置，开始我是放在了首页，然后发现一上来就自动播放太吵了，于是就放在了侧边栏，想要听得朋友可以手动点击播放，<br>我们可以直接在网易云音乐中搜索我们想要插入的音乐，然后点击生成外链播放器</p><p><img src="https://img-blog.csdn.net/20170409181717791?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3Vuc2hpbmU5NDAzMjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>然后可以根据你得设置生成相应的html代码，将获得的html代码插入到你想要插入的位置即可</p><p><img src="https://img-blog.csdn.net/20170409181941920?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3Vuc2hpbmU5NDAzMjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>我放在了layout/_macro/sidebar.swig 文件下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"music163player"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">280</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=38358214&amp;auto=0&amp;height=66"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h2><p>在文章中使用<code>&lt; !--more--&gt;</code> 手动进行截断<br>这种方法可以根据文章的内容，自己在合适的位置添加 <code>&lt; !--more--&gt;</code> 标签，使用灵活，也是Hexo推荐的方法。</p><h2 id="在线联系"><a href="#在线联系" class="headerlink" title="在线联系"></a>在线联系</h2><p>​ 之前有访问过一些大佬的个人博客，里面有个在线联系功能，看着不错，所以也试着在自己的站点上接入了此功能。</p><p><strong>注册</strong></p><p>首先在<a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>注册个账号，点击-&gt;<a href="http://dashboard.daovoice.io/get-started?invite_code=0f81ff2f" target="_blank" rel="noopener">邀请码</a>是<code>2e5d695d</code>。<br><a href="https://s1.ax1x.com/2018/01/21/pW5DRP.png" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pW5DRP.png" alt="pW5DRP.png"></a></p><p>完成后，会得到一个<code>app_id</code>，后面会用到：<br><a href="https://s1.ax1x.com/2018/01/21/pW5yM8.png" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pW5yM8.png" alt="appid"></a></p><p><strong>修改head.swig</strong></p><p>修改<code>/themes/next/layout/_partials/head.swig</code>文件，添加内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&apos;init&apos;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>位置贴图：<br><a href="https://imgchr.com/i/pWIwmF" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pWIwmF.md.png" alt="pWIwmF.md.png"></a></p><p><strong>主题配置文件</strong></p><p>在<code>_config.yml</code>文件中添加内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Online contact</span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id:   # 这里填你刚才获得的 app_id</span><br></pre></td></tr></table></figure><p><strong>聊天窗口配置</strong></p><p>附上我的聊天窗口的颜色、位置等设置信息：<br><a href="https://s1.ax1x.com/2018/01/21/pWonhR.png" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pWonhR.png" alt="pWonhR.png"></a></p><p>至此，网页的在线联系功能已经完成，重新<code>hexo g</code>，<code>hexo d</code>上传GitHub后，页面上就能看到效果了。</p><p>就比如说你现在往右下角看看(～￣▽￣)～ ，欢迎撩我（滑稽）。</p><h2 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h2><blockquote><p>因为next主题自带打赏功能，所以我们只需要在next的主题配置文件中找到如下代码,<code>image</code>文件夹是我在blog/source下面建立的文件夹，然后把你的微信及支付宝收钱码图片拉进去，修改名字为<code>wechatreward.png</code>和<code>alipayreward.png</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: /image/wechatreward.png</span><br><span class="line">alipay: /image/alipayreward.png</span><br></pre></td></tr></table></figure><h2 id="修改文章间分割线"><a href="#修改文章间分割线" class="headerlink" title="修改文章间分割线"></a>修改文章间分割线</h2><p>打开 <code>themes/next/source/css/_common/components/post/post-eof.styl</code> ,修改：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.posts-expand &#123;</span><br><span class="line">  .post-eof &#123;</span><br><span class="line">    display: block;</span><br><span class="line">  <span class="comment">//  margin: $post-eof-margin-top auto $post-eof-margin-bottom;  </span></span><br><span class="line">    width: <span class="number">0</span>%; <span class="comment">//分割线长度</span></span><br><span class="line">    height: <span class="number">0</span>px; <span class="comment">// 分割线高度</span></span><br><span class="line">    background: $grey-light;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h1><p>1.<a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener">https://www.jianshu.com/p/f054333ac9e6</a></p><p>2.<a href="https://blog.csdn.net/qsdsn/article/details/77946677" target="_blank" rel="noopener">https://blog.csdn.net/qsdsn/article/details/77946677</a></p><p>3.<a href="https://www.aisun.org/2017/10/hexo-next+dingzhi/" target="_blank" rel="noopener">https://www.aisun.org/2017/10/hexo-next+dingzhi/</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-3374-String Problem(最大与最小表示法+kmp求循环节)</title>
      <link href="/article/HDU%20-%203374%20-%20String%20Problem(%E6%9C%80%E5%A4%A7%E4%B8%8E%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95+kmp%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82).html"/>
      <url>/article/HDU%20-%203374%20-%20String%20Problem(%E6%9C%80%E5%A4%A7%E4%B8%8E%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95+kmp%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82).html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="HDU-3374-String-Problem"><a href="#HDU-3374-String-Problem" class="headerlink" title="HDU - 3374 - String Problem"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3374" target="_blank" rel="noopener">HDU - 3374</a> - String Problem</h2><p><img src="https://i.loli.net/2018/11/17/5befdfc91fa46.png" alt="在这里插入图片描述"></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个字符串，问这个字符串经过移动后的字典序最小的字符串的首字符位置和字典序最大的字符串的首字符的位置，和能出现多少次最小字典序的字符串和最大字典序的字符串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用<a href="https://blog.csdn.net/Anoy_acer/article/details/84190327" target="_blank" rel="noopener">最小表示法与最大表示法O(n)</a>复杂度求出最小字典序和最大字典序串出现位置，然后利用kmp求出next，利用next数组性质求出循环节次数，因为最小和最大字典序串出现次数等于循环节次数（<del>这个关系可以脑补下</del>）</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNex</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(nex,<span class="number">0</span>,<span class="keyword">sizeof</span>(nex));</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=s[j+<span class="number">1</span>]&amp;&amp;j!=<span class="number">-1</span>)j=nex[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>]&amp;&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">        nex[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i&lt;j?i:j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s)!=EOF)&#123;</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> mi=GetMin();<span class="comment">//获取最小表示下标</span></span><br><span class="line">        <span class="keyword">int</span> mx=GetMax();<span class="comment">//获取最大表示下标</span></span><br><span class="line">        GetNex();</span><br><span class="line">        <span class="keyword">if</span>(len%(len-nex[len<span class="number">-1</span>]<span class="number">-1</span>)==<span class="number">0</span>)sum=len/(len-nex[len<span class="number">-1</span>]<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">else</span> sum=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>,mi+<span class="number">1</span>,sum,mx+<span class="number">1</span>,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>最小表示法与最大表示法</title>
      <link href="/article/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95%E4%B8%8E%E6%9C%80%E5%A4%A7%E8%A1%A8%E7%A4%BA%E6%B3%95(O(n)).html"/>
      <url>/article/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95%E4%B8%8E%E6%9C%80%E5%A4%A7%E8%A1%A8%E7%A4%BA%E6%B3%95(O(n)).html</url>
      
        <content type="html"><![CDATA[<h4 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h4><h3 id="最小表示法伪代码："><a href="#最小表示法伪代码：" class="headerlink" title="最小表示法伪代码："></a>最小表示法伪代码：</h3><p><strong>最小表示法的算法思路是维护两个指针i,j。</strong><br>令i=0,j=1<br>如果S[i] &gt; S[j] i=j, j=i+1<br>如果S[i] &lt; S[j] j++<br>如果S[i]==S[j] 设指针k，分别从i和j位置向下比较，直到S[i] != S[j]<br>​ <strong>如果S[i+k] &gt; S[j+k] i=i+k</strong><br>​ 否则j++<br><strong>返回i和j的小者</strong></p><h3 id="模版："><a href="#模版：" class="headerlink" title="模版："></a>模版：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i&lt;j?i:j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>河南农业大学热身赛标程</title>
      <link href="/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%83%AD%E8%BA%AB%E8%B5%9B%E6%A0%87%E7%A8%8B.html"/>
      <url>/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%83%AD%E8%BA%AB%E8%B5%9B%E6%A0%87%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<h1 id="河南农业大学热身赛标程"><a href="#河南农业大学热身赛标程" class="headerlink" title="河南农业大学热身赛标程"></a>河南农业大学热身赛标程</h1><h2 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h2><h3 id="A-宅宅的排位赛"><a href="#A-宅宅的排位赛" class="headerlink" title="A.宅宅的排位赛"></a>A.宅宅的排位赛</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> a, suma = <span class="number">0</span>, sumb = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">13</span>; i++)&#123;<span class="comment">//suma记录A1~N1的和</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">suma += a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">13</span>; i++)&#123;<span class="comment">//sumb记录A2~N2的和</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">sumb += a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, suma - sumb);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-冒泡排序"><a href="#B-冒泡排序" class="headerlink" title="B.冒泡排序"></a>B.冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, min_ = <span class="number">9999</span>,id=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"><span class="comment">//sort(a, a + n);//解法一：调用库函数快排函数</span></span><br><span class="line"><span class="comment">//解法二：手撸冒泡排序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">min_ =a[i];</span><br><span class="line">id = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++)&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &lt;= min_)min_ = a[j], id = j;</span><br><span class="line">&#125;</span><br><span class="line">swap(a[i], a[id]);<span class="comment">//把为排序的最小值换到当前i位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-小刘数字母"><a href="#C-小刘数字母" class="headerlink" title="C.小刘数字母"></a>C.小刘数字母</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; //万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10050</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        getchar();  <span class="comment">//接收空格</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;ch);</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;  <span class="comment">//记录出现次数</span></span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s); <span class="comment">//求出输入串长度</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==ch)cnt++;  <span class="comment">//如果ch出现就cnt++</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-HH的LCM"><a href="#D-HH的LCM" class="headerlink" title="D.HH的LCM"></a>D.HH的LCM</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="comment">//GCD解法</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a*b/__gcd(a,b));  <span class="comment">//a,b的最小公倍数=a*b/(a,b的最大公因数)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  暴力解法</span></span><br><span class="line">    <span class="comment">/*while(t--)&#123;</span></span><br><span class="line"><span class="comment">        int a,b;</span></span><br><span class="line"><span class="comment">        scanf("%d%d",&amp;a,&amp;b);</span></span><br><span class="line"><span class="comment">        for(int i=1;i&lt;=a*b;i++)&#123;    //a*b肯定能被整除a,b，所以LCM不大于a*b</span></span><br><span class="line"><span class="comment">            if(i%a==0&amp;&amp;i%b==0)&#123; //第一个能被整除的a,b的便是他们的最小公倍数</span></span><br><span class="line"><span class="comment">                printf("%d\n",i);</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E-斐波那契数"><a href="#E-斐波那契数" class="headerlink" title="E.斐波那契数"></a>E.斐波那契数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> Fib[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">Fib[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">Fib[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; Fib[i - <span class="number">1</span>] &lt;= <span class="number">100000</span>; i++, cnt++)&#123;<span class="comment">//暴力打表求出所有小于100000的斐波那契数</span></span><br><span class="line">Fib[i] = Fib[i - <span class="number">1</span>] + Fib[i - <span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, ans = <span class="number">0</span>;<span class="comment">//ans用来记录数量</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">26</span>; i &gt;= <span class="number">1</span>; i--)&#123;<span class="comment">//对于n从最大的Fib数列往前扫，</span></span><br><span class="line"><span class="keyword">if</span> (n &gt;= Fib[i])n -= Fib[i], ans++;<span class="comment">//如果发现不大于n的Fib数，就用n-Fib[i],ans++</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">贪心证明：因为对于任何n,比n小的且最大的Fib[i]一定满足  Fib[i]&lt;n&lt;2*Fib[i]  </span></span><br><span class="line"><span class="comment">因为 Fib[i-1]+Fib[i]=Fib[i+1]&lt;2*Fib[i]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-辉辉学长爱喝水"><a href="#F-辉辉学长爱喝水" class="headerlink" title="F.辉辉学长爱喝水"></a>F.辉辉学长爱喝水</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> a = <span class="built_in">ceil</span>(n / (m * <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);   <span class="comment">//  需要多少步 向上取整</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"No answer!\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n-a*m&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="G-打麻将"><a href="#G-打麻将" class="headerlink" title="G.打麻将"></a>G.打麻将</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="number">0</span>;      <span class="comment">//胡牌标记</span></span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">20</span>];   <span class="comment">//标记这张牌有没有被使用</span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">20</span>][<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> ttt[<span class="number">11</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">char</span> *str,<span class="keyword">int</span> cnt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;<span class="number">12</span>)<span class="keyword">return</span>;   <span class="comment">//因为组成刻子和顺子的牌需要12张，如果超过了就return</span></span><br><span class="line">    <span class="keyword">if</span>(cur==<span class="number">12</span>&amp;&amp;cnt==<span class="number">4</span>)&#123;    <span class="comment">//如果刻子和顺子用了12张牌且刻子和顺子数一共4，则进一步判断另外两张牌是不是对子</span></span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">14</span>;i++)<span class="keyword">if</span>(!vis[i])&#123;vis[i]=<span class="literal">true</span>,a=i;<span class="keyword">break</span>;&#125;   <span class="comment">//遍历出剩余第一张牌</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">14</span>;i++)<span class="keyword">if</span>(!vis[i])&#123;vis[i]=<span class="literal">true</span>,b=i;<span class="keyword">break</span>;&#125;   <span class="comment">//遍历出剩余第二张牌</span></span><br><span class="line">        <span class="keyword">if</span>(str[a]==str[b]&amp;&amp;(str[a]!=<span class="string">' '</span>&amp;&amp;str[b]!=<span class="string">' '</span>))      <span class="comment">//如果str[a]等于str[b]能胡牌 ，ok=true</span></span><br><span class="line">            ok=<span class="literal">true</span>;</span><br><span class="line">        vis[a]=vis[b]=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>&amp;&amp;!ok;i++) <span class="comment">//dfs遍历这14张牌所有组合情况</span></span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=<span class="number">13</span>&amp;&amp;!ok;j++)</span><br><span class="line">                <span class="keyword">if</span>(!vis[j])</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;=<span class="number">14</span>&amp;&amp;!ok;k++)&#123;      <span class="comment">//挑3个牌str[i],str[j],str[k]</span></span><br><span class="line">                        <span class="keyword">if</span>(!vis[k])</span><br><span class="line">                            <span class="keyword">if</span>((str[i]==str[j]&amp;&amp;str[j]==str[k])||(str[i]+<span class="number">1</span>==str[j]&amp;&amp;str[j]+<span class="number">1</span>==str[k]))&#123; <span class="comment">//看能否成顺子或刻子</span></span><br><span class="line">                                vis[i]=vis[j]=vis[k]=<span class="literal">true</span>;  <span class="comment">//把选的牌标记为已用</span></span><br><span class="line">                                dfs(cur+<span class="number">3</span>,str,cnt+<span class="number">1</span>);<span class="comment">//成了的话，cur+3，cur代表选的牌数，cnt+1，cnt代表现在顺子跟刻子的总和</span></span><br><span class="line">                                vis[i]=vis[j]=vis[k]=<span class="literal">false</span>; <span class="comment">//把牌标记为未用</span></span><br><span class="line">                            &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> t;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">   <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;a[<span class="number">1</span>]);</span><br><span class="line">        <span class="comment">//cnt++;</span></span><br><span class="line">        <span class="keyword">int</span> tt_=<span class="number">0</span>;</span><br><span class="line">        ok=<span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">memset</span>(ttt,<span class="number">0</span>,<span class="keyword">sizeof</span>(ttt));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">14</span>;i++)&#123;     <span class="comment">//判断是否是合法牌</span></span><br><span class="line">            ttt[a[i]-<span class="string">'0'</span>]++;</span><br><span class="line">            <span class="keyword">if</span>(ttt[a[i]-<span class="string">'0'</span>]&gt;<span class="number">4</span>)&#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"The data is error!\n"</span>);</span><br><span class="line">               tt_=<span class="number">1</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tt_)<span class="keyword">continue</span>;</span><br><span class="line">        sort(a+<span class="number">1</span>,a+<span class="number">15</span>); <span class="comment">//把牌从小到大排好序</span></span><br><span class="line">        dfs(<span class="number">0</span>,a,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(!ok)<span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>河南农业大学训练赛二标程</title>
      <link href="/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E4%BA%8C%E6%A0%87%E7%A8%8B.html"/>
      <url>/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E4%BA%8C%E6%A0%87%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<h1 id="河南农业大学测试赛二标程"><a href="#河南农业大学测试赛二标程" class="headerlink" title="河南农业大学测试赛二标程"></a>河南农业大学测试赛二标程</h1><h2 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h2><h3 id="A-判断闰年"><a href="#A-判断闰年" class="headerlink" title="A.判断闰年"></a>A.判断闰年</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>((n%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;n%<span class="number">100</span>!=<span class="number">0</span>)||(n%<span class="number">400</span>==<span class="number">0</span>))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-复读机"><a href="#B-复读机" class="headerlink" title="B.复读机"></a>B.复读机</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"C:/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> N;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">        <span class="keyword">char</span> c, last = <span class="number">0</span>;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            c = getchar();</span><br><span class="line">            <span class="keyword">if</span> (c != last)</span><br><span class="line">                <span class="built_in">putchar</span>(c), last = c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-hui姐识数"><a href="#C-hui姐识数" class="headerlink" title="C.hui姐识数"></a>C.hui姐识数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> Num[<span class="number">20</span>][<span class="number">100</span>] = &#123; <span class="string">"Ling"</span>, <span class="string">"Yi"</span>, <span class="string">"Er"</span>, <span class="string">"San"</span>, <span class="string">"Si"</span>, <span class="string">"Wu"</span>, <span class="string">"Liu"</span>, <span class="string">"Qi"</span>, <span class="string">"Ba"</span>, <span class="string">"Jiu"</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> Unit[<span class="number">10</span>][<span class="number">100</span>] = &#123; <span class="string">""</span>, <span class="string">"Shi"</span>, <span class="string">"Bai"</span>, <span class="string">"Qian"</span>,<span class="string">"Wan"</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span> (t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,k=<span class="number">4</span>,flag=<span class="number">0</span>,flag0=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)&#123; <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, Num[<span class="number">0</span>]); <span class="keyword">continue</span>; &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10000</span>; k&gt;=<span class="number">0</span>; i /= <span class="number">10</span>,k--)&#123;</span><br><span class="line">            <span class="keyword">if</span> (n / i)&#123;</span><br><span class="line">                <span class="keyword">if</span> (flag&amp;&amp;flag0)&#123; <span class="built_in">printf</span>(<span class="string">"%s"</span>, Num[<span class="number">0</span>]); flag = <span class="number">0</span>; &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s%s"</span>, Num[n / i], Unit[k]); </span><br><span class="line">                n %= i;</span><br><span class="line">                flag =<span class="number">1</span>;</span><br><span class="line">                flag0 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(flag)flag0 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>河南农业大学训练赛标程</title>
      <link href="/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E6%A0%87%E7%A8%8B.html"/>
      <url>/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E6%A0%87%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<h1 id="河南农业大学测试赛标程"><a href="#河南农业大学测试赛标程" class="headerlink" title="河南农业大学测试赛标程"></a>河南农业大学测试赛标程</h1><h2 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h2><h3 id="A-最大最小值"><a href="#A-最大最小值" class="headerlink" title="A.最大最小值"></a>A.最大最小值</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e9</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">ll a, min_ = maxn, max_ = -maxn;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a);</span><br><span class="line"><span class="keyword">if</span> (a&gt;max_)max_ = a;</span><br><span class="line"><span class="keyword">if</span> (a &lt; min_)min_ = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>, max_, min_);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-找众数"><a href="#B-找众数" class="headerlink" title="B.找众数"></a>B.找众数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e9</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n,a;</span><br><span class="line"><span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="keyword">sizeof</span>(num));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">num[a]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (num[i] &gt;= a)b = i,a=num[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-买！买！买！"><a href="#C-买！买！买！" class="headerlink" title="C.买！买！买！"></a>C.买！买！买！</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">15</span>, <span class="number">25</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10</span>; i &lt;= n * <span class="number">10</span>; i+=<span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= a[j])&#123;</span><br><span class="line">dp[i] += dp[i - a[j]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[n * <span class="number">10</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线性基模板</title>
      <link href="/article/%E7%BA%BF%E6%80%A7%E5%9F%BA%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E7%BA%BF%E6%80%A7%E5%9F%BA%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span>  <span class="title">Linear_Basis</span>&#123;</span></span><br><span class="line">    ll b[<span class="number">63</span>],nb[<span class="number">63</span>],tot; <span class="comment">//b为线性基  nb用来求第K小异或值 tot为nb元素个数</span></span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;    <span class="comment">//初始化</span></span><br><span class="line">        tot=<span class="number">0</span>;</span><br><span class="line">flag=<span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">memset</span>(nb,<span class="number">0</span>,<span class="keyword">sizeof</span>(nb));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Ins</span><span class="params">(ll  x)</span></span>&#123; <span class="comment">//插入</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x&amp;(<span class="number">1l</span>l&lt;&lt;i))&#123;</span><br><span class="line">                <span class="keyword">if</span>(!b[i])&#123;</span><br><span class="line">                    b[i]=x;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                x^=b[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Fin</span><span class="params">(ll x)</span></span>&#123; <span class="comment">//验证存在性</span></span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">0</span>&amp;&amp;b[<span class="number">0</span>])<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">int</span> j=i<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;j))&#123;</span><br><span class="line">                x^=b[i];</span><br><span class="line">                <span class="keyword">if</span>(!x)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Max</span><span class="params">(ll x)</span></span>&#123;   <span class="comment">//求最大值</span></span><br><span class="line">        ll res=x;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            res=max(res,res^b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Min</span><span class="params">(ll x)</span></span>&#123;   <span class="comment">//求最小值</span></span><br><span class="line">        ll res=x;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">62</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i])res^=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Rebuild</span><span class="params">()</span></span>&#123;   <span class="comment">//第K大</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b[j]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(b[i]&amp;(<span class="number">1l</span>l&lt;&lt;j))b[i]^=b[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">62</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i])nb[tot++]=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Kth_Max</span><span class="params">(ll k)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)k--;  <span class="comment">//???</span></span><br><span class="line">        ll res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(k&gt;=(<span class="number">1l</span>l&lt;&lt;tot))<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k&amp;(<span class="number">1l</span>l&lt;&lt;i))res^=nb[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;LB;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(Linear_Basis &amp;a,Linear_Basis &amp;b)</span></span>&#123;<span class="comment">//a和b都变成a+b</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">31</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b.b[i]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">        a.Ins(b.b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    b=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces-Round-515-(Div.3)--C.BooksQueries</title>
      <link href="/article/Codeforces-Round-515-Div-3-C-Books-Queries.html"/>
      <url>/article/Codeforces-Round-515-Div-3-C-Books-Queries.html</url>
      
        <content type="html"><![CDATA[<h2 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h2><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://codeforces.com/contest/1066/problem/C" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c03585f85a37.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给Q次操作，可以往书架右边边缘加书或者左边边缘加书或者查询一本书里边缘的最短距离</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><strong>用两个数组记录一本书是第几本放右边或左边的书，这样就可以保证如果这本书是当时通过放左边进入书架则距离为 ==min(L + b[id]-1,R - b[id])== ，如果通过右边则是 ==min(R + a[id]-1, L - a[id])== ，可以自己脑补下</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="keyword">const</span> ll LINF=<span class="number">0x3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> q,d;</span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> id,L=<span class="number">0</span>, R=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q);</span><br><span class="line"><span class="keyword">while</span> (q--) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ch &gt;&gt; id;</span><br><span class="line"><span class="keyword">if</span> (ch[<span class="number">0</span>] == <span class="string">'L'</span>) &#123;</span><br><span class="line">++cnt;</span><br><span class="line">a[id] = ++L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch[<span class="number">0</span>] == <span class="string">'R'</span>) &#123;</span><br><span class="line">++cnt;</span><br><span class="line">b[id] = ++R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (a[id] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, min(L + b[id]<span class="number">-1</span>,R - b[id]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, min(R + a[id]<span class="number">-1</span>, L - a[id]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces-Round-513-D-Social-Circles</title>
      <link href="/article/Codeforces-Round-513-C-Social-Circles.html"/>
      <url>/article/Codeforces-Round-513-C-Social-Circles.html</url>
      
        <content type="html"><![CDATA[<h2 id="博主博客"><a href="#博主博客" class="headerlink" title="博主博客"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主博客</a></h2><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://codeforces.com/contest/1060/problem/D" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://i.loli.net/2018/12/02/5c03597d47c5c.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>有n个人，及每个人坐位置时左右需要有多少空椅子，求所有人入座至少需要多少椅子</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><strong>利用贪心，将所有人的右边需要空的椅子数存在a数组里，右边需要空的椅子数存在b数组里，然后排序，将对应下标的max（a[i],b[i]）加起来再加上n，就是答案，因为大的和大的一合一起可以保证省去椅子最大</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">sort(a, a + n);</span><br><span class="line">sort(b, b + n);</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">ans += max(a[i], b[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans+n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线段树模板</title>
      <link href="/article/%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,p,a,b,m,x,y,ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,w,f;</span><br><span class="line">&#125;tree[<span class="number">400001</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> ll,<span class="keyword">int</span> rr)</span> </span>&#123;<span class="comment">//建树</span></span><br><span class="line">    tree[k].l=ll,tree[k].r=rr;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].l==tree[k].r)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tree[k].w);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m=(ll+rr)/<span class="number">2</span>;</span><br><span class="line">    build(k*<span class="number">2</span>,ll,m);</span><br><span class="line">    build(k*<span class="number">2</span>+<span class="number">1</span>,m+<span class="number">1</span>,rr);</span><br><span class="line">    tree[k].w=tree[k*<span class="number">2</span>].w+tree[k*<span class="number">2</span>+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//标记下传</span></span><br><span class="line">    tree[k*<span class="number">2</span>].f+=tree[k].f;</span><br><span class="line">    tree[k*<span class="number">2</span>+<span class="number">1</span>].f+=tree[k].f;</span><br><span class="line">    tree[k*<span class="number">2</span>].w+=tree[k].f*(tree[k*<span class="number">2</span>].r-tree[k*<span class="number">2</span>].l+<span class="number">1</span>);</span><br><span class="line">    tree[k*<span class="number">2</span>+<span class="number">1</span>].w+=tree[k].f*(tree[k*<span class="number">2</span>+<span class="number">1</span>].r-tree[k*<span class="number">2</span>+<span class="number">1</span>].l+<span class="number">1</span>);</span><br><span class="line">    tree[k].f=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ask_point</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;<span class="comment">//单点查询</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l==tree[k].r)&#123;</span><br><span class="line">        ans=tree[k].w;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=m) ask_point(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> ask_point(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_point</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//单点修改</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l==tree[k].r)&#123;</span><br><span class="line">        tree[k].w+=y;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=m) change_point(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> change_point(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    tree[k].w=tree[k*<span class="number">2</span>].w+tree[k*<span class="number">2</span>+<span class="number">1</span>].w; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//区间查询</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l&gt;=a&amp;&amp;tree[k].r&lt;=b) &#123;</span><br><span class="line">        ans+=tree[k].w;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=m) ask_interval(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(b&gt;m) ask_interval(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_interval</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//区间修改</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l&gt;=a&amp;&amp;tree[k].r&lt;=b)&#123;</span><br><span class="line">        tree[k].w+=(tree[k].r-tree[k].l+<span class="number">1</span>)*y;</span><br><span class="line">        tree[k].f+=y;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=m) change_interval(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(b&gt;m) change_interval(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    tree[k].w=tree[k*<span class="number">2</span>].w+tree[k*<span class="number">2</span>+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);<span class="comment">//n个节点 </span></span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);<span class="comment">//建树 </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);<span class="comment">//m种操作 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p);</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            ask_point(<span class="number">1</span>);<span class="comment">//单点查询,输出第x个数 </span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(p==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">            change_point(<span class="number">1</span>);<span class="comment">//单点修改 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(p==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);<span class="comment">//区间查询 </span></span><br><span class="line">            ask_interval(<span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;y);<span class="comment">//区间修改 </span></span><br><span class="line">             change_interval(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对数器模板</title>
      <link href="/article/%E5%AF%B9%E6%95%B0%E5%99%A8%E6%A8%A1%E7%89%88.html"/>
      <url>/article/%E5%AF%B9%E6%95%B0%E5%99%A8%E6%A8%A1%E7%89%88.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要建立主路径 和主路径下sample/ 保证程序文件存在</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mpat</span><span class="params">(<span class="string">"D:/dsq/"</span>)</span></span>;<span class="comment">//主路径 注意末尾跟'/'!!!! linuxpwd查看当前路径</span></span><br><span class="line">string an("A"), bn("B");//程序名字</span><br><span class="line"><span class="keyword">int</span> brek = <span class="number">5</span>;<span class="comment">//几个错误停止 -1不停止</span></span><br><span class="line"><span class="keyword">int</span> cmpt = <span class="number">1</span>;<span class="comment">//编译模式</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exec</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;cmd, <span class="built_in">string</span> &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">FILE *fp = _popen(cmd.c_str(), <span class="string">"r"</span>); <span class="comment">//linux下改为popen</span></span><br><span class="line"><span class="keyword">while</span> (fgets(buf, <span class="number">1024</span>, fp))</span><br><span class="line">res.append(buf);</span><br><span class="line">_pclose(fp); <span class="comment">//linux下改为pclose</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wrfile</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;path, <span class="built_in">stringstream</span> &amp;ss)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">FILE *fp = fopen(path.c_str(), <span class="string">"wb"</span>);</span><br><span class="line"><span class="keyword">while</span> (getline(ss, str))</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%s\r\n"</span>, str.c_str());</span><br><span class="line">fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">d_rand</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l, <span class="keyword">long</span> <span class="keyword">long</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k = rand() % <span class="number">4</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t = rand();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">t = t &lt;&lt; <span class="number">16</span> | rand();</span><br><span class="line"><span class="keyword">return</span> l + t % (r - l + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f_rand</span><span class="params">(<span class="keyword">double</span> l, <span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> t = rand() / <span class="number">32767.0</span>;</span><br><span class="line"><span class="keyword">return</span> l + t * (r - l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">c_rand</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> ch[rand() % ch.size()];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sample</span><span class="params">(<span class="built_in">stringstream</span> &amp;sout)</span> <span class="comment">//样例生成</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand(time(<span class="literal">NULL</span>));</span><br><span class="line">rand();</span><br><span class="line"><span class="keyword">if</span> (cmpt) <span class="comment">//编译功能</span></span><br><span class="line">&#123;</span><br><span class="line">system((<span class="string">"g++ "</span> + mpat + an + <span class="string">".cpp -o "</span> + mpat + an + <span class="string">".exe -std=c++11"</span>).c_str()); <span class="comment">//C++11支持</span></span><br><span class="line">system((<span class="string">"g++ "</span> + mpat + bn + <span class="string">".cpp -o "</span> + mpat + bn + <span class="string">".exe -std=c++11"</span>).c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> num, aout, bout, spat = mpat + <span class="string">"sample/"</span>; <span class="comment">//样例生成子路径</span></span><br><span class="line"><span class="built_in">stringstream</span> ss;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>, wa = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= brek; i++)</span><br><span class="line">&#123;</span><br><span class="line">ss.clear(), ss &lt;&lt; i, ss &gt;&gt; num;</span><br><span class="line">remove((spat + num + <span class="string">"samp.txt"</span>).c_str());</span><br><span class="line">remove((spat + num + <span class="string">"ans"</span> + an + <span class="string">".txt"</span>).c_str());</span><br><span class="line">remove((spat + num + <span class="string">"ans"</span> + bn + <span class="string">".txt"</span>).c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (wa &lt; brek &amp;&amp; cnt &lt; <span class="number">1e4</span>) <span class="comment">//几个错误停止 极限1W个样例</span></span><br><span class="line">&#123;</span><br><span class="line">ss.str(<span class="string">""</span>), ss.clear(), ss &lt;&lt; wa + <span class="number">1</span>, ss &gt;&gt; num;</span><br><span class="line">aout.clear(), bout.clear(), ss.clear();</span><br><span class="line">sample(ss);</span><br><span class="line">wrfile(spat + num + <span class="string">"samp.txt"</span>, ss);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ++cnt;</span><br><span class="line">exec(mpat + an + <span class="string">".exe &lt; "</span> + spat + num + <span class="string">"samp.txt"</span>, aout);</span><br><span class="line">exec(mpat + bn + <span class="string">".exe &lt; "</span> + spat + num + <span class="string">"samp.txt"</span>, bout);</span><br><span class="line"><span class="keyword">if</span> (aout != bout)</span><br><span class="line">&#123;</span><br><span class="line">ss.clear(), ss.str(aout);</span><br><span class="line">wrfile(spat + num + <span class="string">"ans"</span> + an + <span class="string">".txt"</span>, ss);</span><br><span class="line">ss.clear(), ss.str(bout);</span><br><span class="line">wrfile(spat + num + <span class="string">"ans"</span> + bn + <span class="string">".txt"</span>, ss);</span><br><span class="line">++wa;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\t"</span> &lt;&lt; wa &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 对数器 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>表达式求值（逆波兰）</title>
      <link href="/article/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.html"/>
      <url>/article/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (ch)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'-'</span>:<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> ss = <span class="string">""</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ToSuffix</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt;Se;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">Se.push(<span class="string">'#'</span>);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] &gt;= <span class="string">'0'</span>&amp;&amp;s[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ss += s[i++];</span><br><span class="line"><span class="keyword">while</span> (s[i] &gt;= <span class="string">'0'</span>&amp;&amp;s[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ss += s[i++];</span><br><span class="line">&#125;</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'('</span>)Se.push(s[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">')'</span>)&#123;</span><br><span class="line"><span class="keyword">while</span> (Se.top() != <span class="string">'('</span>)&#123;</span><br><span class="line">ss += Se.top();</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'+'</span> || s[i] == <span class="string">'-'</span> || s[i] == <span class="string">'*'</span> || s[i] == <span class="string">'/'</span>)&#123;</span><br><span class="line"><span class="keyword">while</span> (cmp(Se.top()) &gt;= cmp(s[i]))&#123;</span><br><span class="line">ss += Se.top();</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line">Se.push(s[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (Se.top() != <span class="string">'#'</span>)&#123;</span><br><span class="line">ss += Se.top();</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">double</span>&gt;num;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> x = <span class="number">0</span>, y = <span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ss[i]; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (ss[i] &gt;= <span class="string">'0'</span>&amp;&amp;ss[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ans = ss[i++] - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">while</span> (ss[i] &gt;= <span class="string">'0'</span>&amp;&amp;ss[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ans =ans*<span class="number">10</span>+ ss[i++]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line">num.push(ans);</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">' '</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">x = num.top();</span><br><span class="line">num.pop();</span><br><span class="line">y = num.top();</span><br><span class="line">num.pop();</span><br><span class="line"><span class="keyword">if</span> (ss[i] == <span class="string">'+'</span>)num.push(x + y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">'-'</span>)num.push(y - x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">'*'</span>)num.push(x * y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">'/'</span>)num.push(y / x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">x = num.top();</span><br><span class="line">num.pop();</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">"C:/Users/Administrator/Desktop/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">ss = <span class="string">""</span>;</span><br><span class="line">ToSuffix();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,Solve());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
            <tag> 逆波兰 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>后缀自动机模板</title>
      <link href="/article/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<h4 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h4><h2 id="SAM常解决的问题："><a href="#SAM常解决的问题：" class="headerlink" title="SAM常解决的问题："></a>SAM常解决的问题：</h2><ul><li>问题1.给定文本T，询问格式如下：给定字符串P，问P是否是T的子串。</li><li>问题2.给定字符串S，问它有多少不同的子串。（模板中的GetSubNum函数）</li><li>问题3.给定字符串S，求其所有不同子串的总长度。</li><li>问题4.给定字符串S，一系列询问——给出整数K_i，计算S的所有子串排序后的第K_i个。</li><li>问题5.给定字符串S，找到和它循环同构的字典序最小字符串。</li><li>问题.给定文本T，询问格式如下：给定字符串P，希望找出P作为子串在文本T中出现了多少次（出现区间可以相交）。</li><li>问题6.给定文本T，询问格式如下：给定字符串P，求P在文本中第一次出现的位置。</li><li>问题7.给定文本T，询问格式如下：给定字符串P，要求给出P在T中的所有出现位置（出现区间可以相交）。</li><li>问题8.给定两个字符串S和T。要求找出它们的最长公共子串，即一个字符串X，它同时是S和T的子串。</li></ul><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxc 28</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> len[maxn * <span class="number">2</span>], <span class="comment">//最长子串的长度(该节点字串数量=len[x]-len[link[x]])</span></span><br><span class="line">link[maxn * <span class="number">2</span>],   <span class="comment">//后缀链接(最短串前部减少一个字符所到达的状态)</span></span><br><span class="line">cnt[maxn * <span class="number">2</span>],    <span class="comment">//被后缀连接的数</span></span><br><span class="line">nex[maxn * <span class="number">2</span>][maxc],  <span class="comment">//状态转移(尾部加一个字符的下一个状态)(图)</span></span><br><span class="line">idx, <span class="comment">//节点编号</span></span><br><span class="line">last;    <span class="comment">//最后节点</span></span><br><span class="line">ll epos[maxn * <span class="number">2</span>]; <span class="comment">// enpos数（该状态子串出现数量）</span></span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line">ll a[maxn];<span class="comment">//长度为i的子串出现最大次数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Iint</span><span class="params">()</span> </span>&#123;<span class="comment">//初始化</span></span><br><span class="line">last = idx = <span class="number">1</span>; <span class="comment">//1表示root起始点 空集</span></span><br><span class="line">link[<span class="number">1</span>] = len[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//SAM建图</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Extend</span><span class="params">(<span class="keyword">int</span> c)</span> </span>&#123;     <span class="comment">//插入字符，为字符ascll码值</span></span><br><span class="line"><span class="keyword">int</span> x = ++idx; <span class="comment">//创建一个新节点x;</span></span><br><span class="line">len[x] = len[last] + <span class="number">1</span>; <span class="comment">//  长度等于最后一个节点+1</span></span><br><span class="line">epos[x] = <span class="number">1</span>;  <span class="comment">//接受节点子串除后缀连接还需加一</span></span><br><span class="line"><span class="keyword">int</span> p;  <span class="comment">//第一个有C转移的节点;</span></span><br><span class="line"><span class="keyword">for</span> (p = last; p &amp;&amp; !nex[p][c]; p = link[p])nex[p][c] = x;<span class="comment">//沿着后缀连接 将所有没有字符c转移的节点直接指向新节点</span></span><br><span class="line"><span class="keyword">if</span> (!p)link[x] = <span class="number">1</span>, cnt[<span class="number">1</span>]++;  <span class="comment">//全部都没有c的转移 直接将新节点后缀连接到起点</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> q = nex[p][c];    <span class="comment">//p通过c转移到的节点</span></span><br><span class="line"><span class="keyword">if</span> (len[p] + <span class="number">1</span> == len[q])    <span class="comment">//pq是连续的</span></span><br><span class="line">link[x] = q, cnt[q]++; <span class="comment">//将新节点后缀连接指向q即可,q节点的被后缀连接数+1</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> nq = ++idx;   <span class="comment">//不连续 需要复制一份q节点</span></span><br><span class="line">len[nq] = len[p] + <span class="number">1</span>;   <span class="comment">//令nq与p连续</span></span><br><span class="line">link[nq] = link[q];   <span class="comment">//因后面link[q]改变此处不加cnt</span></span><br><span class="line"><span class="built_in">memcpy</span>(nex[nq], nex[q], <span class="keyword">sizeof</span>(nex[q]));  <span class="comment">//复制q的信息给nq</span></span><br><span class="line"><span class="keyword">for</span> (; p&amp;&amp;nex[p][c] == q; p = link[p])</span><br><span class="line">nex[p][c] = nq;    <span class="comment">//沿着后缀连接 将所有通过c转移为q的改为nq</span></span><br><span class="line">link[q] = link[x] = nq; <span class="comment">//将x和q后缀连接改为nq</span></span><br><span class="line"> cnt[nq] += <span class="number">2</span>; <span class="comment">//  nq增加两个后缀连接</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">last = x;  <span class="comment">//更新最后处理的节点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNpos</span><span class="params">()</span> </span>&#123;<span class="comment">//求npos数，即该节点字串出现次数</span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= idx; i++)</span><br><span class="line"><span class="keyword">if</span> (!cnt[i])q.push(i);   <span class="comment">//将所有没被后缀连接指向的节点入队</span></span><br><span class="line"><span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> x = q.front();</span><br><span class="line">q.pop();</span><br><span class="line">epos[link[x]] += epos[x]; <span class="comment">//子串数量等于所有后缀连接指向该节点的子串数量和+是否为接受节点</span></span><br><span class="line"><span class="keyword">if</span> (--cnt[link[x]] == <span class="number">0</span>)q.push(link[x]);   <span class="comment">//当所有后缀连接指向该节点的处理完毕后再入队</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetSubNum</span><span class="params">()</span> </span>&#123;<span class="comment">//求不相同字串数量</span></span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= idx; i++)ans += len[i] - len[link[i]];<span class="comment">//一状态子串数量等于len[i]-len[link[i]]</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetSubMax</span><span class="params">()</span> </span>&#123;<span class="comment">//求出所有长度为k的子串中出现次数最多的子串出现次数</span></span><br><span class="line">GetNpos();</span><br><span class="line"><span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= idx; i++)a[len[i]] = max(a[len[i]], epos[i]);<span class="comment">//长度≤k的子串中出现次数最多的子串出现次数的最小值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)a[i] = max(a[i], a[i + <span class="number">1</span>]);<span class="comment">//求一遍后缀最大值就是答案</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, a[i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//freopen("c:/input.txt","r",stdin);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-4300-Clairewd’s message（KMP+特判）</title>
      <link href="/article/HDU-4300-Clairewd%E2%80%99s-message%EF%BC%88KMP-%E7%89%B9%E5%88%A4%EF%BC%89.html"/>
      <url>/article/HDU-4300-Clairewd%E2%80%99s-message%EF%BC%88KMP-%E7%89%B9%E5%88%A4%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4300" target="_blank" rel="noopener">题目</a></h1><p><img src="https://i.loli.net/2018/11/18/5bf0ee965dc1f.jpg" alt=""></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>先给你一个密码表。然后给你一个不一定完整的串。原串满足前一半是密码，后一半是明码。要求你最小的补全这个串。</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><strong>设给的串长度为len,则1…(len+1)/2的字母一定是密码。我们将1…(len+1)/2的字母全部安装密码表转换成原文，然后将得到的串求Next数组。再根据Next数组求出最大的相等的前后缀（长度一定小于或等于len/2，题目要求），然后输出就可以。然后这里一定要先加一个特判是不是不存在相等的前后缀，也就是s[1]!=s[len],这时输出原串一次，再输出一次原串全解密的串.</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn],s1[maxn];</span><br><span class="line"><span class="keyword">char</span> t[maxn];</span><br><span class="line"><span class="keyword">char</span> m[<span class="number">33</span>];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">0</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">1</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, m+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;=len+<span class="number">1</span>; i++)s1[i] = s[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= (len +<span class="number">1</span>)/ <span class="number">2</span>; j++) &#123;   <span class="comment">//进行原串前半部分解密</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[j] == m[i]) &#123;</span><br><span class="line">s[j] = <span class="string">'a'</span> + i<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Get_nex();</span><br><span class="line"><span class="keyword">int</span> nn =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a = nex[len];</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">0</span>) &#123;<span class="comment">//如果不存在相等的前后缀</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, s1 + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = (len+<span class="number">1</span>)/<span class="number">2</span>+<span class="number">1</span>; j &lt;= len; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[j] == m[i]) &#123;</span><br><span class="line">s[j] = <span class="string">'a'</span> + i - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">0</span>) &#123;<span class="comment">//找出最大的相等的前后缀且长度小于或等于len/2</span></span><br><span class="line"><span class="keyword">if</span> (s[a] == s[len]) &#123;</span><br><span class="line"><span class="keyword">if</span> (a &lt;= len / <span class="number">2</span>)nn = max(nn, a);</span><br><span class="line">a = nex[a];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, s1+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = nn+<span class="number">1</span>; i &lt;= len -nn; ++i)<span class="built_in">printf</span>(<span class="string">"%c"</span>,s[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-2594-Simpsons’ Hidden Talents（KMP的next数组应用）</title>
      <link href="/article/HDU-2594-Simpsons%E2%80%99-Hidden-Talents%EF%BC%88KMP%E7%9A%84next%E6%95%B0%E7%BB%84%E5%BA%94%E7%94%A8%EF%BC%89.html"/>
      <url>/article/HDU-2594-Simpsons%E2%80%99-Hidden-Talents%EF%BC%88KMP%E7%9A%84next%E6%95%B0%E7%BB%84%E5%BA%94%E7%94%A8%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h2 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h2><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2594" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c0359c5144f0.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给你两个串，求第一个串的前缀和第二个串的后缀的相同长度</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>( 这题和<a href="https://blog.csdn.net/Anoy_acer/article/details/82888646" target="_blank" rel="noopener">POJ2752</a>基本一样，都是利用next性质求公共前后缀 )。<strong>利用strcat(s,s1)将两个串接起来,利用KMP的next数组性质如果s[next[n-1]]=s[n],则此时前后缀相同，然后再开始回滚，若s[next[n-1]] == s[n-1]，则子串s[0,1,2,…,next[n-1]]是满足条件的子串。然后判断s[next[next[n-1]]] == s[n-1]是否成立，这样一直回滚，直到next[next[…..next[n-1]]] == -1为止，这样求出最长的长度ans，判断ans是否大于两个串的较短串的长度，如果大于ans=min(len1,len2);(因为如果ans大于min，则一定存在长度为min的公共前后缀)</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],s1[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn],len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">-1</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">0</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) != EOF) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s1);</span><br><span class="line"><span class="keyword">int</span> len1 = <span class="built_in">strlen</span>(s1);</span><br><span class="line"><span class="keyword">int</span> len2 = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="built_in">strcat</span>(s, s1);</span><br><span class="line">len = len1 + len2;</span><br><span class="line">Get_Nex();</span><br><span class="line"><span class="keyword">int</span> a = nex[len - <span class="number">1</span>], ans = <span class="number">0</span>, mi = min(len1, len2);</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[a] == s[len - <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">if</span> (ans &lt; a + <span class="number">1</span>)ans = a + <span class="number">1</span>;</span><br><span class="line">a = nex[a];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &gt; mi)ans = mi;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ans; i++) &#123; </span><br><span class="line"><span class="built_in">putchar</span>(s[i]);</span><br><span class="line"><span class="keyword">if</span> (i == ans - <span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ2752-Seek-the-Name-Seek-the-Fame（找相同的前后缀）</title>
      <link href="/article/POJ-2752-Seek-the-Name-Seek-the-Fame%EF%BC%88%E6%89%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E5%89%8D%E5%90%8E%E7%BC%80%EF%BC%89.html"/>
      <url>/article/POJ-2752-Seek-the-Name-Seek-the-Fame%EF%BC%88%E6%89%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E5%89%8D%E5%90%8E%E7%BC%80%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://poj.org/problem?id=2752" target="_blank" rel="noopener">题目</a></h1><h2 id="博主博客"><a href="#博主博客" class="headerlink" title="博主博客"></a><a href="https://anoyer.cn/">博主博客</a></h2><p><img src="https://i.loli.net/2018/12/02/5c0359e848e38.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong><em>求一个串中相同前后缀长度，并输出</em></strong></p><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p><strong>利用KMP的next数组性质；如果s[next[n-1]]=s[n],则此时前后缀相同，然后再开始回滚，==若s[next[n-1]] == s[n-1]，则子串s[0,1,2,…,next[n-1]]是满足条件的子串==。然后判断s[next[next[n-1]]] == s[n-1]是否成立，这样一直回滚，直到next[next[…..next[n-1]]] == -1为止</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">4e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">-1</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">0</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;M;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) != EOF) &#123;</span><br><span class="line">len = <span class="built_in">strlen</span>(s);</span><br><span class="line">Get_Nex();</span><br><span class="line"><span class="keyword">int</span> a = nex[len - <span class="number">1</span>];</span><br><span class="line">M.push(len);</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[a] == s[len - <span class="number">1</span>]) &#123;</span><br><span class="line">M.push(a + <span class="number">1</span>);</span><br><span class="line">a = nex[a];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!M.empty()) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, M.top());</span><br><span class="line">M.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)printf("%d ", nex[i]);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-3080 Blue Jeans(kmp+暴力求子串)</title>
      <link href="/article/POJ-3080-Blue-Jeans-kmp-%E6%9A%B4%E5%8A%9B%E6%B1%82%E5%AD%90%E4%B8%B2.html"/>
      <url>/article/POJ-3080-Blue-Jeans-kmp-%E6%9A%B4%E5%8A%9B%E6%B1%82%E5%AD%90%E4%B8%B2.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://poj.org/problem?id=3080" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c03578846211.jpg" alt="在这里插入图片描述"></p><hr><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给一个n，输入n个长度为60的字符串，求==最长公共子串==（2&lt;n&lt;=10),如果公共串长度大于等于3就输出这个子串（~~开始真的是瞎了，看了题直接将所有字符串连接来，求了波next数组，然后完美求出了子串长度，却发现要求是输出子串，心里***</strong>~~）**</p><hr><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p><strong>(==KMP+暴力求子串==)枚举第一个字符串的不同长度子串，判断她是否为下面多有的公共子串？如果是的话，那么我们就表明找到，则比较其长度，如果比已经找到的串长，那么就替换结果串 否则按字典序比较。取字典序考前的，就可以。</strong></p><hr><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">10</span>][<span class="number">62</span>];</span><br><span class="line"><span class="keyword">char</span> substr[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">char</span> result[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">int</span> next[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">int</span> len, n, max;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &gt; <span class="number">-1</span> &amp;&amp; substr[j + <span class="number">1</span>] != substr[i])</span><br><span class="line">j = next[j];</span><br><span class="line"><span class="keyword">if</span> (substr[j + <span class="number">1</span>] == substr[i])  j++;</span><br><span class="line">next[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j, m;</span><br><span class="line">get_next();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; n; k++) &#123;</span><br><span class="line">j = <span class="number">-1</span>, m = <span class="number">-1</span>;<span class="comment">//m最好取-1</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">60</span>; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &gt; <span class="number">-1</span> &amp;&amp; substr[j + <span class="number">1</span>] != str[k][i])</span><br><span class="line">j = next[j];</span><br><span class="line"><span class="keyword">if</span> (substr[j + <span class="number">1</span>] == str[k][i]) j++;</span><br><span class="line"><span class="keyword">if</span> (j &gt; m) m = j; <span class="comment">//m取可匹配到的最大值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m &lt; max)   max = m;<span class="comment">//max取可匹配到的最小值，公共子串以最小者为准</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t, i, ans;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str[i]);</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">58</span>; i++) &#123;</span><br><span class="line"><span class="built_in">strcpy</span>(substr, str[<span class="number">0</span>] + i);<span class="comment">//枚举第一个串的所有后缀串</span></span><br><span class="line">len = <span class="number">60</span> - i;</span><br><span class="line">max = <span class="number">65</span>;</span><br><span class="line">kmp();</span><br><span class="line"><span class="keyword">if</span> (max &gt; ans) &#123;</span><br><span class="line">ans = max;</span><br><span class="line"><span class="built_in">strncpy</span>(result, str[<span class="number">0</span>] + i, ans + <span class="number">1</span>);</span><br><span class="line">result[ans + <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (max == ans) &#123; <span class="comment">//若有相等长度，取字典序小者</span></span><br><span class="line"><span class="built_in">strncpy</span>(temp, str[<span class="number">0</span>] + i, ans + <span class="number">1</span>);</span><br><span class="line">temp[ans + <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(result, temp) &gt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">strcpy</span>(result, temp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &gt;= <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, result);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no significant commonalities\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C/C++文件读写大杂烩</title>
      <link href="/article/C++%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99.html"/>
      <url>/article/C++%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99.html</url>
      
        <content type="html"><![CDATA[<h2 id="c-：ifstream"><a href="#c-：ifstream" class="headerlink" title="c++：ifstream"></a>c++：ifstream</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fstream in;  <span class="comment">//读文件</span></span><br><span class="line">in.open(<span class="string">"路径"</span>); <span class="comment">//只读 可以放在fstreaam in("路径");</span></span><br><span class="line">fstream out;  <span class="comment">//写文件</span></span><br><span class="line">out.open(<span class="string">"路径"</span>);</span><br><span class="line">out.close();<span class="comment">//关闭文件</span></span><br></pre></td></tr></table></figure><h3 id="如果文件不存在返回错误"><a href="#如果文件不存在返回错误" class="headerlink" title="如果文件不存在返回错误"></a>如果文件不存在返回错误</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!in.is_open()) &#123;  <span class="comment">//文件不存在，返回错误，并生成一个文件</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Error!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>); <span class="comment">//终止程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如果文件不存在新建"><a href="#如果文件不存在新建" class="headerlink" title="如果文件不存在新建"></a>如果文件不存在新建</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fstream in;</span><br><span class="line">in.open(<span class="string">"路径"</span>,fstream::out||fstream::in);</span><br></pre></td></tr></table></figure><h3 id="成功打开文件后写入数组-写入文件"><a href="#成功打开文件后写入数组-写入文件" class="headerlink" title="成功打开文件后写入数组,写入文件"></a>成功打开文件后写入数组,写入文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">in&gt;&gt;a[i];</span><br><span class="line">out&lt;&lt;a[i];</span><br></pre></td></tr></table></figure><hr><h2 id="C：stdio-h-stdlib-h"><a href="#C：stdio-h-stdlib-h" class="headerlink" title="C：stdio.h ,stdlib.h"></a>C：stdio.h ,stdlib.h</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FILE *fp;  <span class="comment">//文件指针变量</span></span><br><span class="line">fp=fopen(<span class="string">"路径"</span>,“文件使用方式”); <span class="comment">//文件使用方式：r,w,a,rb,wb,ab,r+,w+,a+,rb+,wb+,ab+</span></span><br><span class="line">fclose(fp);<span class="comment">//关闭文件</span></span><br><span class="line">fgetc(fp); <span class="comment">//从fp指向文件读入一个字符</span></span><br><span class="line"><span class="built_in">fputs</span>(ch,fp); <span class="comment">//把字符写入fp指向文件</span></span><br><span class="line">fgets(str,n,fp); <span class="comment">//从fp指向文件中读入一个长度为n-1的字符串存在str中</span></span><br><span class="line"><span class="built_in">fputs</span>(str,fp) <span class="comment">//把str写入fp指向文件</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">"%d%s"</span>,i,str); <span class="comment">//向fp中输入整数i,字符串str;</span></span><br><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">"%d%s"</span>,i,str); <span class="comment">//从fp文件中读出一个整数一个字符串给整数i,字符串str</span></span><br></pre></td></tr></table></figure><h3 id="二进制读写–常用于读写结构体"><a href="#二进制读写–常用于读写结构体" class="headerlink" title="二进制读写–常用于读写结构体"></a>二进制读写–常用于读写结构体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fread(变量地址,size,count,fp);<span class="comment">//从fp指的文件中读入连续count个size字节数据写入到变量</span></span><br><span class="line">fwrite(变量地址,size,count,fp);<span class="comment">//从变量中取出连续count个size字节数据写入到fp指向文件中</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round 512--C.Vasya and Golden Ti</title>
      <link href="/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-C-Vasya-and-Golden-Ti.html"/>
      <url>/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-C-Vasya-and-Golden-Ti.html</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://codeforces.com/contest/1058/problem/C" target="_blank" rel="noopener">题目</a></h1><hr><p><img src="https://i.loli.net/2018/12/02/5c03595dcea22.jpg" alt="在这里插入图片描述"></p><hr><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给你一个由0-9组成的串，问能不能将串分成2份及两份以上，使每份数和相等</strong></p><hr><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p><strong>先特判下如果串中只有一种字符且串长度大于2则肯定可以，然后求出把0消去后串的前缀和（因为0对和没影响。再枚举i（i从1到n）位的前缀和num[i]，再看看（i-n）中有多少个前缀和num[j]能整除num[i]，如果满足的数量ans大于等于2且num[n]/ans==num[i],则一定可以分成ans份，否则输出no</strong></p><hr><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'0'</span>)<span class="keyword">continue</span>;</span><br><span class="line">num[cnt] = num[cnt - <span class="number">1</span>] + s[i] - <span class="string">'0'</span>;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] != s[i + <span class="number">1</span>])flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag&amp;&amp;n &gt;= <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; cnt; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; cnt; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (num[j] % num[i] == <span class="number">0</span>)ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &gt;= <span class="number">2</span> &amp;&amp; num[cnt - <span class="number">1</span>] % num[i] == <span class="number">0</span> &amp;&amp; num[cnt - <span class="number">1</span>] == num[i]*ans) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round 512--B.Vasya and Cornfield</title>
      <link href="/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-B-Vasya-and-Cornfield.html"/>
      <url>/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-B-Vasya-and-Cornfield.html</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://codeforces.com/contest/1058/problem/B" target="_blank" rel="noopener">题目</a></h1><p><img src="https://i.loli.net/2018/12/02/5c03592115b3f.jpg" alt="在这里插入图片描述"><br><img src="https://i.loli.net/2018/12/02/5c035921177ef.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给出一个矩形，顶点坐标具有笛卡尔性质，然后m次询问，每次询问给一个点，温这个点是否再矩形内</strong></p><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p><strong>因为矩形顶点具有笛卡尔性质所以矩形4条边的方程分别为y=a+x,y=a-x,y=x-a,y=2*n-d-x,所以判断下点和4条边的关系便可值答案</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;d);</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="keyword">if</span> (x + d&gt;=y&amp;&amp;x - d&lt;=y&amp;&amp;d - x &lt;=y &amp;&amp; <span class="number">2</span> * n - d - x &gt;= y)<span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1358-Period（KMP求前缀循环节）</title>
      <link href="/article/HDU-1358-Period%EF%BC%88KMP%E6%B1%82%E5%89%8D%E7%BC%80%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html"/>
      <url>/article/HDU-1358-Period%EF%BC%88KMP%E6%B1%82%E5%89%8D%E7%BC%80%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1358" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c0359b17427c.jpg" alt="在这里插入图片描述"></p><hr><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给定一个字符串，求出所有循环的前缀串，<br>输出前缀串的长度和循环的次数（大于一才算循环串）</strong></p><hr><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p><strong>思路是先构造出 next[] 数组，下标为 i，<br>定义一个变量 j = i - next[i] 就是next数组下标和下标对应值的差，<br>如果这个差能整除下标 i，即 i%j==0 ,则说明下标i之前的字符串（周期性字符串长度为 i）<br>一定可以由一个前缀周期性的表示出来，这个前缀的长度为刚才求得的那个差，<br>即 j，则这个前缀出现的次数为 i/j 。所以最后输出i和i/j即可。</strong></p><hr><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">-1</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>]&amp;&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> L = i - nex[i];</span><br><span class="line"><span class="keyword">if</span> ((i + <span class="number">1</span>) % L == <span class="number">0</span> &amp;&amp; (i+<span class="number">1</span>) / L &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i+<span class="number">1</span>, (i+<span class="number">1</span>) / L);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> Case = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) &#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">get_nex();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Test case #%d\n"</span>,++Case);</span><br><span class="line">Solve();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;n;i++)printf("%d ",nex[i]);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces-Round-511-Div-2-C-Enlarge-GCD</title>
      <link href="/article/Codeforces-Round-511-Div-2-C-Enlarge-GCD.html"/>
      <url>/article/Codeforces-Round-511-Div-2-C-Enlarge-GCD.html</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://codeforces.com/contest/1047/problem/C" target="_blank" rel="noopener">题目链接</a></h3><p><img src="https://i.loli.net/2018/12/02/5c03589d374dd.jpg" alt="在这里插入图片描述"></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p><strong>题解：先求出元素的最大公因子，开一个数组num记录每个数出现次数，再利用素数筛，求出所有数有当前质数因子的的个数</strong></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1.5e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> P[maxn], num[maxn], a[<span class="number">300005</span>], p[<span class="number">300005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b)</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,d=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">num[a[i]]++;</span><br><span class="line"><span class="keyword">if</span> (!d)</span><br><span class="line">d = a[i];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">d = gcd(d, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = d + <span class="number">1</span>; i &lt; maxn; i++)</span><br><span class="line"><span class="keyword">if</span> (!P[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>, j;</span><br><span class="line"><span class="keyword">for</span> (j = i; j &lt; maxn; j += i)</span><br><span class="line">P[j] = <span class="number">1</span>, cnt += num[j];</span><br><span class="line">ans = min(ans, n - cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &lt; n)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>后缀数组DA模板</title>
      <link href="/article/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<ul><li><strong>sufﬁx array</strong></li><li><strong>倍增算法 O(n*logn)</strong></li><li><strong>待排序数组⻓长度为n,放在0~n-1中,在后⾯面补⼀一个0</strong></li><li><strong>da(str, sa, rank, height, n, m);</strong></li><li><strong>例如:</strong></li><li><strong>n = 8;</strong></li><li><strong>num[] = { 1, 1, 2, 1, 1, 1, 1, 2, $ }; 注意num后⼀一位为0,其他⼤大于0</strong></li><li><strong>rank[] = { 4, 6, 8, 1, 2, 3, 5, 7, 0 }; rank[0~n-1]为有效值,rank[n]必定为0无效值</strong></li><li><strong>sa[] = { 8, 3, 4, 5, 0, 6, 1, 7, 2 }; sa[1~n]为有效值,sa[0]必定为n是⽆无效值</strong></li><li><strong>height[]= { 0, 0, 3, 2, 3, 1, 2, 0, 1 }; height[2~n]为有效值</strong></li><li><strong>稍微改动可以求⻓长公共前缀，需要注意两串串起始位置相同的情况</strong></li><li><strong>另外需要注意的是部分数组需要开两倍空间⼤大⼩小</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Problem: JZOJ1598(询问一个字符串中有多少至少出现两次的子串)</span></span><br><span class="line"><span class="comment">    Content: SA's Code and Explanation</span></span><br><span class="line"><span class="comment">    Author : Anoyer</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ch[MAXN], All[MAXN];</span><br><span class="line"><span class="keyword">int</span> SA[MAXN], rank[MAXN], Height[MAXN], tax[MAXN], tp[MAXN], a[MAXN], n, m; </span><br><span class="line"><span class="keyword">char</span> str[MAXN];</span><br><span class="line"><span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="comment">//tax[i] 计数排序辅助数组; tp[i] rank的辅助数组(计数排序中的第二关键字),与SA意义一样。</span></span><br><span class="line"><span class="comment">//a为原串</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RSort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//rank第一关键字,tp第二关键字。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) tax[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) tax[rank[tp[i]]] ++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++) tax[i] += tax[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i --) SA[tax[rank[tp[i]]] --] = tp[i]; <span class="comment">//确保满足第一关键字的同时，再满足第二关键字的要求</span></span><br><span class="line">&#125; <span class="comment">//计数排序,把新的二元组排序。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *f, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span> </span>&#123; <span class="keyword">return</span> f[x] == f[y] &amp;&amp; f[x + w] == f[y + w]; &#125; </span><br><span class="line"><span class="comment">//通过二元组两个下标的比较，确定两个子串是否相同</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Suffix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//SA</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) rank[i] = a[i], tp[i] = i;</span><br><span class="line">    m = <span class="number">127</span> ,RSort(); <span class="comment">//一开始是以单个字符为单位，所以(m = 127)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> w = <span class="number">1</span>, p = <span class="number">1</span>, i; p &lt; n; w += w, m = p) &#123; <span class="comment">//把子串长度翻倍,更新rank</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//w 当前一个子串的长度; m 当前离散后的排名种类数</span></span><br><span class="line">        <span class="comment">//当前的tp(第二关键字)可直接由上一次的SA的得到</span></span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>, i = n - w + <span class="number">1</span>; i &lt;= n; i ++) tp[++ p] = i; <span class="comment">//长度越界,第二关键字为0</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i ++) <span class="keyword">if</span> (SA[i] &gt; w) tp[++ p] = SA[i] - w;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新SA值,并用tp暂时存下上一轮的rank(用于cmp比较)</span></span><br><span class="line">        RSort(), swap(rank, tp), rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用已经完成的SA来更新与它互逆的rank,并离散rank</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i ++) rank[SA[i]] = cmp(tp, SA[i], SA[i - <span class="number">1</span>], w) ? p : ++ p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//离散：把相等的字符串的rank设为相同。</span></span><br><span class="line">    <span class="comment">//LCP</span></span><br><span class="line">    <span class="keyword">int</span> j, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; Height[rank[i ++]] = k) </span><br><span class="line">        <span class="keyword">for</span>( k = k ? k - <span class="number">1</span> : k, j = SA[rank[i] - <span class="number">1</span>]; a[i + k] == a[j + k]; ++ k);</span><br><span class="line">    <span class="comment">//这个知道原理后就比较好理解程序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str+<span class="number">1</span>);</span><br><span class="line">    n = <span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n; i ++) a[i ] = str[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    Suffix();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;SA[i]&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str+SA[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">/*int ans = Height[2];</span></span><br><span class="line"><span class="comment">    for (int i = 3; i &lt;= n; i ++) ans += max(Height[i] - Height[i - 1], 0);</span></span><br><span class="line"><span class="comment">    printf("%d\n", ans);    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AC自动机模板</title>
      <link href="/article/AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><strong>经常用来解决多模式匹配问题：就是有多个模式串P1,P2,P3…，Pm，求出所有这些模式串在连续文本T1….n中的所有可能出现的位置。</strong></p><ul><li><strong>例如：求出模式集合{“nihao”,”hao”,”hs”,”hsr”}在给定文本”sdmfhsgnshejfgnihaofhsrnihao”中所有可能出现的位置</strong></li><li><strong>给出L个模式字符串（加总长度为N），以及长度为M大文本，要求从大文本中提取每个模式字符串出现的位置。如果使用KMP算法，时间复杂度将达到O(LM+N)，而使用AC自动机可以在O(N+M)时间复杂度内解决这一问题，当L很大时，AC自动机的优势非常明显。</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_n 1000050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_tot 500050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ac</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">state</span> &#123;</span>  <span class="comment">//节点状态</span></span><br><span class="line"><span class="keyword">int</span> next[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> fail, cnt;<span class="comment">//指针fail 到这个节点有cnt个串结束</span></span><br><span class="line">&#125;stable[max_tot];</span><br><span class="line"><span class="keyword">int</span> size;  <span class="comment">//当前AC自动机节点个数</span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;  <span class="comment">//初始化</span></span><br><span class="line">met(stable);</span><br><span class="line">size = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.empty())q.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;  <span class="comment">//将模式串插入trie树</span></span><br><span class="line"><span class="keyword">int</span> now = <span class="number">0</span>; <span class="comment">//代表走到那个节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (!stable[now].next[ch])  <span class="comment">//节点不存在该字母边，则新建一个</span></span><br><span class="line">stable[now].next[ch] = size++;</span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line">&#125;</span><br><span class="line">stable[now].cnt++;<span class="comment">//结束位置++；</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span> </span>&#123;  <span class="comment">//构造失配fail指针，要构造当前节点fail指针需先构造爸爸节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)<span class="keyword">if</span> (stable[<span class="number">0</span>].next[i])q.push(stable[<span class="number">0</span>].next[i]);</span><br><span class="line"><span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (stable[u].next[i]) &#123;  <span class="comment">//如果有i这条边  枚举下他儿子</span></span><br><span class="line"><span class="keyword">int</span> v = stable[u].fail;</span><br><span class="line"><span class="keyword">int</span> a = stable[u].next[i];</span><br><span class="line"><span class="keyword">while</span> (v) &#123;  <span class="comment">//一直按箭头的fail</span></span><br><span class="line"><span class="keyword">if</span> (stable[v].next[i]) &#123;  <span class="comment">//如果他某个祖先有i这条边</span></span><br><span class="line">stable[a].fail = stable[v].next[i];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">v = stable[v].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!stable[a].fail)stable[a].fail = stable[<span class="number">0</span>].next[i];</span><br><span class="line">q.push(stable[u].next[i]);  <span class="comment">//节点加进去</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;  <span class="comment">//算所有祖先的和</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u) &#123;</span><br><span class="line">res = res + stable[u].cnt;</span><br><span class="line">stable[u].cnt = <span class="number">0</span>;  <span class="comment">//计算后不再计算，如果要计算不清零</span></span><br><span class="line">u = stable[u].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;   <span class="comment">//匹配</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, now = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (stable[now].next[ch])  <span class="comment">//如果当前状态太能找到后继节点，则走他</span></span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line"><span class="keyword">else</span> &#123;  <span class="comment">//否则只能跳爸爸</span></span><br><span class="line"><span class="keyword">int</span> p = stable[now].fail;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; stable[p].next[ch] == <span class="number">0</span>)p = stable[p].fail; <span class="comment">//始终没找到，只能指根节点  //找到就跳对应地方</span></span><br><span class="line">now = stable[p].next[ch];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (stable[now].cnt)res = res + get(now);<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;Ac;</span><br><span class="line"><span class="keyword">char</span> s[max_n];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">freopen(<span class="string">"C:/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>应用：查找母串中各单词出现次数–对应题目<a href="https://www.luogu.org/problemnew/show/P3796" target="_blank" rel="noopener">P3796</a></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_n 1000050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_tot 500050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aa</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line">&#125;ans[<span class="number">180</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(aa a, aa b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a.cnt == b.cnt)<span class="keyword">return</span> a.i &lt; b.i;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a.cnt &gt; b.cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ac</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">state</span> &#123;</span>  <span class="comment">//节点状态</span></span><br><span class="line"><span class="keyword">int</span> next[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> fail, cnt;<span class="comment">//指针fail 到这个节点有cnt个串结束</span></span><br><span class="line">&#125;stable[max_tot];</span><br><span class="line"><span class="keyword">int</span> size;  <span class="comment">//当前AC自动机节点个数</span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;  <span class="comment">//初始化</span></span><br><span class="line">met(stable);</span><br><span class="line">size = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.empty())q.pop();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">150</span>; i++) &#123;</span><br><span class="line">ans[i].i = i;</span><br><span class="line">ans[i].cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> n)</span> </span>&#123;  <span class="comment">//将模式串插入trie树</span></span><br><span class="line"><span class="keyword">int</span> now = <span class="number">0</span>; <span class="comment">//代表走到那个节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (!stable[now].next[ch])  <span class="comment">//节点不存在该字母边，则新建一个</span></span><br><span class="line">stable[now].next[ch] = size++;</span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line">&#125;</span><br><span class="line">stable[now].cnt=n;<span class="comment">//结束位置++；</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span> </span>&#123;  <span class="comment">//构造失配fail指针，要构造当前节点fail指针需先构造爸爸节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)<span class="keyword">if</span> (stable[<span class="number">0</span>].next[i])q.push(stable[<span class="number">0</span>].next[i]);</span><br><span class="line"><span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (stable[u].next[i]) &#123;  <span class="comment">//如果有i这条边  枚举下他儿子</span></span><br><span class="line"><span class="keyword">int</span> v = stable[u].fail;</span><br><span class="line"><span class="keyword">int</span> a = stable[u].next[i];</span><br><span class="line"><span class="keyword">while</span> (v) &#123;  <span class="comment">//一直按箭头的fail</span></span><br><span class="line"><span class="keyword">if</span> (stable[v].next[i]) &#123;  <span class="comment">//如果他某个祖先有i这条边</span></span><br><span class="line">stable[a].fail = stable[v].next[i];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">v = stable[v].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!stable[a].fail)stable[a].fail = stable[<span class="number">0</span>].next[i];</span><br><span class="line">q.push(stable[u].next[i]);  <span class="comment">//节点加进去</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;  <span class="comment">//算所有祖先的和</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">u = stable[u].fail;</span><br><span class="line"><span class="keyword">while</span> (u) &#123;</span><br><span class="line"><span class="keyword">if</span>(stable[u].cnt)ans[stable[u].cnt].cnt++;  <span class="comment">//找个数</span></span><br><span class="line">u = stable[u].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;   <span class="comment">//匹配</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, now = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (stable[now].next[ch])  <span class="comment">//如果当前状态太能找到后继节点，则走他</span></span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line"><span class="keyword">else</span> &#123;  <span class="comment">//否则只能跳爸爸</span></span><br><span class="line"><span class="keyword">int</span> p = stable[now].fail;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; stable[p].next[ch] == <span class="number">0</span>)p = stable[p].fail; <span class="comment">//始终没找到，只能指根节点  //找到就跳对应地方</span></span><br><span class="line">now = stable[p].next[ch];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (stable[now].cnt) &#123; </span><br><span class="line">ans[stable[now].cnt].cnt++; </span><br><span class="line">&#125;</span><br><span class="line">get(now);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;Ac;</span><br><span class="line"><span class="keyword">char</span> s[max_n];</span><br><span class="line"><span class="keyword">char</span> s1[<span class="number">200</span>][<span class="number">80</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="comment">/*ios::sync_with_stdio(0);</span></span><br><span class="line"><span class="comment">cin.tie(0); cout.tie(0);*/</span></span><br><span class="line"><span class="keyword">int</span> t, n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)&amp;&amp;n!=<span class="number">0</span>) &#123;</span><br><span class="line">Ac.init();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s1[i]);</span><br><span class="line">Ac.insert(s1[i], i);</span><br><span class="line">&#125;</span><br><span class="line">Ac.build();</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">Ac.match(s);</span><br><span class="line"></span><br><span class="line">sort(ans, ans + n+<span class="number">1</span>, cmp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[<span class="number">0</span>].cnt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s1[ans[<span class="number">0</span>].i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (ans[i].cnt == ans[<span class="number">0</span>].cnt)<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s1[ans[i].i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字符串Hash模板</title>
      <link href="/article/%E5%AD%97%E7%AC%A6%E4%B8%B2Hash%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%AD%97%E7%AC%A6%E4%B8%B2Hash%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<ul><li><strong>字符串 Hash</strong></li><li><strong>注意：m选择足够大的质数（至少大于字符串个数</strong>）</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function">ll <span class="title">gethash</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">ll h=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)</span><br><span class="line">h=((h&lt;&lt;<span class="number">8</span>)+s[i])%m;</span><br><span class="line"><span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line"><span class="comment">//freopen("C:/Users/Administrator/Desktop/input.txt","r",stdin);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>]=<span class="string">"22222222222222222222222222222"</span>;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">100</span>]=<span class="string">"22222222222222222222222223222"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,gethash(a,<span class="number">1e9</span>+<span class="number">7</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,gethash(b,<span class="number">1e9</span>+<span class="number">7</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Karp-Rabin算法模板</title>
      <link href="/article/Karp-Rabin%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/Karp-Rabin%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><strong>Karp Rabin 算法是利用hash函数的特性进行字符串匹配的。</strong></p><p><strong>KR算法对模式串和循环中每一次要匹配的子串按一定的hash函数求值，如果hash值相同，才进一步比较这两个串是否真正相等</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> d 256<span class="comment">//字符表中字符数目 </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,p;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RK</span><span class="params">(<span class="keyword">int</span> q)</span></span>&#123;</span><br><span class="line"><span class="comment">//assert( s&amp;&amp; p &amp;&amp; q &gt; 0 );//如果传递的有错，则打印提示 </span></span><br><span class="line"><span class="keyword">int</span> m=p.size();</span><br><span class="line"><span class="keyword">int</span> n=s.size();</span><br><span class="line"><span class="keyword">int</span> p_h=<span class="number">0</span>;<span class="comment">//模式串hash </span></span><br><span class="line"><span class="keyword">int</span> s_h=<span class="number">0</span>;<span class="comment">//s串hash </span></span><br><span class="line"><span class="keyword">int</span> h=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m<span class="number">-1</span>;i++)h=(h*d)%q;<span class="comment">//h表示ts+1 = 10(31415 - 10000*3) +2 = 14152中的10000   </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">p_h= ( d * p_h + p[i] ) % q;</span><br><span class="line">s_h= ( d * s_h + s[i] ) % q;</span><br><span class="line">&#125;<span class="comment">//求出开始p_h 和 s_h </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n-m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p_h==s_h)&#123;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line"><span class="keyword">if</span>(s[i+j]!=p[j])<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(j==m)<span class="built_in">printf</span>(<span class="string">"P occurs with shifts: %d\n"</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i&lt;n-m)&#123;</span><br><span class="line">s_h=(d*(s_h-s[i]*h)+s[i+m])%q;</span><br><span class="line"><span class="keyword">if</span>(s_h&lt;<span class="number">0</span>)</span><br><span class="line">s_h+=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s=<span class="string">"GEEKlmnaS FOR GEEKlmnaS njknaskjdaskjbdkjasbdjas njabijbaslbckjsbfGEEKlmnaS FOR GEEKlmnaS"</span>;</span><br><span class="line">p=<span class="string">"GEEKlmna"</span>;</span><br><span class="line"><span class="keyword">int</span> mod=<span class="number">127</span>;<span class="comment">////需要比s长度大 </span></span><br><span class="line">RK(mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>KMP模板及优化</title>
      <link href="/article/KMP%E6%A8%A1%E6%9D%BF%E5%8F%8A%E4%BC%98%E5%8C%96.html"/>
      <url>/article/KMP%E6%A8%A1%E6%9D%BF%E5%8F%8A%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<p><strong>解决问题：字符串匹配。给你两个字符串，寻找其中一个字符串是否包含另一个字符串，如果包含，返回包含的起始位置。 或者给你两个字符串，查找一个字符串在另外一个字符串中出现了几次</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">10001</span>;</span><br><span class="line"><span class="keyword">int</span> next[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> p[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prefix_next</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">next[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]==p[len])&#123;</span><br><span class="line">len++;</span><br><span class="line">next[i]=len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">len=next[len<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">next[i++]=len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_next</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">next[i]=next[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp_search</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(p);</span><br><span class="line"><span class="keyword">int</span> m=<span class="built_in">strlen</span>(s);</span><br><span class="line">prefix_next(n);</span><br><span class="line">move_next(n);</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;m)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==p[j]&amp;&amp;j==n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No.%d--&gt;%d\n"</span>,++cnt,i-j);</span><br><span class="line">j=next[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==p[j])&#123;</span><br><span class="line">i++;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">j=next[j];</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">-1</span>)&#123;</span><br><span class="line">i++;j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"NO FOUD"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;p;</span><br><span class="line">kmp_search();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>KMP优化模板</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1000005</span>],t[<span class="number">200000</span>];</span><br><span class="line"><span class="keyword">int</span> slen,tlen;</span><br><span class="line"><span class="keyword">int</span> nex[<span class="number">200000</span>];<span class="comment">//nex数组大小和短串一致</span></span><br><span class="line"><span class="keyword">int</span> ans,a,b,c,d,n,m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">get_nex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">-1</span>;<span class="comment">//j初始化为-1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tlen;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>  (t[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>)<span class="comment">//如果下一个不同，那么j就变成next[j]，注意next[j]是小于j的，无论j取任何值</span></span><br><span class="line">j=nex[j];<span class="comment">//往前回溯</span></span><br><span class="line">            <span class="keyword">if</span> (t[i]==t[j+<span class="number">1</span>] &amp;&amp; i!=<span class="number">0</span>) j++;<span class="comment">//如果相同，j++</span></span><br><span class="line">            nex[i]=j;<span class="comment">//这个是把算的j的值（就是相同的最大前缀和最大后缀长）赋给next[i]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;slen;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>  (s[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>) </span><br><span class="line">j=nex[j];</span><br><span class="line">            <span class="keyword">if</span> (s[i]==t[j+<span class="number">1</span>]) </span><br><span class="line">j++;</span><br><span class="line">            <span class="keyword">if</span> (j==tlen<span class="number">-1</span>)  </span><br><span class="line">ans++,j=nex[j];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,t,s);</span><br><span class="line">        slen=<span class="built_in">strlen</span>(s);</span><br><span class="line">        tlen=<span class="built_in">strlen</span>(t);<span class="comment">//这两个长度应该设为全局变量最开始时求出，不能用一次求一次</span></span><br><span class="line">        get_nex();</span><br><span class="line">        kmp();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sunday算法模板</title>
      <link href="/article/Sunday%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/Sunday%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><strong>Sunday算法由Daniel M.Sunday在1990年提出，它的思想跟BM算法很相似：1<br>只不过Sunday算法是从前往后匹配，在匹配失败时关注的是主串中参加匹配的最末位字符的下一位字符。<br>如果该字符没有在模式串中出现则直接跳过，即移动位数 = 模式串长度 + 1；<br>否则，其移动位数 = 模式串长度 - 该字符最右出现的位置(以0开始) = 模式串中该字符最右出现的位置到尾部的距离 + 1。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,p;</span><br><span class="line"><span class="keyword">int</span> next_[<span class="number">257</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len=p.size();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">256</span>;i++)next_[i]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)next_[p[i]]=i;   <span class="comment">//打next_表，记录模式串相应字符的位置 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sunday</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> slen=s.size();</span><br><span class="line"><span class="keyword">int</span> plen=p.size();</span><br><span class="line"><span class="keyword">if</span>(slen==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//如果s的长度为0，不需要匹配，直接返回-1 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;slen-plen;)&#123;</span><br><span class="line"><span class="keyword">int</span> j=i;<span class="comment">//s[j] </span></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;<span class="comment">//p[k]</span></span><br><span class="line"><span class="keyword">for</span>(;k&lt;plen&amp;&amp;j&lt;slen&amp;&amp;s[j]==p[k];j++,k++);<span class="comment">//一直匹配，找到失配 j 和  k </span></span><br><span class="line"><span class="keyword">if</span>(k==plen)<span class="comment">//说明已经找到一段匹配串</span></span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">//如果要查找出现次数，改成cnt++</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i+plen&lt;slen)i+=(plen-next_[s[i+plen]]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">////如果要查找出现次数，改成return cnt</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s=<span class="string">"I love DNF and Code"</span>;</span><br><span class="line">p=<span class="string">"love"</span>;</span><br><span class="line">getnext();</span><br><span class="line"><span class="keyword">if</span>(sunday())<span class="built_in">printf</span>(<span class="string">"you find it at %d\n"</span>,sunday());</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"sorry,you do not find it!\n"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字符串编辑距离模板</title>
      <link href="/article/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><strong>编辑距离，又称Levenshtein距离（也叫做Edit Distance），是指两个字串之间，由⼀一个转成 另一个所需的少编辑操作次数。许可的编辑操作包括将⼀一个字符替换成另一个字符，插入一个字 符，删除一个字符</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>; </span><br><span class="line"><span class="keyword">int</span> T, cas = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> n, m; </span><br><span class="line"><span class="keyword">int</span> dp[N][N]; </span><br><span class="line"><span class="keyword">char</span> s[N], t[N]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s,t)!=EOF)&#123;</span><br><span class="line"><span class="keyword">int</span> n=(<span class="keyword">int</span>)<span class="built_in">strlen</span>(s),m=(<span class="keyword">int</span>)<span class="built_in">strlen</span>(t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">dp[i][<span class="number">0</span>]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line">dp[<span class="number">0</span>][i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">dp[i][j]=min(dp[i<span class="number">-1</span>][j],dp[i][j<span class="number">-1</span>])+<span class="number">1</span>;</span><br><span class="line">dp[i][j]=min(dp[i][j],dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+(s[i<span class="number">-1</span>]!=t[j<span class="number">-1</span>]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n][m]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Manacher回文串算法（马拉车）模板</title>
      <link href="/article/Manacher%E5%9B%9E%E6%96%87%E4%B8%B2%E7%AE%97%E6%B3%95%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%EF%BC%89%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/Manacher%E5%9B%9E%E6%96%87%E4%B8%B2%E7%AE%97%E6%B3%95%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%EF%BC%89%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><strong>求一个串中最长回文串的长度</strong><br><strong>给定一个字符串，求出其最长回文子串。例如：<br>（1）s=”abcd”, 最长回文长度为 1；<br>（2）s=”ababa”, 最长回文长度为 5；<br>（3）s=”abccb”, 最长回文长度为 4，即 bccb。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">111111</span>];</span><br><span class="line"><span class="keyword">char</span> s_new[<span class="number">111111</span>*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">111111</span>*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">    s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s_new[j++] = s[i];</span><br><span class="line">        s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    s_new[j] = <span class="string">'\0'</span>;  <span class="comment">//别忘了哦  </span></span><br><span class="line"> <span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line">    <span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line">    <span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">            p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p[i] = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">            p[i]++;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i + p[i])  </span><br><span class="line">        &#123;</span><br><span class="line">            id = i;</span><br><span class="line">            mx = i + p[i];</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line">       <span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">    printf("\n");*/</span></span><br><span class="line">    <span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s))</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Manacher());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>拓展KMP模板</title>
      <link href="/article/%E6%8B%93%E5%B1%95KMP%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E6%8B%93%E5%B1%95KMP%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<h4 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h4><ul><li><strong>扩展KMP</strong></li><li><strong>next[i]表示为模式串S2中以i为起点的后缀字符串和模式串S2的最长公共前缀长度.</strong></li><li><strong>extend[i]表示为以字符串S1中以i为起点的后缀字符串和模式串S2的最长公共前缀长度.</strong><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100010</span>;<span class="comment">//字符串长度最大值 </span></span><br><span class="line"><span class="keyword">int</span> next[maxn],ex[maxn];<span class="comment">//ex数组即为extend数组</span></span><br><span class="line"><span class="keyword">char</span> s[maxn],s2[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="comment">//预处理计算next数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j,po,len=<span class="built_in">strlen</span>(s);</span><br><span class="line">next[<span class="number">0</span>]=len;<span class="comment">//初始化next[0]</span></span><br><span class="line"><span class="keyword">while</span>(s[i]==s[i+<span class="number">1</span>]&amp;&amp;i+<span class="number">1</span>&lt;len)<span class="comment">//计算next[1]</span></span><br><span class="line">i++;</span><br><span class="line">next[<span class="number">1</span>]=i;</span><br><span class="line">po=<span class="number">1</span>;<span class="comment">//初始化po的位置 </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(next[i-po]+i&lt;next[po]+po)<span class="comment">//第一种情况，可以直接得到next[i]的值</span></span><br><span class="line">next[i]=next[i-po];</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//第二种情况，要继续匹配才能得到next[i]的值 </span></span><br><span class="line">&#123;</span><br><span class="line">j=next[po]+po-i;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span>)j=<span class="number">0</span>;<span class="comment">//如果i&gt;po+next[po],则要从头开始匹配</span></span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len&amp;&amp;s[j]==s[j+i])<span class="comment">//计算next[i]</span></span><br><span class="line">j++;</span><br><span class="line">next[i]=j;</span><br><span class="line">po=i;<span class="comment">//更新po的位置 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//计算extend数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j,po,len=<span class="built_in">strlen</span>(s),l2=<span class="built_in">strlen</span>(s2);</span><br><span class="line">getnext();<span class="comment">//计算子串的next数组</span></span><br><span class="line"><span class="keyword">while</span>(s[i]==s2[i]&amp;&amp;i&lt;len)i++;</span><br><span class="line">ex[<span class="number">0</span>]=i;</span><br><span class="line">po=<span class="number">0</span>;<span class="comment">//初始化po的位置</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(next[i-po]+i&lt;ex[po]+po)</span><br><span class="line">ex[i]=next[i-po];<span class="comment">//第一种情况</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">j=ex[po]+po-i;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span>)j=<span class="number">0</span>;<span class="comment">//如果j&gt;ex[po]+po则从头开始匹配</span></span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len&amp;&amp;j&lt;&lt;l2&amp;&amp;s[j+i]==s2[j])<span class="comment">//计算ex[i]</span></span><br><span class="line">j++;</span><br><span class="line">ex[i]=j;</span><br><span class="line">po=i; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>KMP最短公共祖先</title>
      <link href="/article/KMP%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html"/>
      <url>/article/KMP%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html</url>
      
        <content type="html"><![CDATA[<p><strong>HDU1841–题意是给出两个串，用这两个串组成一个新串，使新串包含这两个串，</strong><br><strong>问这个新串的长度最小是多少，显然，对于两个串A，B，A如果是B的字串或者B如果是A的字串的话，直接输出那个母串的长度即可，如果没有这种关系，那么看一个串的后缀是否是另一个串的前缀如果某个串的后缀与另一个串的前缀的公共部分最长，则答案=A.length+B.length-公共长度。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000100</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">3</span>][<span class="number">2</span>*N];</span><br><span class="line"><span class="keyword">int</span> fail[<span class="number">2</span>*N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> &amp;i, <span class="keyword">int</span> &amp;j, <span class="keyword">char</span>* str, <span class="keyword">char</span>* pat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">memset</span>(fail, <span class="number">-1</span>, <span class="keyword">sizeof</span>(fail));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; pat[i]; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = fail[i - <span class="number">1</span>]; k &gt;= <span class="number">0</span> &amp;&amp; pat[i] != pat[k + <span class="number">1</span>]; k = fail[k]);</span><br><span class="line">        <span class="keyword">if</span> (pat[k + <span class="number">1</span>] == pat[i])</span><br><span class="line">        &#123;</span><br><span class="line">            fail[i] = k + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i = j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i] &amp;&amp; pat[j])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pat[j] == str[i])</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            j = fail[j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pat[j])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> i - j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, l1 = <span class="number">0</span>, l2 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[<span class="number">0</span>] &gt;&gt; a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> len1 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">0</span>]), len2 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">1</span>]), val;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">1</span>], a[<span class="number">0</span>]);            </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            l1 = len1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len2 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">1</span>][len2 - <span class="number">1</span>] == a[<span class="number">0</span>][j - <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                l1 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">0</span>], a[<span class="number">1</span>]);           </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            l2 = len2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len1 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>][len1 - <span class="number">1</span>] == a[<span class="number">1</span>][j - <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                l2 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len1 + len2 - max(l1, l2));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/article/hello-world.html"/>
      <url>/article/hello-world.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170316/211S262S-6.jpg" alt=""></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文章模板</title>
      <link href="/article/%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180601/1P2394Z6-3.jpg" alt=""></p><p><img src="http://www.005.tv/uploads/allimg/180522/1K4431Y1-3.jpg" alt=""></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
