<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>2019 Wannafly Camp Day 1</title>
      <link href="/article/2019-Wannafly-Camp.html"/>
      <url>/article/2019-Wannafly-Camp.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/77/b5f7fb8cdb6e8693ddacd6ee9704f3010410e7.jpg" alt=""></p><h3 id="自闭感受"><a href="#自闭感受" class="headerlink" title="自闭感受"></a>自闭感受</h3><blockquote><p>第一次参加这种线下的算法Camp，不得不说和队友都是内心非常的小鸡动。上午开幕式wls讲了一堆话，差不多就是一起呲逼加鸡汤吧<del>（哈哈希望wls不要打死我）</del>。下午就是day训练赛了，因为一个主力队友生病没来，带着一个新队友2排，直接跳过了图论和DP题，差点就死怼C构造和E暴零自闭了，最后发现J题原题一发A，最后C题放弃了构造去写了100*100的暴力过了<del>（抹汗）</del>。自己还是太菜了，还有好多成长空间，细节，第一解题反应，耐心等等。</p></blockquote><h3 id="不多说上题解（后期补题会更新其他能力范围内的题解）"><a href="#不多说上题解（后期补题会更新其他能力范围内的题解）" class="headerlink" title="不多说上题解（后期补题会更新其他能力范围内的题解）"></a>不多说上题解（后期补题会更新其他能力范围内的题解）</h3><p><a href="https://www.zhixincode.com/contest/1/problem/C?problem_id=14" target="_blank" rel="noopener"><strong>C-拆拆拆数</strong></a></p><p>思路：题目只有1和2的情况，如果ab互质则为1，如果不互质n为2，且一定存在答案（第一感觉是这样）。开始我对n=2的情况去构造，发现一直wa<del>（菜哭了）</del>，后来A了J题后重新换了100*100暴力枚举两组ai,bi。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        ll a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span>(__gcd(a,b)==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1\n%lld %lld\n"</span>,a,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(ll j=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(__gcd(a-i,b-j)==<span class="number">1</span>&amp;&amp;__gcd(i,j)==<span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"2\n%lld %lld\n"</span>,i,j);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,a-i,a-j);</span><br><span class="line">                        flag=<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.zhixincode.com/contest/1/problem/J?problem_id=21" target="_blank" rel="noopener"><strong>J-夺宝奇兵</strong></a></p><p>思路：看着题比较晚了，一看woc这不就是CF原题嘛，考虑枚举最终票数。枚举完票数就开始处理，把每个党超过这个票数且收钱最少的人收买过来，如果这些人都收买完了可是还没有达到预定的票数，就一直收买之前还没有收买过的学生直到人数达标,就这样巴拉巴拉A了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits\stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,m,ns,cnt[<span class="number">3005</span>],Sum[<span class="number">3005</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">peo</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> p,c,rk;</span><br><span class="line">&#125;a[<span class="number">3005</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">val</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> rk,v;</span><br><span class="line">&#125;b[<span class="number">3005</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">3005</span>];</span><br><span class="line">ll min_ans=<span class="number">-1</span>,ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpa</span> <span class="params">(peo a,peo b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.p==b.p) <span class="keyword">return</span> a.c&lt;b.c;</span><br><span class="line">    <span class="keyword">return</span> a.p&lt;b.p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmpb</span> <span class="params">(val a,val b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.v&lt;b.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].c,&amp;a[i].p);</span><br><span class="line">        a[i].p++;</span><br><span class="line">        a[i].rk=i;</span><br><span class="line">        b[i].rk=i;</span><br><span class="line">        b[i].v=a[i].c;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmpa);</span><br><span class="line">    sort(b+<span class="number">1</span>,b+<span class="number">1</span>+n,cmpb);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">        Sum[ a[i].p ]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> s=<span class="number">1</span>;s&lt;=n;++s)&#123;</span><br><span class="line">        ns=<span class="number">0</span>;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j].p==<span class="number">1</span>) ns++,vis[ a[j].rk ]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(Sum[ a[j].p ]-cnt[ a[j].p ]&gt;=s)&#123;</span><br><span class="line">                    vis[ a[j].rk ]=<span class="literal">true</span>;</span><br><span class="line">                    cnt[ a[j].p ]++;</span><br><span class="line">                    ans+=a[j].c;</span><br><span class="line">                    ns++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ns&gt;=s) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(vis[ b[i].rk ]) <span class="keyword">continue</span>;</span><br><span class="line">            ns++;</span><br><span class="line">            ans+=b[i].v;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(min_ans==<span class="number">-1</span>) min_ans=ans;</span><br><span class="line">        min_ans=min(ans,min_ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;min_ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2019 Wannafly Winter Came </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Camp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>输入外挂总结</title>
      <link href="/article/Fread.html"/>
      <url>/article/Fread.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/fe/820adeaed467d5e081d78583bc7970f749b59c.jpg" alt=""></p><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>明明在C语言中有scanf()、printf()，C++中有cin、cout，为什么我们还要用输入输出外挂呢？</p><p>这个问题很明显，一定是因为这些输入输出函数功能过于强大而导致效率低，（很多时候，功能越强大的东西越臃肿），而我们使用的输入输出外挂既然叫外挂，那说明其一定有很大的优势，而这方面优势就体现在术有专攻上。原来的输入输出函数因为要应对不同类型的输入输出，所以内部一定做了很多的判断，而我们在遇见实际问题时，往往都是对特定类型的进行输入输出，所以这些判断就显得无用且浪费资源。这时，我们的输入输出外挂也就有了存在的必要性，也就应运而生。</p><p>我们都知道，scanf()、printf()、cin、cout其实就是对其他一些基础的获取或输出语句（getchar() putchar()等）进行封装，而这些基础的函数功能弱，效率高，所以我们的输入输出外挂也是仿照着scanf()、printf()、cin、cout来实现的，只不过做了针对性的改造，最终我们改造出来多种功能比scanf()等弱、比getchar()等强，效率比scanf()等高、比gerchar()等低的函数，从而达到针对性的作用，减少了不必要的资源消耗。</p><p>当然输入输出外挂一般用在大量输入输出的情况下，这样性价比才高一些，否则得不偿失（牺牲了代码长度而换来了微不足道的效率提升）。<br>摘抄原文：<a href="https://blog.csdn.net/f_zyj/article/details/51473493" target="_blank" rel="noopener">https://blog.csdn.net/f_zyj/article/details/51473493</a></p><h3 id="普通输入外挂-适用于正整数"><a href="#普通输入外挂-适用于正整数" class="headerlink" title="普通输入外挂(适用于正整数)"></a>普通输入外挂(适用于正整数)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch = getchar(); x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>; ch = getchar());</span><br><span class="line"><span class="keyword">for</span> (; ch &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>; ch = getchar()) x = x * <span class="number">10</span> + ch - <span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="整数输入外挂-适用于整数"><a href="#整数输入外挂-适用于整数" class="headerlink" title="整数输入外挂(适用于整数)"></a>整数输入外挂(适用于整数)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BufferSize=<span class="number">1</span>&lt;&lt;<span class="number">16</span>;</span><br><span class="line"><span class="keyword">char</span> buffer[BufferSize],*head,*tail;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">Getchar</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head==tail) &#123;</span><br><span class="line">        <span class="keyword">int</span> l=fread(buffer,<span class="number">1</span>,BufferSize,<span class="built_in">stdin</span>);</span><br><span class="line">        tail=(head=buffer)+l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *head++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> c=Getchar();</span><br><span class="line">    <span class="keyword">for</span>(;!<span class="built_in">isdigit</span>(c);c=Getchar()) <span class="keyword">if</span>(c==<span class="string">'-'</span>) f=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;<span class="built_in">isdigit</span>(c);c=Getchar()) x=x*<span class="number">10</span>+c-<span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="加强版输入外挂-速度比普通输入外挂快不少"><a href="#加强版输入外挂-速度比普通输入外挂快不少" class="headerlink" title="加强版输入外挂(速度比普通输入外挂快不少)"></a>加强版输入外挂(速度比普通输入外挂快不少)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> fastIO &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 100000</span></span><br><span class="line">    <span class="comment">//fread -&gt; read</span></span><br><span class="line">    <span class="keyword">bool</span> IOerror = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">nc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">char</span> buf[BUF_SIZE], *p1 = buf + BUF_SIZE, *pend = buf + BUF_SIZE;</span><br><span class="line">        <span class="keyword">if</span> (p1 == pend) &#123;</span><br><span class="line">            p1 = buf;</span><br><span class="line">            pend = buf + fread(buf, <span class="number">1</span>, BUF_SIZE, <span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">if</span> (pend == p1) &#123;</span><br><span class="line">                IOerror = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *p1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">blank</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ch == <span class="string">' '</span> || ch == <span class="string">'\n'</span> || ch == <span class="string">'\r'</span> || ch == <span class="string">'\t'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        <span class="keyword">while</span> (blank(ch = nc()));</span><br><span class="line">        <span class="keyword">if</span> (IOerror) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span> (x = ch - <span class="string">'0'</span>; (ch = nc()) &gt;= <span class="string">'0'</span> &amp;&amp; ch &lt;= <span class="string">'9'</span>; x = x * <span class="number">10</span> + ch - <span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> BUF_SIZE</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> fastIO;</span><br></pre></td></tr></table></figure><h3 id="加强版完整型输入外挂包-速度快，适用于整形，浮点型"><a href="#加强版完整型输入外挂包-速度快，适用于整形，浮点型" class="headerlink" title="加强版完整型输入外挂包(速度快，适用于整形，浮点型)"></a>加强版完整型输入外挂包(速度快，适用于整形，浮点型)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> fastIO&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 100000</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> OUT_SIZE 100000</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">    <span class="comment">//fread-&gt;read</span></span><br><span class="line">    <span class="keyword">bool</span> IOerror=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">nc</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">char</span> buf[BUF_SIZE],*p1=buf+BUF_SIZE,*pend=buf+BUF_SIZE;</span><br><span class="line">        <span class="keyword">if</span> (p1==pend)&#123;</span><br><span class="line">            p1=buf; pend=buf+fread(buf,<span class="number">1</span>,BUF_SIZE,<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">if</span> (pend==p1)&#123;IOerror=<span class="number">1</span>;<span class="keyword">return</span> <span class="number">-1</span>;&#125;</span><br><span class="line">            <span class="comment">//&#123;printf("IO error!\n");system("pause");for (;;);exit(0);&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> *p1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">blank</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;<span class="keyword">return</span> ch==<span class="string">' '</span>||ch==<span class="string">'\n'</span>||ch==<span class="string">'\r'</span>||ch==<span class="string">'\t'</span>;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=nc(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'-'</span>)sign=<span class="number">1</span>,ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(ll &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=nc(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'-'</span>)sign=<span class="number">1</span>,ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">double</span> &amp;x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">bool</span> sign=<span class="number">0</span>; <span class="keyword">char</span> ch=nc(); x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'-'</span>)sign=<span class="number">1</span>,ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch==<span class="string">'.'</span>)&#123;</span><br><span class="line">            <span class="keyword">double</span> tmp=<span class="number">1</span>; ch=nc();</span><br><span class="line">            <span class="keyword">for</span> (;ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>;ch=nc())tmp/=<span class="number">10.0</span>,x+=tmp*(ch-<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sign)x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> ch=nc();</span><br><span class="line">        <span class="keyword">for</span> (;blank(ch);ch=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)<span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">for</span> (;!blank(ch)&amp;&amp;!IOerror;ch=nc())*s++=ch;</span><br><span class="line">        *s=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span> &amp;c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (c=nc();blank(c);c=nc());</span><br><span class="line">        <span class="keyword">if</span> (IOerror)&#123;c=<span class="number">-1</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fwrite-&gt;write</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Ostream_fwrite</span>&#123;</span></span><br><span class="line">        <span class="keyword">char</span> *buf,*p1,*pend;</span><br><span class="line">        Ostream_fwrite()&#123;buf=<span class="keyword">new</span> <span class="keyword">char</span>[BUF_SIZE];p1=buf;pend=buf+BUF_SIZE;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">out</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (p1==pend)&#123;</span><br><span class="line">                fwrite(buf,<span class="number">1</span>,BUF_SIZE,<span class="built_in">stdout</span>);p1=buf;</span><br><span class="line">            &#125;</span><br><span class="line">            *p1++=ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">15</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">15</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1); out(<span class="string">'\n'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">25</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> s[<span class="number">25</span>],*s1;s1=s;</span><br><span class="line">            <span class="keyword">if</span> (!x)*s1++=<span class="string">'0'</span>;<span class="keyword">if</span> (x&lt;<span class="number">0</span>)out(<span class="string">'-'</span>),x=-x;</span><br><span class="line">            <span class="keyword">while</span>(x)*s1++=x%<span class="number">10</span>+<span class="string">'0'</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(s1--!=s)out(*s1); out(<span class="string">'\n'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> ll mul[]=&#123;<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>,<span class="number">10000</span>,<span class="number">100000</span>,<span class="number">1000000</span>,<span class="number">10000000</span>,<span class="number">100000000</span>,</span><br><span class="line">                <span class="number">1000000000</span>,<span class="number">10000000000L</span>L,<span class="number">100000000000L</span>L,<span class="number">1000000000000L</span>L,<span class="number">10000000000000L</span>L,</span><br><span class="line">                <span class="number">100000000000000L</span>L,<span class="number">1000000000000000L</span>L,<span class="number">10000000000000000L</span>L,<span class="number">100000000000000000L</span>L&#125;;</span><br><span class="line">            <span class="keyword">if</span> (x&lt;<span class="number">-1e-12</span>)out(<span class="string">'-'</span>),x=-x;x*=mul[y];</span><br><span class="line">            ll x1=(ll)<span class="built_in">floor</span>(x); <span class="keyword">if</span> (x-<span class="built_in">floor</span>(x)&gt;=<span class="number">0.5</span>)++x1;</span><br><span class="line">            ll x2=x1/mul[y],x3=x1-x2*mul[y]; print(x2);</span><br><span class="line">            <span class="keyword">if</span> (y&gt;<span class="number">0</span>)&#123;out(<span class="string">'.'</span>); <span class="keyword">for</span> (<span class="keyword">size_t</span> i=<span class="number">1</span>;i&lt;y&amp;&amp;x3*mul[i]&lt;mul[y];out(<span class="string">'0'</span>),++i); print(x3);&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;print(x,y);out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;<span class="keyword">while</span> (*s)out(*s++);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;<span class="keyword">while</span> (*s)out(*s++);out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>&#123;<span class="keyword">if</span> (p1!=buf)&#123;fwrite(buf,<span class="number">1</span>,p1-buf,<span class="built_in">stdout</span>);p1=buf;&#125;&#125;</span><br><span class="line">        ~Ostream_fwrite()&#123;flush();&#125;</span><br><span class="line">    &#125;Ostream;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;Ostream.print(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;Ostream.println(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;Ostream.out(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;Ostream.out(x);Ostream.out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(ll x)</span></span>&#123;Ostream.print(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(ll x)</span></span>&#123;Ostream.println(x);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;Ostream.print(x,y);&#125;<span class="comment">//y为小数点后几位</span></span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> y)</span></span>&#123;Ostream.println(x,y);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;Ostream.print(s);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">(<span class="keyword">char</span> *s)</span></span>&#123;Ostream.println(s);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">println</span><span class="params">()</span></span>&#123;Ostream.out(<span class="string">'\n'</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span>&#123;Ostream.flush();&#125;<span class="comment">//清空</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> ll</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> OUT_SIZE</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">undef</span> BUF_SIZE</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> fastIO;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 输入外挂 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++记录程序运行时间5大方法</title>
      <link href="/article/Run-Time.html"/>
      <url>/article/Run-Time.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/41/2c5f9e78331621ae7159163d7fcbc635a5393b.jpg" alt=""></p><h3 id="1-用clock-函数"><a href="#1-用clock-函数" class="headerlink" title="1.用clock()函数"></a>1.用clock()函数</h3><p>用clock()函数，得到系统启动以后的毫秒级时间，然后除以CLOCKS_PER_SEC，就可以换成“秒”，标准c函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">clock_t</span> start_time=clock();</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">clock_t</span> end_time=clock();</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"The run time is: "</span> &lt;&lt;(<span class="keyword">double</span>)(end_time - start_time) / CLOCKS_PER_SEC &lt;&lt; <span class="string">"s"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h3 id="2-用GetTickCount-函数"><a href="#2-用GetTickCount-函数" class="headerlink" title="2.用GetTickCount()函数"></a>2.用GetTickCount()函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DWORD Start = GetTickCount();</span><br><span class="line"><span class="comment">//这里运行你的程序代码</span></span><br><span class="line">DWORD End = GetTickCount();</span><br><span class="line"><span class="comment">//则(End-Start)就是你的程序运行时间, 以毫秒为单位这个函数只精确到55ms，1个tick就是55ms。</span></span><br></pre></td></tr></table></figure><h3 id="3-timeGetTime-函数"><a href="#3-timeGetTime-函数" class="headerlink" title="3.timeGetTime()函数"></a>3.timeGetTime()函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DWORD Start = timeGetTime();</span><br><span class="line"><span class="comment">//这里运行你的程序代码</span></span><br><span class="line">DWORD End = timeGetTime();</span><br><span class="line"><span class="comment">//则(End-Start)就是你的程序运行时间, 以毫秒为单位</span></span><br><span class="line"><span class="comment">//虽然返回的值单位应该是ms,但精度只有10ms。</span></span><br></pre></td></tr></table></figure><h3 id="4-使用Boost库中的timer"><a href="#4-使用Boost库中的timer" class="headerlink" title="4.使用Boost库中的timer"></a>4.使用Boost库中的timer</h3><p>timer类可以测量时间的流逝，是小型计时器，提供毫秒级别的计时精度。</p><p>头文件：<code>#include&lt;boost/timer.hpp&gt;</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timer t;<span class="comment">//声明计时器对象并开始计时 </span></span><br><span class="line">    <span class="comment">//...测试代码</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"运行时间："</span>&lt;&lt;t.elapsed() &lt;&lt;<span class="string">"s"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//输出已流失的时间</span></span><br></pre></td></tr></table></figure><h3 id="5-高精度时控函数QueryPerformanceFrequency-，QueryPerformanceCounter"><a href="#5-高精度时控函数QueryPerformanceFrequency-，QueryPerformanceCounter" class="headerlink" title="5.高精度时控函数QueryPerformanceFrequency()，QueryPerformanceCounter()"></a>5.高精度时控函数QueryPerformanceFrequency()，QueryPerformanceCounter()</h3><p>QueryPerformanceCounter()这个函数返回高精确度性能计数器的值,它可以以微妙为单位计时.但是QueryPerformanceCounter()确切的精确计时的最小单位是与系统有关的,所以,必须要查询系统以得到QueryPerformanceCounter()返回的嘀哒声的频率.QueryPerformanceFrequency()提供了这个频率值,返回每秒嘀哒声的个数.计算确切的时间是从第一次调用QueryPerformanceCounter()开始的假设得到的LARGE_INTEGER为nStartCounter,过一段时间后再次调用该函数结束的,设得到nStopCounter.两者之差除以QueryPerformanceFrequency()的频率就是开始到结束之间的秒数.由于计时函数本身要耗费很少的时间,要减去一个很少的时间开销.但一般都把这个开销忽略。头文件：<code>#include&lt;windows.h&gt;</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> time=<span class="number">0</span>;  </span><br><span class="line"><span class="keyword">double</span> counts=<span class="number">0</span>;  </span><br><span class="line">LARGE_INTEGER nFreq;  </span><br><span class="line">LARGE_INTEGER nBeginTime;  </span><br><span class="line">LARGE_INTEGER nEndTime;  </span><br><span class="line">QueryPerformanceFrequency(&amp;nFreq);  </span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);<span class="comment">//开始计时  </span></span><br><span class="line">    <span class="comment">//...测试代码</span></span><br><span class="line">QueryPerformanceCounter(&amp;nEndTime);<span class="comment">//停止计时  </span></span><br><span class="line">time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s  </span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"运行时间："</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Henau-2018训练题1</title>
      <link href="/article/henau-test1.html"/>
      <url>/article/henau-test1.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/d2/bcbd158c5cb85bfe69d1680de9d4f2b0dc5d68.jpg" alt=""></p><h2 id="小刘爱复读"><a href="#小刘爱复读" class="headerlink" title="小刘爱复读"></a>小刘爱复读</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="comment">//把诗歌存入字符串</span></span><br><span class="line"><span class="keyword">char</span> s[maxn] = <span class="string">"I am the bone of my language repeater plastic is my body and wire is my blood I have created over a thousand copies  Unknown to Death Nor known to Life Have withstood pain to create copies Yet,those hands will never hold anything So as I pray,unlimited repeat works"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s), cnt = <span class="number">0</span>;<span class="comment">//cnt表示字母个数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;<span class="comment">//遍历一遍字符串</span></span><br><span class="line"><span class="keyword">if</span> ((s[i] &gt;= <span class="string">'a'</span>&amp;&amp;s[i] &lt;= <span class="string">'z'</span>) || (s[i] &gt;= <span class="string">'A'</span>&amp;&amp;s[i] &lt;= <span class="string">'Z'</span>))cnt++;<span class="comment">//如果当前字符是个字母，则cnt++;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="洋洋爱模仿"><a href="#洋洋爱模仿" class="headerlink" title="洋洋爱模仿"></a>洋洋爱模仿</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn], t[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line"><span class="keyword">while</span> (T--)&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;<span class="comment">//ans表示s,t串相同位相同字符个数</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, t);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);<span class="comment">//获取串长度</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)<span class="comment">//for遍历字符串</span></span><br><span class="line"><span class="keyword">if</span> (s[i] == t[i])ans++;<span class="comment">//如果发现一个s[i]和t[i]相同,ans++;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, (<span class="keyword">double</span>)ans / (<span class="keyword">double</span>)len);<span class="comment">//ans/总字符数=相似度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小温爱蔬菜"><a href="#小温爱蔬菜" class="headerlink" title="小温爱蔬菜"></a>小温爱蔬菜</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> sum[maxn];<span class="comment">//前缀和</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, a, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;sum[i]);</span><br><span class="line">sum[i] += sum[i - <span class="number">1</span>];<span class="comment">//获取a数组的前缀和表</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--)&#123;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line"><span class="comment">//前缀和性质：sum[r]-sum[l-1]=a[l]+....+a[r]</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sum[r] - sum[l - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="洋洋爱密码"><a href="#洋洋爱密码" class="headerlink" title="洋洋爱密码"></a>洋洋爱密码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, cnt = <span class="number">0</span>, ans = <span class="number">0</span>;<span class="comment">//ans用来记录当前所花费金额</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">sort(a, a + n, cmp);<span class="comment">//先对物品价格从大到小排序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">ans += a[i];</span><br><span class="line"><span class="keyword">if</span> (ans &gt;= <span class="number">30</span>)cnt++;<span class="comment">//如果sum&gt;=30，则cnt++,输入密码次数cnt++</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SPOJ - REPEATS - Repeats（RMQ+后缀数组）</title>
      <link href="/article/SPOJ-REPEATS-Repeats.html"/>
      <url>/article/SPOJ-REPEATS-Repeats.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/66/1a4ed924c89f5d994e28ff22e2fab0e78a7d23.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://www.spoj.com/problems/REPEATS/en/" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/82/2317bc82b176b2edbd0f05ea43b09d94fcb978.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>对于给出的字符串(长度&lt;= 50000,只包含字符’a’或’b’)找到最大的k使得存在某个字符串t重复k次是给出的字符串的子串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>如果每一个循环节的长度为len, 那么在原字符串S中, S[i<em>len]与S[(i + 1)</em>len]一定会被包含在答案的子串当中那么枚举可能的答案的循环节的长度, 然后枚举可能的位置, 对于每一组可能被包含的位置S[i<em>len], S[(i + 1)</em>len]求出其对应后缀的最长公共前缀长度L, 则该循环节至少循环了L/len + 1次, 但是当L%len != 0时, 后面多余出来的部分(长度L%len的部分)可能和前面的拼凑成循环节, 于是对于位置i<em>len - (len - L % len)和(i + 1)</em>len - (len - L % len)求其后缀的最长公共前缀长度, 如果大于之前的结果,自然就说明从这个位置开始可以比之前多一个循环节, 于是这样枚举得到最多循环次数</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) for(i=0;i&lt;(n);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UPTO(i,l,h) for(i=(l);i&lt;=(h);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DOWN(i,h,l) for(i=(h);i&gt;=(l);--i)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> LEN&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">suffixarray</span>&#123;</span></span><br><span class="line">    <span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="keyword">int</span> str[LEN*<span class="number">3</span>],sa[LEN*<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> rank[LEN],height[LEN];</span><br><span class="line"><span class="keyword">int</span> id[LEN];</span><br><span class="line"><span class="keyword">int</span> best[LEN][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equal</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> str[a]==str[b]&amp;&amp;str[a+<span class="number">1</span>]==str[b+<span class="number">1</span>]&amp;&amp;str[a+<span class="number">2</span>]==str[b+<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *nstr, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(str[a]!=str[b])<span class="keyword">return</span> str[a]&lt;str[b];</span><br><span class="line"><span class="keyword">if</span>(str[a+<span class="number">1</span>]!=str[b+<span class="number">1</span>])<span class="keyword">return</span> str[a+<span class="number">1</span>]&lt;str[b+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> nstr[a+b%<span class="number">3</span>]&lt;nstr[b+b%<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">radixsort</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> *res, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">REP(i,m)id[i]=<span class="number">0</span>;</span><br><span class="line">REP(i,n)++id[str[sa[i]]];</span><br><span class="line">REP(i,m)id[i+<span class="number">1</span>]+=id[i];</span><br><span class="line">DOWN(i,n<span class="number">-1</span>,<span class="number">0</span>)res[--id[str[sa[i]]]]=sa[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dc3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x) ((x)/3+((x)%3==1?0:one))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x) ((x)&lt;one?(x)*3+1:((x)-one)*3+2)</span></span><br><span class="line"><span class="keyword">int</span> *nstr=str+n, *nsa=sa+n, *tmpa=rank, *tmpb=height;</span><br><span class="line"><span class="keyword">int</span> i,j,k,len=<span class="number">0</span>,num=<span class="number">0</span>,zero=<span class="number">0</span>,one=(n+<span class="number">1</span>)/<span class="number">3</span>;</span><br><span class="line">REP(i,n)<span class="keyword">if</span>(i%<span class="number">3</span>)tmpa[len++]=i;</span><br><span class="line">str[n]=str[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">radixsort(str+<span class="number">2</span>, tmpa, tmpb, len, m);</span><br><span class="line">radixsort(str+<span class="number">1</span>, tmpb, tmpa, len, m);</span><br><span class="line">radixsort(str+<span class="number">0</span>, tmpa, tmpb, len, m);</span><br><span class="line">nstr[F(tmpb[<span class="number">0</span>])]=num++;</span><br><span class="line">UPTO(i,<span class="number">1</span>,len<span class="number">-1</span>)</span><br><span class="line">nstr[F(tmpb[i])]=equal(str,tmpb[i<span class="number">-1</span>],tmpb[i])?num<span class="number">-1</span>:num++;</span><br><span class="line"><span class="keyword">if</span>(num&lt;len)dc3(nstr,nsa,len,num);</span><br><span class="line"><span class="keyword">else</span> REP(i,len)nsa[nstr[i]]=i;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">1</span>)tmpa[zero++]=n<span class="number">-1</span>;</span><br><span class="line">REP(i,len)<span class="keyword">if</span>(nsa[i]&lt;one)tmpa[zero++]=nsa[i]*<span class="number">3</span>;</span><br><span class="line">radixsort(str, tmpa, tmpb, zero, m);</span><br><span class="line">REP(i,len)tmpa[nsa[i]=G(nsa[i])]=i;</span><br><span class="line">i=j=<span class="number">0</span>;</span><br><span class="line">REP(k,n)</span><br><span class="line"><span class="keyword">if</span>(j&gt;=len||(i&lt;zero&amp;&amp;cmp3(str,tmpa,tmpb[i],nsa[j])))sa[k]=tmpb[i++];</span><br><span class="line"><span class="keyword">else</span> sa[k]=nsa[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initSA</span><span class="params">(T *s, <span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k=<span class="number">0</span>;</span><br><span class="line">str[len=n]=<span class="number">0</span>;<span class="comment">//末尾增加一个0，这样就省去一些特殊情况的讨论，也就是最后一个mod 3刚好等于0</span></span><br><span class="line">REP(i,n)str[i]=s[i];</span><br><span class="line">dc3(str,sa,n+<span class="number">1</span>,m);      <span class="comment">//可以切换成dc3</span></span><br><span class="line">REP(i,n)sa[i]=sa[i+<span class="number">1</span>];<span class="comment">//第0小的默认为最后一个字符0，所以答案向前移动一位，da算法不用</span></span><br><span class="line">        <span class="comment">//da(str,sa,n,m);</span></span><br><span class="line">REP(i,n)rank[sa[i]]=i;</span><br><span class="line">REP(i,n)<span class="comment">//计算height数组</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k)--k;</span><br><span class="line"><span class="keyword">if</span>(rank[i])<span class="keyword">for</span>(j=sa[rank[i]<span class="number">-1</span>];str[i+k]==str[j+k];++k);</span><br><span class="line"><span class="keyword">else</span> k=<span class="number">0</span>;</span><br><span class="line">height[rank[i]]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initRMQ</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> m=(<span class="keyword">int</span>)(<span class="built_in">log</span>(len*<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line">REP(i,len)best[i][<span class="number">0</span>]=height[i];</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=m;++j)</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;len;++i)</span><br><span class="line">best[i][j]=min(best[i][j<span class="number">-1</span>],best[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k=<span class="keyword">int</span>(<span class="built_in">log</span>(r-l+<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line"><span class="keyword">return</span> min(best[l][k],best[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCPSA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;<span class="comment">//查询区间RMQ(i,j)</span></span><br><span class="line">a=rank[a],b=rank[b];</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)swap(a,b);</span><br><span class="line"><span class="keyword">return</span> RMQ(a+<span class="number">1</span>,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">suffixarray&lt;<span class="keyword">int</span>,maxn&gt; msa;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span> ,<span class="keyword">int</span> &gt; mymap;   <span class="comment">//计算m,m表示不同字符个数，如果是字母直接用256</span></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> ss[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,Max=<span class="number">0</span>,ans,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        Max=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">            ss[i]=s[<span class="number">0</span>]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        msa.initSA(ss,len,<span class="number">4</span>);</span><br><span class="line">        msa.initRMQ();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;  <span class="comment">//枚举长度</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j+i&lt;len;j+=i)&#123;  <span class="comment">//+i极大的降低了复杂度</span></span><br><span class="line">                <span class="comment">//但也产生了需要向前比较的问题</span></span><br><span class="line">                ans=msa.LCPSA(j,j+i); <span class="comment">//公共后缀的长度</span></span><br><span class="line">                k=j-(i-ans%i); <span class="comment">//前推到k位置</span></span><br><span class="line">                ans=ans/i+<span class="number">1</span>;  <span class="comment">//出现次数</span></span><br><span class="line">                <span class="keyword">if</span>(k&gt;=<span class="number">0</span>&amp;&amp;msa.LCPSA(k,k+i)&gt;=i)ans++;</span><br><span class="line">                <span class="comment">//printf("L=%d,R=%d\n",i,ans);</span></span><br><span class="line">                Max=max(Max,ans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Max);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串题解 </tag>
            
            <tag> 后缀数组 </tag>
            
            <tag> SPOJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>后缀自动机DC3模板</title>
      <link href="/article/Suffix-Array-DC3.html"/>
      <url>/article/Suffix-Array-DC3.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/db/a85d60530eee687e2f9342e4d46a01c790ddbf.jpg" alt=""></p><p><strong>后缀数组一些性质</strong></p><blockquote><ul><li><p>suffix（j）和suffix（k）的最长公共前缀为height【rank【j】+1】到height【rank【k】】中的最小值；</p></li><li><p>待更新</p></li></ul></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">POJ-2406</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REP(i,n) for(i=0;i&lt;(n);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UPTO(i,l,h) for(i=(l);i&lt;=(h);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DOWN(i,h,l) for(i=(h);i&gt;=(l);--i)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> LEN&gt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">suffixarray</span>&#123;</span></span><br><span class="line">    <span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="keyword">int</span> str[LEN*<span class="number">3</span>],sa[LEN*<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> rank[LEN],height[LEN];</span><br><span class="line"><span class="keyword">int</span> id[LEN];</span><br><span class="line"><span class="keyword">int</span> best[LEN][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equal</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> str[a]==str[b]&amp;&amp;str[a+<span class="number">1</span>]==str[b+<span class="number">1</span>]&amp;&amp;str[a+<span class="number">2</span>]==str[b+<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *nstr, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(str[a]!=str[b])<span class="keyword">return</span> str[a]&lt;str[b];</span><br><span class="line"><span class="keyword">if</span>(str[a+<span class="number">1</span>]!=str[b+<span class="number">1</span>])<span class="keyword">return</span> str[a+<span class="number">1</span>]&lt;str[b+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> nstr[a+b%<span class="number">3</span>]&lt;nstr[b+b%<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">radixsort</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> *res, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">REP(i,m)id[i]=<span class="number">0</span>;</span><br><span class="line">REP(i,n)++id[str[sa[i]]];</span><br><span class="line">REP(i,m)id[i+<span class="number">1</span>]+=id[i];</span><br><span class="line">DOWN(i,n<span class="number">-1</span>,<span class="number">0</span>)res[--id[str[sa[i]]]]=sa[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dc3</span><span class="params">(<span class="keyword">int</span> *str, <span class="keyword">int</span> *sa, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F(x) ((x)/3+((x)%3==1?0:one))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> G(x) ((x)&lt;one?(x)*3+1:((x)-one)*3+2)</span></span><br><span class="line"><span class="keyword">int</span> *nstr=str+n, *nsa=sa+n, *tmpa=rank, *tmpb=height;</span><br><span class="line"><span class="keyword">int</span> i,j,k,len=<span class="number">0</span>,num=<span class="number">0</span>,zero=<span class="number">0</span>,one=(n+<span class="number">1</span>)/<span class="number">3</span>;</span><br><span class="line">REP(i,n)<span class="keyword">if</span>(i%<span class="number">3</span>)tmpa[len++]=i;</span><br><span class="line">str[n]=str[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">radixsort(str+<span class="number">2</span>, tmpa, tmpb, len, m);</span><br><span class="line">radixsort(str+<span class="number">1</span>, tmpb, tmpa, len, m);</span><br><span class="line">radixsort(str+<span class="number">0</span>, tmpa, tmpb, len, m);</span><br><span class="line">nstr[F(tmpb[<span class="number">0</span>])]=num++;</span><br><span class="line">UPTO(i,<span class="number">1</span>,len<span class="number">-1</span>)</span><br><span class="line">nstr[F(tmpb[i])]=equal(str,tmpb[i<span class="number">-1</span>],tmpb[i])?num<span class="number">-1</span>:num++;</span><br><span class="line"><span class="keyword">if</span>(num&lt;len)dc3(nstr,nsa,len,num);</span><br><span class="line"><span class="keyword">else</span> REP(i,len)nsa[nstr[i]]=i;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">1</span>)tmpa[zero++]=n<span class="number">-1</span>;</span><br><span class="line">REP(i,len)<span class="keyword">if</span>(nsa[i]&lt;one)tmpa[zero++]=nsa[i]*<span class="number">3</span>;</span><br><span class="line">radixsort(str, tmpa, tmpb, zero, m);</span><br><span class="line">REP(i,len)tmpa[nsa[i]=G(nsa[i])]=i;</span><br><span class="line">i=j=<span class="number">0</span>;</span><br><span class="line">REP(k,n)</span><br><span class="line"><span class="keyword">if</span>(j&gt;=len||(i&lt;zero&amp;&amp;cmp3(str,tmpa,tmpb[i],nsa[j])))sa[k]=tmpb[i++];</span><br><span class="line"><span class="keyword">else</span> sa[k]=nsa[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initSA</span><span class="params">(T *s, <span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k=<span class="number">0</span>;</span><br><span class="line">str[len=n]=<span class="number">0</span>;<span class="comment">//末尾增加一个0，这样就省去一些特殊情况的讨论，也就是最后一个mod 3刚好等于0</span></span><br><span class="line">REP(i,n)str[i]=s[i];</span><br><span class="line">dc3(str,sa,n+<span class="number">1</span>,m);      <span class="comment">//可以切换成dc3</span></span><br><span class="line">REP(i,n)sa[i]=sa[i+<span class="number">1</span>];<span class="comment">//第0小的默认为最后一个字符0，所以答案向前移动一位，da算法不用</span></span><br><span class="line">        <span class="comment">//da(str,sa,n,m);</span></span><br><span class="line">REP(i,n)rank[sa[i]]=i;</span><br><span class="line">REP(i,n)<span class="comment">//计算height数组</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k)--k;</span><br><span class="line"><span class="keyword">if</span>(rank[i])<span class="keyword">for</span>(j=sa[rank[i]<span class="number">-1</span>];str[i+k]==str[j+k];++k);</span><br><span class="line"><span class="keyword">else</span> k=<span class="number">0</span>;</span><br><span class="line">height[rank[i]]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initRMQ</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> m=(<span class="keyword">int</span>)(<span class="built_in">log</span>(len*<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line">REP(i,len)best[i][<span class="number">0</span>]=height[i];</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=m;++j)</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;len;++i)</span><br><span class="line">best[i][j]=min(best[i][j<span class="number">-1</span>],best[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RMQ</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k=<span class="keyword">int</span>(<span class="built_in">log</span>(r-l+<span class="number">1.0</span>)/<span class="built_in">log</span>(<span class="number">2.0</span>));</span><br><span class="line"><span class="keyword">return</span> min(best[l][k],best[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCPSA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;<span class="comment">//查询区间RMQ(i,j)</span></span><br><span class="line">a=rank[a],b=rank[b];</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)swap(a,b);</span><br><span class="line"><span class="keyword">return</span> RMQ(a+<span class="number">1</span>,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">suffixarray&lt;<span class="keyword">char</span>,maxn&gt; msa;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span> ,<span class="keyword">int</span> &gt; mymap;   <span class="comment">//计算m,m表示不同字符个数，如果是字母直接用256</span></span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s))&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'.'</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> len= <span class="built_in">strlen</span>(s);</span><br><span class="line">        msa.initSA(s,len,<span class="number">256</span>);</span><br><span class="line">         <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (len % i == <span class="number">0</span> &amp;&amp; msa.rank[<span class="number">0</span>] == msa.rank[i] + <span class="number">1</span> &amp;&amp; msa.height[msa.rank[<span class="number">0</span>]] == len - i) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len / i);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!flag)<span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>一些模板利用</strong></p><blockquote><p>求重复次数最多的连续重复子串</p><p>例题：<a href="https://vjudge.net/problem/19292/origin" target="_blank" rel="noopener">SPOJ - REPEATS-Repeats</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">msa.initRMQ();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;  <span class="comment">//枚举长度</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j+i&lt;len;j+=i)&#123;  <span class="comment">//+i极大的降低了复杂度</span></span><br><span class="line">        <span class="comment">//但也产生了需要向前比较的问题</span></span><br><span class="line">        ans=msa.LCPSA(j,j+i); <span class="comment">//公共后缀的长度</span></span><br><span class="line">        k=j-(i-ans%i); <span class="comment">//前推到k位置</span></span><br><span class="line">        ans=ans/i+<span class="number">1</span>;  <span class="comment">//出现次数</span></span><br><span class="line">        <span class="keyword">if</span>(k&gt;=<span class="number">0</span>&amp;&amp;msa.LCPSA(k,k+i)&gt;=i)ans++;</span><br><span class="line">        <span class="comment">//printf("L=%d,R=%d\n",i,ans);</span></span><br><span class="line">        Max=max(Max,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Max);</span><br></pre></td></tr></table></figure><blockquote><p>求最小循环节</p><p>例题：<a href="https://vjudge.net/problem/POJ-2406" target="_blank" rel="noopener">POJ-2406 - Power Strings</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (len % i == <span class="number">0</span> &amp;&amp; msa.rank[<span class="number">0</span>] == msa.rank[i] + <span class="number">1</span> &amp;&amp; msa.height[msa.rank[<span class="number">0</span>]] == len - i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len / i);</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag)<span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br></pre></td></tr></table></figure><blockquote><p>求两串中长度大于k的公共子串有多少个。</p><p>例题：<a href="https://vjudge.net/problem/12599/origin" target="_blank" rel="noopener">POJ - 3415 - Common Substrings</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line">    ll ans=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(msa.height[i]&lt;k)tot=<span class="number">0</span>,top=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i<span class="number">-1</span>]&lt;lena)&#123;     <span class="comment">//说明不在同一串中</span></span><br><span class="line">                cnt++;</span><br><span class="line">                tot+=msa.height[i]-k+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(top&amp;&amp;msa.height[i]&lt;=sta[top<span class="number">-1</span>][<span class="number">0</span>])&#123;</span><br><span class="line">                top--;</span><br><span class="line">                tot+=(msa.height[i]-sta[top][<span class="number">0</span>])*sta[top][<span class="number">1</span>];</span><br><span class="line">                cnt+=sta[top][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            sta[top][<span class="number">0</span>]=msa.height[i],sta[top++][<span class="number">1</span>]=cnt;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i]&gt;lena)ans+=tot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tot=top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(msa.height[i]&lt;k)tot=<span class="number">0</span>,top=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i<span class="number">-1</span>]&gt;lena)&#123;     <span class="comment">//说明不在同一串中</span></span><br><span class="line">                cnt++;</span><br><span class="line">                tot+=msa.height[i]-k+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(top&amp;&amp;msa.height[i]&lt;=sta[top<span class="number">-1</span>][<span class="number">0</span>])&#123;</span><br><span class="line">                top--;</span><br><span class="line">                tot+=(msa.height[i]-sta[top][<span class="number">0</span>])*sta[top][<span class="number">1</span>];</span><br><span class="line">                cnt+=sta[top][<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            sta[top][<span class="number">0</span>]=msa.height[i],sta[top++][<span class="number">1</span>]=cnt;</span><br><span class="line">            <span class="keyword">if</span>(msa.sa[i]&lt;lena)ans+=tot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-3336-Count the string（KMP-Next数组性质）</title>
      <link href="/article/HDU-3336-Count-the-string%EF%BC%88KMP-Next%E6%95%B0%E7%BB%84%E6%80%A7%E8%B4%A8%EF%BC%89.html"/>
      <url>/article/HDU-3336-Count-the-string%EF%BC%88KMP-Next%E6%95%B0%E7%BB%84%E6%80%A7%E8%B4%A8%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/a4/1eaf18cc839fa217a77b00edec97e0b824b6dd.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3336" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/fb/fdacc6c783890b2f4ad1eafef72092b30e5d6b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>求一个串中所有前缀子串出现次数之和</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>对于每个串他前缀串出现次数和一定大于或等于n,因为有n个前缀；所以此时只需要去计算一下每一个前缀在后面出现了几次，也就是next数组的值。结合next数组的性质可以很容易得知，next数组中存在一个非0位，就出现了一种前缀，ans就++。所以只需对字符串求一遍next数组，统计都是个非零元素就可以了。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2</span>*<span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">0</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">1</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">Get_nex();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (nex[i] != <span class="number">0</span>)ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (n + ans) % <span class="number">10007</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-2406-Power Strings(循环节)</title>
      <link href="/article/POJ-2406-Power-Strings.html"/>
      <url>/article/POJ-2406-Power-Strings.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/db/6c0652d8338fa6b5b0df963bfe761bb93360d2.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://poj.org/problem?id=2046" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/fa/99917b832740706fd924e09a7586daaad5d82b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给我们一个字符串，我们要求出它最多由几个相同的连续子串连接而成。也就是求最小循环节</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先注意到如果他是循环子串那么n-next[n]一定是最小循环节。于是可以先求出nxt然后暴力匹配一遍看看。但是事实上只要满足n%(n-next[n])==0就可以保证答案正确了。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> Next[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Nex</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=s[j+<span class="number">1</span>]&amp;&amp;j!=<span class="number">-1</span>)j=Next[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>]&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">        Next[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s))&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'.'</span>)<span class="keyword">break</span>;</span><br><span class="line">        Get_Nex();</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">int</span> L=Next[len<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(len%(len-L<span class="number">-1</span>)==<span class="number">0</span>)ans=len/(len-L<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ - 3974 - Palindrome(裸马拉车)</title>
      <link href="/article/POJ-3974-Palindrome-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html"/>
      <url>/article/POJ-3974-Palindrome-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/db/891d7d5b709436d2812c1853cba6fd3ac98ee9.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://poj.org/problem?id=3974" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/a2/4c803db0501e6785e47e12d645dfee64c18e0d.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个字符串，求连续最长的回文子串的长度。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用Manacher算法，裸的模板题，不多说了。不懂Manacher算法—-见<a href="https://blog.csdn.net/Anoy_acer/article/details/81102233" target="_blank" rel="noopener">Manacher最长回文串算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line">maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s))&#123;</span><br><span class="line">t++;</span><br><span class="line"><span class="built_in">memset</span>(p, <span class="number">0</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'E'</span>&amp;&amp;s[<span class="number">1</span>] == <span class="string">'N'</span>&amp;&amp;s[<span class="number">2</span>] == <span class="string">'D'</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, t, Manacher());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-3746-Cyclic Nacklace （KMP求循环节）</title>
      <link href="/article/HDU-3746-Cyclic-Nacklace-%EF%BC%88KMP%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html"/>
      <url>/article/HDU-3746-Cyclic-Nacklace-%EF%BC%88KMP%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/66/e0ed2f573b4ed8b60d15d5b84ba3c5ace7b19d.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3746" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/68/60e881361a8ea56aaa4d25b2e238630d2a441a.png" alt=""></p><p>Sample Input</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;3</span><br><span class="line">&gt;aaa</span><br><span class="line">&gt;abca</span><br><span class="line">&gt;abcde</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>Sample Output</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 0</span><br><span class="line">&gt; 2</span><br><span class="line">&gt; 5</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一些串，问如果想让这个串里面的循环节至少循环两次，需要添加几个字符（只能在最前面或者最后面添加）。比如ababc 需要添加5个就是添加ababc。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用Next数组的性质：</p><p>符合 <strong>i % ( i - next[i] ) == 0 &amp;&amp; next[i] != 0 , 则**</strong>说明字符串循环，而且**</p><p><strong>循环节长度为: i - next[i]</strong></p><p>循环次数为: i / ( i - next[i] )</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, next[N];</span><br><span class="line"><span class="keyword">char</span> str[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">n = <span class="built_in">strlen</span> (str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (p &gt; <span class="number">0</span> &amp;&amp; str[p+<span class="number">1</span>] != str[i])</span><br><span class="line">p = next[p];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (str[p+<span class="number">1</span>] == str[i])</span><br><span class="line">p++;</span><br><span class="line">next[i] = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cas;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;cas);</span><br><span class="line"><span class="keyword">while</span> (cas--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str+<span class="number">1</span>);</span><br><span class="line">getNext();</span><br><span class="line"><span class="keyword">int</span> n= <span class="built_in">strlen</span> (str+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (next[n] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> k = n - next[n];</span><br><span class="line"><span class="keyword">if</span> (n%k == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, k - (n - (n/k) * k));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round #525 (Div. 2) -C. Ehab and a 2-operation task</title>
      <link href="/article/Codeforces-Round-525-Div-2-C-Ehab-and-a-2-operation-task.html"/>
      <url>/article/Codeforces-Round-525-Div-2-C-Ehab-and-a-2-operation-task.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/96/a7b4f4226e9172292006493c1526807b58327c.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://codeforces.com/contest/1088/problem/C" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/47/e4b495b1a9027c37f160a62f49c2fb94ddc31d.png" alt=""></p><pre><code>**Note**In the first sample, the array is already increasing so we don&apos;t need any operations.In the second sample:In the first step: the array becomes [8,6,3].In the second step: the array becomes [0,2,3].    </code></pre><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个n，然后n个数a[1~n],现在你可以对数组进行两种操作：</p><ul><li>对a[1~i]所有的数+x</li><li>对a[1~i]所有的数对x取模</li></ul><p>要求你在n+1次操作内将数组a变成一个递增序列，并输出每次的操作（答案不唯一）</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>答案说了可以n+1次，那么就先对每个位置都进行一次操作1，让所有数在着n次1操作结束后对n取模值等于下表i，因为每次操作影响范围为1~i，所以可以选择倒着扫，保证处理过的数不会再变化。最后进行一次操作2，对1~n进行对n取模</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e4</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        ans=(i-(a[i]+sum)%(n+<span class="number">1</span>)+n+<span class="number">1</span>)%(n+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1 %d %d\n"</span>,i,ans);</span><br><span class="line">        sum+=ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"2 %d %d\n"</span>,n,n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round #525 (Div. 2)-B. Ehab and subtraction</title>
      <link href="/article/Codeforces-Round-525-Div-2-B-Ehab-and-subtraction.html"/>
      <url>/article/Codeforces-Round-525-Div-2-B-Ehab-and-subtraction.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/e7/8281f8b77b5a7a439dd861824bba0ada60386d.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://codeforces.com/contest/1088/problem/B" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/e6/334111023f4887778556d14a0f6b8455941f70.png" alt=""></p><p><strong>Note</strong></p><p>In the first sample:</p><p>In the first step: the array is [1,2,3][1,2,3], so the minimum non-zero element is 1.</p><p>In the second step: the array is [0,1,2][0,1,2], so the minimum non-zero element is 1.</p><p>In the third step: the array is [0,0,1][0,0,1], so the minimum non-zero element is 1.</p><p>In the fourth and fifth step: the array is [0,0,0][0,0,0], so we printed 0.</p><p>In the second sample:</p><p>In the first step: the array is [10,3,5,3][10,3,5,3], so the minimum non-zero element is 3.</p><p>In the second step: the array is [7,0,2,0][7,0,2,0], so the minimum non-zero element is 2.</p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你两个整数n,k,然后n个整数a[1~n]。然后进行k次操作，每次操作打印出最小非零元素，并把所有非零元素减去这个数；如果没有没有非零数了就打印零</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先用sort对a排序，然后从最小位置开始消，同时定义一个变量sum，记录每一次操作前面减去数字的和，也就是当前位置需要减的数字。同时特判下当前位置数-sum==0，如果为真直接跳过看下一位，同时因为跳过了所以一定要k++;</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=n)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]-sum==<span class="number">0</span>)&#123;</span><br><span class="line">                k++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[i]-sum);</span><br><span class="line">            sum=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round #525 (Div. 2) (2)-A. Ehab and another construction problem</title>
      <link href="/article/Codeforces-Round-525-Div-2-2-A-Ehab-and-another-construction-problem.html"/>
      <url>/article/Codeforces-Round-525-Div-2-2-A-Ehab-and-another-construction-problem.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/6f/ae1c391fe75d5ce3951fc30ace8d2d0439270b.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://codeforces.com/contest/1088/problem/A" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/a3/621951f785b25681e0a1c0f2d4d54967206a9a.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个x,让你求出两个整数a,b，满足他给的那些条件</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>数据范围很小就100，直接O(n*n)暴力枚举就可以了</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%j==<span class="number">0</span>&amp;&amp;j*i&gt;x)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,j);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 暴力题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-2328-Corporate Identity(利用string函数)</title>
      <link href="/article/HDU-2328-Corporate-Identity-%E5%88%A9%E7%94%A8string%E5%87%BD%E6%95%B0.html"/>
      <url>/article/HDU-2328-Corporate-Identity-%E5%88%A9%E7%94%A8string%E5%87%BD%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/75/95522305c0d3120bd2cff61f3e704208f7a88f.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2328" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/ab/a1f5037aeeb263530ce8bcb3a394ef2d26defd.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你n个字符串，问你这n个串的最长公共子串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>题目和HDU-1238感觉差不多，暴力枚举任意一个字符串的所有子串，然后暴力匹配，这里用string解决的；</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">4050</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>((<span class="built_in">cin</span>&gt;&gt;n)&amp;&amp;n!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span> t;</span><br><span class="line">        <span class="keyword">int</span> cot=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len=s[<span class="number">1</span>].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len-i;j++)&#123;      <span class="comment">//枚举子串长度</span></span><br><span class="line">                <span class="keyword">if</span>(j&lt;maxx)<span class="keyword">continue</span>;</span><br><span class="line">                cot=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">2</span>;k&lt;=n;k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(s[k].find(s[<span class="number">1</span>].substr(i,j))==<span class="built_in">string</span>::npos)<span class="keyword">break</span>; <span class="comment">//string函数查找</span></span><br><span class="line">                    <span class="keyword">else</span> cot++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(cot==n<span class="number">-1</span>)&#123;<span class="comment">//如果这个子串出现了n-1次，选取的那个串本身就有一次，则维护maxx</span></span><br><span class="line">                    <span class="keyword">if</span>(maxx&lt;j)&#123;</span><br><span class="line">                        maxx=j;</span><br><span class="line">                        t=s[<span class="number">1</span>].substr(i,j);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(maxx==j)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(t&gt;s[<span class="number">1</span>].substr(i,j))t=s[<span class="number">1</span>].substr(i,j);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(maxx==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"IDENTITY LOST"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;t&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1238-Substrings(求公共子串)</title>
      <link href="/article/HDU-1238-Substrings-%E6%B1%82%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2.html"/>
      <url>/article/HDU-1238-Substrings-%E6%B1%82%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/51/8feab9a36aa58ff2fb080573cf2fa6bfca9842.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1238" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/1c/505dfba42792af3c1149d623746d83766bc4f7.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>找出所有字符串中共同拥有的一个子串，该子串（正、逆字符）是任何一个母串的子串，求该子串的最长长度。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用string库里的find函数+STL中的reverse反转函数。先找出最短的母串，即该符合要求的子串肯定在这个母串中，即在从长到短，从最短母串中取子串，在子串正反去查看是否符合要求。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> ( t--) &#123;</span><br><span class="line"><span class="keyword">int</span> n,sub;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s[i];</span><br><span class="line"><span class="keyword">if</span> (s[i].size() &lt; len)len = s[i].size(), sub = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> maxn = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = s[sub].size(); i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= s[sub].size(); j++) &#123;</span><br><span class="line"><span class="built_in">string</span> s1, s2;</span><br><span class="line">s1 = s[sub].substr(j, i);</span><br><span class="line">s2 = s1;</span><br><span class="line">reverse(s2.begin(), s2.end());   <span class="comment">//反转</span></span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n; k++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[k].find(s1, <span class="number">0</span>) == <span class="number">-1</span> &amp;&amp; s[k].find(s2, <span class="number">0</span>) == <span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (k == n &amp;&amp; maxn &lt; s1.size())maxn = s1.size();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, maxn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 4847 - Wow! Such Doge!(暴力)</title>
      <link href="/article/HDU-4847-Wow-Such-Doge-%E6%9A%B4%E5%8A%9B.html"/>
      <url>/article/HDU-4847-Wow-Such-Doge-%E6%9A%B4%E5%8A%9B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/1f/3a48f00d0a21f1d66630ae41514ca360405230.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4847" target="_blank" rel="noopener">题目链接</a></h2><blockquote><p><strong>题面太长了，就不上题目截图了QAQ</strong></p></blockquote><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><blockquote><p>在给出的段落里面找出“doge”出现的次数，大小写都可以。<del>（超级大水题，就考你输入恶心恶心人）</del></p></blockquote><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><blockquote><p>直接暴力求每一句话出现的<code>doge</code>次数（大小写不限），在一块就可以了输入格式处理—-把类似于“Wow! Such Dooooooooooooooge!!!“这种一行输入看出多个字符串输入，这里看成三个字符串，所以直接用%s存，存一个处理一个</p></blockquote><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">21</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s)!=EOF)&#123;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span>(len&lt;<span class="number">3</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len<span class="number">-3</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((s[i]==<span class="string">'d'</span>||s[i]==<span class="string">'D'</span>)&amp;&amp;(s[i+<span class="number">1</span>]==<span class="string">'o'</span>||s[i+<span class="number">1</span>]==<span class="string">'O'</span>)&amp;&amp;(s[i+<span class="number">2</span>]==<span class="string">'g'</span>||s[i+<span class="number">2</span>]==<span class="string">'G'</span>)&amp;&amp;(s[i+<span class="number">3</span>]==<span class="string">'e'</span>||s[i+<span class="number">3</span>]==<span class="string">'E'</span>))&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                i+=<span class="number">3</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 4513 - 吉哥系列故事――完美队形II (马拉车加判断条件)</title>
      <link href="/article/HDU-4513-%E5%90%89%E5%93%A5%E7%B3%BB%E5%88%97%E6%95%85%E4%BA%8B%E2%80%95%E2%80%95%E5%AE%8C%E7%BE%8E%E9%98%9F%E5%BD%A2II-%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E5%88%A4%E6%96%AD%E6%9D%A1%E4%BB%B6.html"/>
      <url>/article/HDU-4513-%E5%90%89%E5%93%A5%E7%B3%BB%E5%88%97%E6%95%85%E4%BA%8B%E2%80%95%E2%80%95%E5%AE%8C%E7%BE%8E%E9%98%9F%E5%BD%A2II-%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E5%88%A4%E6%96%AD%E6%9D%A1%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/2b/18869d694e9c7f834279f8896e4eaa68f8bf3c.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4513" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/81/435a266aa4c1e6e9a9385cc5642bc379cec801.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>在一个长度为n的数组里面找回文串，要求回文串从中间向两边一次递减</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>在manacher过程中添加限制语句保证题目要求即可</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(s_new[i+p[i]]!=<span class="number">-1111</span>)&#123;   <span class="comment">//如果前面位置大于当前位置，则不符合跳出</span></span><br><span class="line">    <span class="keyword">if</span>(s_new[i+p[i]]&lt;=s_new[i+p[i]<span class="number">-2</span>])p[i]++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">100050</span>];</span><br><span class="line"><span class="keyword">int</span> s_new[<span class="number">100050</span>*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">100050</span>*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    s_new[<span class="number">0</span>] = <span class="number">-111</span>;</span><br><span class="line">    s_new[<span class="number">1</span>] = <span class="number">-1111</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">        s_new[j++] = s[i];</span><br><span class="line">        s_new[j++] = <span class="number">-1111</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    s_new[j] = <span class="number">-11</span>;  <span class="comment">//别忘了哦</span></span><br><span class="line">    <span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">(<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;        <span class="comment">//取得新字符串长度并完成向s_new的转换</span></span><br><span class="line">    <span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">            p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p[i] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">if</span>(s_new[i+p[i]]!=<span class="number">-1111</span>)&#123;   <span class="comment">//如果前面位置大于当前位置，则不符合跳出</span></span><br><span class="line">                <span class="keyword">if</span>(s_new[i+p[i]]&lt;=s_new[i+p[i]<span class="number">-2</span>])p[i]++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p[i]++;</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率</span></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">            id = i;</span><br><span class="line">            mx = i + p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span> (t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s[i]);</span><br><span class="line">        <span class="keyword">int</span> len=Init(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Manacher(len));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 4763 -Theme Section(迭代求公共前后缀跑KMP)</title>
      <link href="/article/HDU-4763-Theme-Section-%E8%BF%AD%E4%BB%A3%E6%B1%82%E5%85%AC%E5%85%B1%E5%89%8D%E5%90%8E%E7%BC%80%E8%B7%91KMP.html"/>
      <url>/article/HDU-4763-Theme-Section-%E8%BF%AD%E4%BB%A3%E6%B1%82%E5%85%AC%E5%85%B1%E5%89%8D%E5%90%8E%E7%BC%80%E8%B7%91KMP.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/cb/5169844b6a378284cf05a542a05c5d027ed2c8.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4763" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/a2/ec2c1e9e86d7e9d645dbff2b4f70dabfbcb2e9.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个字符串，求出字符串的最大的相同前缀后缀，并且满足前缀后缀在字符串中间出现了。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>可以先对字符串跑KMP求一下Next数组，由next数组定义可以知道，里面存的是当前字符最长前缀和后缀，所以我们只需要从最后一个字符出发，递归寻找每个长度为的Next值的前缀后缀，对于长度为len的前缀，只需要用该前缀起和字符串的除了前缀和后缀的部分匹配就可以了，如果匹配成功，就看是否需要更新答案。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">21</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNex</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=s[j+<span class="number">1</span>]&amp;&amp;j!=<span class="number">-1</span>)j=nex[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>]&amp;&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">        nex[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;len-l;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;s[j+<span class="number">1</span>]!=s[i])j=nex[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>])j++;</span><br><span class="line">        <span class="keyword">if</span>(j+<span class="number">1</span>==l)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span>(len&lt;<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        GetNex();</span><br><span class="line">        <span class="keyword">int</span> ans=nex[len<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">int</span> mx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(ans!=<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(kmp(ans+<span class="number">1</span>))&#123;</span><br><span class="line">                mx=max(mx,ans+<span class="number">1</span>);  <span class="comment">//查找中间是否有这个串</span></span><br><span class="line">            &#125;</span><br><span class="line">            ans=nex[ans];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 3613 - Best Reward（马拉车加暴力）</title>
      <link href="/article/HDU-3613-Best-Reward%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E6%9A%B4%E5%8A%9B%EF%BC%89.html"/>
      <url>/article/HDU-3613-Best-Reward%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%E5%8A%A0%E6%9A%B4%E5%8A%9B%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/b3/4c3681b8e27d8ffbf14b450b36a6804b7b7c6e.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3613" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/60/07b33780557d35b42be57cc6a1db5c55d14a99.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>字母表的26个字母都有一个价值，给你一个字符串，将该字符串切成两份，对于每一份，如果是回文串，就获得该子串的字母价值之和，否则该子串的价值为0。求出将字符串切成两份后能够获得的最大价值。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>先用Manacher算法求出以每个字母为中心的回文串的长度，并计算该字符串的前缀价值和。然后枚举切割点，得到两份子串。这样就可以知道每个子串的中心点，然后检查以该子串的中心点作为中心点的回文串的长度，如果长度等于该子串的长度，那么就加上该子串的价值。然后和最优价值比较就行了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> sum[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="comment">//int maxLen = -1;   //最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//maxLen = max(maxLen, p[i] - 1);</span></span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="built_in">memset</span>(p, <span class="number">0</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">sum[<span class="number">0</span>] = v[s[<span class="number">0</span>] - <span class="string">'a'</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i]; i++)&#123;</span><br><span class="line">sum[i] = sum[i - <span class="number">1</span>] + v[s[i] - <span class="string">'a'</span>];</span><br><span class="line">&#125;</span><br><span class="line">Manacher();</span><br><span class="line"><span class="keyword">int</span> Mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num = p[i + <span class="number">2</span>] - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (num == i + <span class="number">1</span>)tmp += sum[i];</span><br><span class="line">num = p[i + len + <span class="number">2</span>] - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (num == len - i - <span class="number">1</span>)tmp += sum[len - <span class="number">1</span>] - sum[i];</span><br><span class="line"><span class="keyword">if</span> (tmp&gt;Mx)Mx = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Mx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 3294 - Girls research(裸马拉车)</title>
      <link href="/article/HDU-3294-Girls-research-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html"/>
      <url>/article/HDU-3294-Girls-research-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/1a/e2b5bb6a12c7abb383513dcc9d5ea2c06c2fa4.jpg" alt=""></p><h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3294" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/3d/5819f0c145db07896823987a5fe2bb98ce8c2b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>通过第一个字符与a的关系翻译字符串，输出最长回文串和首尾下标，不存在则输出No solution!</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>用manachar求出最长回文串中心和半径，因为变换后的串各字符下标改变了，所以输出原首尾下标要公式倒推<br>输出字符时要跳过插入的符号。如果你没有马拉车板子，或者说你不会马拉车，请见<a href="https://blog.csdn.net/Anoy_acer/article/details/81102233" target="_blank" rel="noopener">Manacher最长回文串算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> iid = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p[i] - <span class="number">1</span>&gt;maxLen)&#123;</span><br><span class="line">maxLen = p[i] - <span class="number">1</span>;</span><br><span class="line">iid = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch ;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%c%s"</span>,&amp;ch,s)!=EOF)&#123;</span><br><span class="line">getchar();</span><br><span class="line"><span class="comment">//memset(p, 0, sizeof(p));</span></span><br><span class="line"><span class="keyword">int</span> k = ch - <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++)&#123;</span><br><span class="line">s[i] -= k;</span><br><span class="line"><span class="keyword">if</span> (s[i] &lt; <span class="string">'a'</span>)s[i] += <span class="string">'z'</span> - <span class="string">'a'</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mx = Manacher();</span><br><span class="line"><span class="keyword">if</span> (mx == <span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"No solution!\n"</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, (iid - mx + <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span> , (iid + mx - <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span> );</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = (iid - mx + <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span>; i &lt;= (iid + mx - <span class="number">1</span>)/<span class="number">2</span><span class="number">-1</span>; i++)<span class="built_in">printf</span>(<span class="string">"%c"</span>, s[i]);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 3068 - 最长回文(裸马拉车)</title>
      <link href="/article/HDU-3068-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html"/>
      <url>/article/HDU-3068-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87-%E8%A3%B8%E9%A9%AC%E6%8B%89%E8%BD%A6.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/b4/1575974d5482e535f564a582b32165cb465b8a.jpg" alt=""></p><h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3068" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/6f/2b754e3cae5ca6082b6d4ceaae0d7c4a4d13d4.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给出一个只由小写英文字符a,b,c…y,z组成的字符串S,求S中最长回文串的长度.<del>回文就是正反读都是一样的字符串,如aba, abba等</del></p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>裸的马拉车（Manacher）算法，直接上板子就够了。如果你没有马拉车板子，或者说你不会马拉车，请见<a href="https://blog.csdn.net/Anoy_acer/article/details/81102233" target="_blank" rel="noopener">Manacher最长回文串算法</a></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a));</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">110050</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> s_new[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[maxn * <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">s_new[j++] = s[i];</span><br><span class="line">s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">&#125;</span><br><span class="line">s_new[j] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line"><span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line"><span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">p[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">p[i]++;</span><br><span class="line"><span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line"><span class="keyword">if</span> (mx &lt; i + p[i])  &#123;</span><br><span class="line">id = i;</span><br><span class="line">mx = i + p[i];</span><br><span class="line">&#125;</span><br><span class="line">maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line"><span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">printf("\n");*/</span></span><br><span class="line"><span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s)!=EOF)&#123;</span><br><span class="line">getchar();</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">memset</span>(p, <span class="number">0</span>, <span class="keyword">sizeof</span>(p));</span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'E'</span>&amp;&amp;s[<span class="number">1</span>] == <span class="string">'N'</span>&amp;&amp;s[<span class="number">2</span>] == <span class="string">'D'</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Manacher());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> Manacher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 2609 - How many （最小表示法+set除重）</title>
      <link href="/article/HDU-2609-How-many-%EF%BC%88%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95-set%E9%99%A4%E9%87%8D%EF%BC%89.html"/>
      <url>/article/HDU-2609-How-many-%EF%BC%88%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95-set%E9%99%A4%E9%87%8D%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/79/13b14bc710cdb1ae8f2c85e150cdf676c2907d.jpg" alt=""></p><h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2609" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/6e/9fbb82d7bd3c7c900dde14f54b53f6df4b6138.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>有n个环形字符串，一个环形字符串移动会形成不能的字符串，我们把它们看作同一串字符串，求有多少个不同的字符串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>用最小表示法把每个串的最小字典序找出来, ==(如果两个循环串相等则他们的最小字典序也一定相等)==,set带有除重功能，因为<code>set</code>具有除重功能所以用<code>set</code>来存每个串求出的最小字典序</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e4</span>+<span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt;sub;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">            len=s.size();</span><br><span class="line">            s+=s;</span><br><span class="line">            <span class="keyword">int</span> l=GetMin();</span><br><span class="line">            sub.insert(s.substr(l,len));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sub.size());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> 最大最小表示法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU - 2087-减花布条(裸KMP模板)</title>
      <link href="/article/HDU-2087-%E5%87%8F%E8%8A%B1%E5%B8%83%E6%9D%A1-%E8%A3%B8KMP%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/HDU-2087-%E5%87%8F%E8%8A%B1%E5%B8%83%E6%9D%A1-%E8%A3%B8KMP%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/66/916a690e415d42d1934a3ded2badc1082abc49.jpg" alt=""></p><h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2087" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/d9/ccd006228581c5bdc16d88fba3ec6bb2046880.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>中文题面，题意也说得非常清楚了，给一个文本串，求文本串中有多少个不重复的模式串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>kmp标准做法，甚至基本没有变动。 判断的时候，每当完整的匹配一次之后令j=0，ans++，即模式串的下标从0开始，匹配数量加1</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000030</span>;</span><br><span class="line"><span class="keyword">int</span> next1[<span class="number">10030</span>];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> p[<span class="number">10030</span>];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prefix_next</span><span class="params">()</span></span>&#123;</span><br><span class="line">next1[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">next1[<span class="number">1</span>]=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;p[i]!=<span class="string">'\0'</span>;i++)&#123;</span><br><span class="line">        j = next1[i];   </span><br><span class="line">        <span class="keyword">while</span>(j &amp;&amp; p[j] != p[i]) j = next1[j];  </span><br><span class="line">        next1[i+<span class="number">1</span>] = p[j] == p[i] ? j + <span class="number">1</span>: <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>,m=<span class="built_in">strlen</span>(p),n=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i]!=<span class="string">'\0'</span>;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j &amp;&amp; p[j] != s[i]) j = next1[j];  </span><br><span class="line">        <span class="keyword">if</span>(p[j] == s[i]) j ++;  </span><br><span class="line">        <span class="keyword">if</span>(j == m) &#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span>(i+m&lt;n)</span><br><span class="line">        j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">/*#ifdef LOCAL</span></span><br><span class="line"><span class="comment">freopen("C:/Users/Administrator/Desktop/input.txt","r",stdin);</span></span><br><span class="line"><span class="comment">#endif*/</span></span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s),<span class="built_in">strcmp</span>(s,<span class="string">"#"</span>))&#123;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;p;</span><br><span class="line">prefix_next();</span><br><span class="line">kmp();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;cnt&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1711-Number Sequence(数组跑KMP)</title>
      <link href="/article/HDU-1711-Number-Sequence-%E6%95%B0%E7%BB%84%E8%B7%91KMP.html"/>
      <url>/article/HDU-1711-Number-Sequence-%E6%95%B0%E7%BB%84%E8%B7%91KMP.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/4b/143daabe6ba4de1d1badf4c878eef573890698.jpg" alt=""></p><h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1711" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/02/c93a1d9d16981b0ff94f816e7948280132025b.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你两个数组的所有元素，让你对它们进行匹配，当位置为多少时候它们能完全匹配。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>直接跑KMP就可以了，唯一注意的…..emmm….应该不用注意吧，也就原先是字符串，现在把字符串换成数组<del>超级大水题</del></p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">1000100</span>],t[<span class="number">11000</span>];</span><br><span class="line"><span class="keyword">int</span> nex[<span class="number">1000100</span>];<span class="comment">//nex数组大小和短串一致</span></span><br><span class="line"><span class="keyword">int</span> ans,n,m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">get_nex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;<span class="comment">//影响next[0] </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(t[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>)</span><br><span class="line">j=nex[j];</span><br><span class="line">        <span class="keyword">if</span> (t[i]==t[j+<span class="number">1</span>] &amp;&amp; i!=<span class="number">0</span>) </span><br><span class="line">j++;</span><br><span class="line">        nex[i]=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>) </span><br><span class="line">j=nex[j];</span><br><span class="line">        <span class="keyword">if</span> (s[i]==t[j+<span class="number">1</span>]) j++;</span><br><span class="line">        <span class="keyword">if</span> (j==m<span class="number">-1</span>)&#123;</span><br><span class="line">        ans++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i-j+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tt;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tt);</span><br><span class="line"><span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t[i]);</span><br><span class="line">get_nex();</span><br><span class="line">kmp();</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1841-Find the Shortest Common Superstring（kmp）</title>
      <link href="/article/HDU-1841-Find-the-Shortest-Common-Superstring%EF%BC%88kmp%EF%BC%89.html"/>
      <url>/article/HDU-1841-Find-the-Shortest-Common-Superstring%EF%BC%88kmp%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/7c/274c81f9bf49a696025b3fbd341c4ad5d33aad.jpg" alt=""></p><h3 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://me.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h3><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1841" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://img.vim-cn.com/55/f23bb1e1b105188b2f30461767ee855b2c98ab.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给出两个串，用这两个串组成一个新串，使新串包含这两个串，问这个新串的长度最小是多少；</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>显然，对于两个串A，B；A如果是B的子串或者B如果是A的子串的话，直接输出那个母串的长度即可，如果没有这种关系，那么看一个串的后缀是否是另一个串的前缀，如果某个串的后缀与另一个串的前缀的公共部分最长，则答案=A.length+B.length-公共长度，所以可以直接用kmp去做。(kmp匹配最后j值为模式串前缀和主串后缀最长公共长度)</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000100</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">3</span>][<span class="number">2</span>*N];</span><br><span class="line"><span class="keyword">int</span> fail[<span class="number">2</span>*N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> &amp;i, <span class="keyword">int</span> &amp;j, <span class="keyword">char</span>* str, <span class="keyword">char</span>* pat)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">memset</span>(fail, <span class="number">-1</span>, <span class="keyword">sizeof</span>(fail));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; pat[i]; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (k = fail[i - <span class="number">1</span>]; k &gt;= <span class="number">0</span> &amp;&amp; pat[i] != pat[k + <span class="number">1</span>]; k = fail[k]);</span><br><span class="line">        <span class="keyword">if</span> (pat[k + <span class="number">1</span>] == pat[i])&#123;</span><br><span class="line">            fail[i] = k + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i = j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i] &amp;&amp; pat[j])&#123;</span><br><span class="line">        <span class="keyword">if</span> (pat[j] == str[i])&#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>)&#123;</span><br><span class="line">            i++;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            j = fail[j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf("%d %d\n",i,j);</span></span><br><span class="line">    <span class="keyword">if</span> (pat[j])&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i - j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, l1 = <span class="number">0</span>, l2 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[<span class="number">0</span>] &gt;&gt; a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> len1 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">0</span>]), len2 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">1</span>]), val;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">1</span>], a[<span class="number">0</span>]);            </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)&#123;</span><br><span class="line">            l1 = len1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len2 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">1</span>][len2 - <span class="number">1</span>] == a[<span class="number">0</span>][j - <span class="number">1</span>])&#123;</span><br><span class="line">                l1 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">0</span>], a[<span class="number">1</span>]);           </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)&#123;</span><br><span class="line">            l2 = len2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len1 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>][len1 - <span class="number">1</span>] == a[<span class="number">1</span>][j - <span class="number">1</span>])&#123;</span><br><span class="line">                l2 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len1 + len2 - max(l1, l2));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python入门教程</title>
      <link href="/article/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html"/>
      <url>/article/Python%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/8a/875c0eff402f2af707d36b5897d561005692ab.jpg" alt=""></p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>1.注释———# 标注文本</p><p>2.数字</p><ul><li>整数，不区分long和int<ul><li>进制0xa (16进制的10),0o10（8进制的10）,0b10（2进制的10）</li><li>bool，2个值True，False</li></ul></li><li>浮点数<ul><li>1.2，3.1415.-0.12，1.46e9等价于1.46*10^9</li></ul></li><li>复数，1+2j</li></ul><p>3.字符串</p><ul><li><p>使用‘ “单双引号引用字符的序列</p></li><li><p>‘ ’ ‘ ” “ ” 单双三引号，可以跨行，可以在其中自由的使用单双引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">''' welcome 'to' python'''</span>) <span class="comment">#输出  welcome 'to' python</span></span><br><span class="line">print(<span class="string">''' welcome 'to' </span></span><br><span class="line"><span class="string">1\#输出welcome 'to'</span></span><br><span class="line"><span class="string">2\# 123</span></span><br><span class="line"><span class="string">3\#    'python'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'python' '''</span>)</span><br></pre></td></tr></table></figure></li><li><p>在字符串前面加上r或者R前缀，表示该字符串不做特殊处理(比如字符串中含有\)</p></li><li><p>python为强类型语言，所以不允许’<code>a‘+1</code></p></li><li><p>字符串可以直接连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'abc'</span>+<span class="string">'efg'</span>)  <span class="comment">#打印出abcefg</span></span><br></pre></td></tr></table></figure></li></ul><p>4.转义序列</p><ul><li>\\ \t \r \n \‘ \“</li><li>前缀r,把里面的所有的字符当普通字符对待</li></ul><p>5.缩进</p><ul><li>未使用C等语言的花括号，而是采用缩进的方式表示层次关系</li><li>约定使用4个空格缩进</li></ul><p>6.续行</p><ul><li>在行尾使用 \</li><li>如果使用各种括号，认为括号内的是一个整体，内部跨行不用 \</li></ul><p>7.标识符</p><ul><li><p>一个名字，用来指代一个值</p></li><li><p>只能字母，下划线和数字</p></li><li><p>只能以字母或下划线开头</p></li><li><p>不能是python的关键字，例如def，class就不能作为标识符</p></li><li><p>python是大小写敏感的</p><p>约定：</p><p>不允许使用中文</p><p>不允许使用歧义单词，例如class_</p><p>在python中不要随便使用下划线开头的标识符</p></li></ul><p>8.常量</p><ul><li>一旦赋值就不能改变值的标识符</li><li>python中无法定义常量</li></ul><p>9.字面常量</p><ul><li>一个单独的量，例如12，“abc”,’2341356514.03e-9’</li></ul><p>10.变量</p><ul><li>赋值后，可以改变值的标识符</li></ul><h2 id="运算符Operator"><a href="#运算符Operator" class="headerlink" title="运算符Operator"></a>运算符Operator</h2><p>1.算数运算符</p><ul><li><p>+ - * / % **</p><ul><li><p>**表示次方</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">2</span>**<span class="number">3</span>)  <span class="comment">#输出 8</span></span><br><span class="line">print(<span class="number">4</span>**<span class="number">0.5</span>) <span class="comment">#输出 2.0</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>自然除/结果是浮点数，整除//。注：2.x中对于整数都是/和//都是整除</p></li></ul><p>2.位运算符</p><ul><li><p>&amp; | ~ ^ &lt;&lt; &gt;&gt;</p><ul><li><p>&amp; 按位与</p></li><li><p>| 按位或</p></li><li><p>~ 按反码补码取反（反出来会比真实相反数小一）</p><ul><li><p>原码</p><ul><li><p>5=&gt; 0b101, 1=&gt;0b1 ,-1=&gt; -0b1, bin(-1) #可以获取数字原码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin(<span class="number">-1</span>)  <span class="comment">#获得-0b1;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>反码</p><ul><li>正数将原码按位取反；负数符号位不变其余按位取反</li></ul></li><li><p>补码</p><ul><li>正数的补码是其本身；负数符合位不变其余按位取反后-1</li></ul></li></ul></li><li><p>^ 按位异或</p></li><li><p>&lt;&lt; 向左的位移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">1</span>&lt;&lt;<span class="number">2</span>) <span class="comment">#输出4</span></span><br></pre></td></tr></table></figure></li><li><p>>&gt; 向右的位移</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">4</span>&gt;&gt;<span class="number">1</span>) <span class="comment">#输出 2</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>常用方式：乘除2的倍数，32//4相当于32&gt;&gt;2</p></li><li><p>12,0xc,0o14,0b1100</p><ul><li>~12等于-13</li></ul></li></ul><p>3.比较运算符</p><ul><li>== != &gt; &lt; &gt;= &lt;=</li><li>返回一个bool值</li><li>1&lt;’1’ 1==’1’</li></ul><p>4.逻辑运算符</p><ul><li>与或非 and or not</li><li>短路运算符<ul><li>and 如果第一个表达式位False，后面的就没有必要计算了，这个逻辑表达式一定False</li><li>or 如果第一个表达式True，后面没有必要计算了，这个逻辑表达式一定是True</li></ul></li></ul><p>5.赋值运算符</p><ul><li>a=min(3,5)</li><li>+= -= <em>=</em>= /= %=</li><li>x=y=z=10</li></ul><p>6.成员运算符</p><ul><li>in ,not in</li></ul><p>7.身份运算符</p><ul><li>is,not is</li></ul><p>8.运算优先级（由高到底）</p><ul><li>算数运算符 &gt; 位运算符 &gt; 身份运算符 &gt; 成员运算符 &gt; 逻辑运算符</li></ul><h2 id="表达式-Expression"><a href="#表达式-Expression" class="headerlink" title="表达式 Expression"></a>表达式 Expression</h2><p>1.由数字，符号，括号，变量等的组合</p><ul><li>算数表达式</li><li>逻辑表达式</li><li>赋值表达式<ul><li>Python，赋值及定义，如果一个变量了已经定义，赋值相当于重新定义</li></ul></li></ul><h2 id="程序控制"><a href="#程序控制" class="headerlink" title="程序控制"></a>程序控制</h2><ul><li>顺序<ul><li>按照先后顺序一条一条执行</li><li>例如，先洗手，再吃饭，再洗碗</li></ul></li><li>分支<ul><li>根据不同的情况判断，条件满足执行某条件下的语句</li><li>例如，先洗手，如果饭没做好，玩游戏，如果饭做好了，就吃饭，如果饭都没做，叫外卖</li></ul></li><li>循环<ul><li>条件满足就反复执行，不满足就不执行或者不再执行</li><li>例如：先洗手，看饭好了没有，没有好，一会来看一次是否好了，一会儿来看一次，直到饭好了，才可以吃饭。这里循环的条件就是<strong>饭好了没</strong>，饭没好，就循环的来看饭好了没有。</li></ul></li></ul><h2 id="单分支结构"><a href="#单分支结构" class="headerlink" title="单分支结构"></a>单分支结构</h2><p>1.if语句</p><p>​ if 表达式：</p><pre><code>代码块(必须由4个空格，不允许使用缩进)</code></pre><p>​ 表达式必须是一个bool类型，这个地方有一个隐式转换bool(表达式)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>&lt;<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">'1 less than 2'</span>)</span><br></pre></td></tr></table></figure><p>2.代码块</p><ul><li>类似于if语句的冒号后面的就是一个代码块</li><li>if, for , def ,class 等</li></ul><h2 id="真值表-bool-表达式-对应的隐式转换"><a href="#真值表-bool-表达式-对应的隐式转换" class="headerlink" title="真值表   bool(表达式)对应的隐式转换"></a>真值表 bool(表达式)对应的隐式转换</h2><table><thead><tr><th style="text-align:center">对象/常量</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center">“”</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">“string”</td><td style="text-align:center">真</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">&gt;=1</td><td style="text-align:center">真</td></tr><tr><td style="text-align:center">&lt;=-1</td><td style="text-align:center">真</td></tr><tr><td style="text-align:center">()空原组</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">[]空列表</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">{}空字典</td><td style="text-align:center">假</td></tr><tr><td style="text-align:center">None</td><td style="text-align:center">假</td></tr></tbody></table><h2 id="多分支结构"><a href="#多分支结构" class="headerlink" title="多分支结构"></a>多分支结构</h2><ul><li><p>if…elif…else语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 表达式<span class="number">1</span>:</span><br><span class="line">    代码块<span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> 表达式<span class="number">2</span>:</span><br><span class="line">    代码块<span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> 表达式<span class="number">3</span>:</span><br><span class="line">    代码块<span class="number">3</span></span><br><span class="line">……</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    代码块</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> a=<span class="number">4</span></span><br><span class="line"> <span class="keyword">if</span> a&lt;<span class="number">1</span>:</span><br><span class="line">     print(<span class="string">'S'</span>)</span><br><span class="line"> <span class="keyword">elif</span> a&lt;<span class="number">3</span>:</span><br><span class="line">     print(<span class="string">'AS'</span>)</span><br><span class="line"> <span class="keyword">elif</span> a&lt;<span class="number">4</span>:</span><br><span class="line">     print(<span class="string">'B'</span>)</span><br><span class="line"> <span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">'sss'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出：sss</span></span><br></pre></td></tr></table></figure></li></ul><p>2.分支嵌套</p><ul><li><p>举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">score=<span class="number">80</span></span><br><span class="line"><span class="keyword">if</span> score&lt;<span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"wrong"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> score==<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'egg'</span>)</span><br><span class="line">    <span class="keyword">elif</span> score&lt;=<span class="number">100</span>:</span><br><span class="line">        print(<span class="string">'right'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'too big'</span>)</span><br><span class="line"><span class="comment">#输出：right</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环——while语句"><a href="#循环——while语句" class="headerlink" title="循环——while语句"></a>循环——while语句</h2><ul><li><p>语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 表达式:</span><br><span class="line">代码块</span><br><span class="line"><span class="comment">#当条件满足表达式为true，进入循环题，执行代码块</span></span><br></pre></td></tr></table></figure></li><li><p>举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">flag=<span class="number">10</span></span><br><span class="line"><span class="keyword">while</span> flag:</span><br><span class="line">print(flag)</span><br><span class="line">flag-=<span class="number">1</span></span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环——for语句"><a href="#循环——for语句" class="headerlink" title="循环——for语句*"></a>循环——for语句*</h2><ul><li><p>语法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> iteratable:</span><br><span class="line">block</span><br><span class="line"><span class="comment">#当可迭代对象中有对象可以迭代，进入循环体，执行代码块</span></span><br></pre></td></tr></table></figure></li><li><p>range函数</p></li><li><p>举例：打印1~10</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):  //从<span class="number">0</span>开始迭代到<span class="number">9</span>，每次i++;</span><br><span class="line">print(i+<span class="number">1</span>)</span><br><span class="line"><span class="comment">#输出:</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#打印0~9的偶数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">10</span>,<span class="number">2</span>)://从<span class="number">2</span>开始迭代到<span class="number">9</span>，每次i+=<span class="number">2</span>;</span><br><span class="line">print(i)</span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环continue语句"><a href="#循环continue语句" class="headerlink" title="循环continue语句"></a>循环continue语句</h2><ul><li><p>中断当前循环的当次执行，继续下一次循环</p></li><li><p>举例：计算10以内的偶数（for循环）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10):</span><br><span class="line">if i%2:</span><br><span class="line">continue</span><br><span class="line">print(i)</span><br><span class="line">#输出</span><br><span class="line">0</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环break语句"><a href="#循环break语句" class="headerlink" title="循环break语句"></a>循环break语句</h2><ul><li><p>终止当前循环</p></li><li><p>举例：计算1000以内的被7整除的前20个数（for循环）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1000</span>,<span class="number">7</span>):</span><br><span class="line">print(i)</span><br><span class="line">count+=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span>(count&gt;=<span class="number">20</span>):</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="comment">#输出：</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="number">21</span></span><br><span class="line"><span class="number">28</span></span><br><span class="line"><span class="number">35</span></span><br><span class="line"><span class="number">42</span></span><br><span class="line"><span class="number">49</span></span><br><span class="line"><span class="number">56</span></span><br><span class="line"><span class="number">63</span></span><br><span class="line"><span class="number">70</span></span><br><span class="line"><span class="number">77</span></span><br><span class="line"><span class="number">84</span></span><br><span class="line"><span class="number">91</span></span><br><span class="line"><span class="number">98</span></span><br><span class="line"><span class="number">105</span></span><br><span class="line"><span class="number">112</span></span><br><span class="line"><span class="number">119</span></span><br><span class="line"><span class="number">126</span></span><br><span class="line"><span class="number">133</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="循环else子句"><a href="#循环else子句" class="headerlink" title="循环else子句"></a>循环else子句</h2><ul><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">while condition:</span><br><span class="line">block</span><br><span class="line">else:</span><br><span class="line">block</span><br><span class="line">for element in iteratable:</span><br><span class="line">block</span><br><span class="line">else:</span><br><span class="line">block</span><br></pre></td></tr></table></figure></li><li><p>如果循环正常的执行结束，就执行else子句；如果使用break终止，else子句不会执行</p></li></ul><h2 id="Python输入输出"><a href="#Python输入输出" class="headerlink" title="Python输入输出"></a>Python输入输出</h2><p>1.输入</p><ul><li><p>input()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num=intput(<span class="string">'请输入一个数'</span>)  <span class="comment">#输入一个数回车结束</span></span><br><span class="line">print(num)  <span class="comment">#输入1234  输出1234</span></span><br><span class="line"><span class="comment">#在有的版本python中存在一下问题</span></span><br><span class="line">num=input()  <span class="comment">#输入的是一个字符串</span></span><br><span class="line"><span class="keyword">print</span> num   <span class="comment">#如果输入1234  打印的是一个字符串’1234‘</span></span><br><span class="line">num=int(input())<span class="comment">#输入的是一个整数</span></span><br><span class="line"><span class="keyword">print</span> num     <span class="comment">#打印这个整数</span></span><br></pre></td></tr></table></figure></li><li><p>print</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> a <span class="comment">#打印变量a</span></span><br><span class="line">print(a) <span class="comment">#打印a</span></span><br><span class="line">print(a,b)  <span class="comment">#打印(a,b)</span></span><br><span class="line"><span class="keyword">print</span> a,b   <span class="comment">#打印a,b</span></span><br></pre></td></tr></table></figure></li></ul><p><center><font size="6"><center><font size="6">未完待续</font></center><br></font></center><br></p>]]></content>
      
      
      <categories>
          
          <category> Pyhton </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python入门 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Material Plus主题安装和使用文档</title>
      <link href="/article/Material-Plus%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3.html"/>
      <url>/article/Material-Plus%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3.html</url>
      
        <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="这是一篇加密文档，请输入密码去阅读。" />    <label for="pass">这是一篇加密文档，请输入密码去阅读。</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Material Plus </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记一次Hexo博客更新</title>
      <link href="/article/%E8%AE%B0%E4%B8%80%E6%AC%A1Hexo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0.html"/>
      <url>/article/%E8%AE%B0%E4%B8%80%E6%AC%A1Hexo%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.vim-cn.com/56/46f9ceaae3f4eb89def00cc80c5196bf0db82d.jpg" alt=""></p><p>这次更新成功将博客从Next主题换到了Material Plus…….</p><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><blockquote><p>先上一个更新前及更新后预览图对比</p></blockquote><blockquote><p>更新前：</p><p><img src="https://i.loli.net/2018/12/02/5c0393211ae2f.png" alt=""></p></blockquote><blockquote><p>更新后：</p><p><img src="https://i.loli.net/2018/12/02/5c03931b1e22d.png" alt=""></p></blockquote><blockquote><p>是不是灰常好看捏^_^</p></blockquote><h2 id="开工："><a href="#开工：" class="headerlink" title="开工："></a>开工：</h2><h3 id="第一步：删库备份"><a href="#第一步：删库备份" class="headerlink" title="第一步：删库备份"></a>第一步：删库备份</h3><p>首先，把E盘Blog仓库复制一份到D盘<del>（方便以后两主题来回切换）</del>，然后删库<del>你没听错，直接把E盘Blog删了</del>，然后<code>init</code>一个新Blog仓库。</p><h3 id="第二步：下载主题及覆盖"><a href="#第二步：下载主题及覆盖" class="headerlink" title="第二步：下载主题及覆盖"></a>第二步：下载主题及覆盖</h3><p>下载主题后把Blog里的<code>themes</code>和<code>source</code>，<code>scaffolds</code>覆盖了</p><h3 id="第三步：进行主题配置："><a href="#第三步：进行主题配置：" class="headerlink" title="第三步：进行主题配置："></a>第三步：进行主题配置：</h3><p>因为版权问题，详细步骤请看—<a href="https://anoyer.cn/article/Material-Plus%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3.html">Material Plus主题安装和使用文档</a>（还是别看了，加密的，哈哈哈）</p><h2 id="完工："><a href="#完工：" class="headerlink" title="完工："></a>完工：</h2><p>本蒟蒻不懂前端，以上代码大部分都是去 <code>Inspect Element</code> 然后复制粘贴再改一下的成果。。。还请各位大佬指正！好了，本文结束，下篇文章再见~ ✿✿ヽ(°▽°)ノ✿</p>]]></content>
      
      
      <categories>
          
          <category> 闲记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-3261-Milk Patterns(后缀数组)</title>
      <link href="/article/POJ-3261-Milk-Patterns-%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84.html"/>
      <url>/article/POJ-3261-Milk-Patterns-%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180717/0003191P9-7.jpg" alt=""></p><p><a href="https://blog.csdn.net/anoy_acer?t=1" target="_blank" rel="noopener">博主CSDN</a></p><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://poj.org/problem?id=3261" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://i.loli.net/2018/11/28/5bfe6057b5b4e.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给定一个字符串S，求至少出现k次的最长重复子串，这k个子串可以重叠。</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>后缀数组。先二分答案，然后将后缀分成若干组。这里要判断的是有没有一个组的后缀个数不小于k。如果有，那么存在k个相同的子串满足条件，否则不存在。。</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    题意：找出出现k次的可重叠的最长子串的长度</span></span><br><span class="line"><span class="comment">        这都是套路题了，二分长度L,按照height值分组，在同一组内的组数如果大于K,则成立。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ch[MAXN], All[MAXN];</span><br><span class="line"><span class="keyword">int</span> SA[MAXN], rank[MAXN], Height[MAXN], tax[MAXN], tp[MAXN], a[MAXN], n, m;</span><br><span class="line"><span class="keyword">char</span> str[MAXN];</span><br><span class="line"><span class="keyword">int</span> k,cnt;</span><br><span class="line"><span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="comment">//tax[i] 计数排序辅助数组; tp[i] rank的辅助数组(计数排序中的第二关键字),与SA意义一样。</span></span><br><span class="line"><span class="comment">//a为原串</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RSort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//rank第一关键字,tp第二关键字。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) tax[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) tax[rank[tp[i]]] ++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++) tax[i] += tax[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i --) SA[tax[rank[tp[i]]] --] = tp[i]; <span class="comment">//确保满足第一关键字的同时，再满足第二关键字的要求</span></span><br><span class="line">&#125; <span class="comment">//计数排序,把新的二元组排序。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *f, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span> </span>&#123; <span class="keyword">return</span> f[x] == f[y] &amp;&amp; f[x + w] == f[y + w]; &#125;</span><br><span class="line"><span class="comment">//通过二元组两个下标的比较，确定两个子串是否相同</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Suffix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//SA</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) rank[i] = a[i], tp[i] = i;</span><br><span class="line">    m = <span class="number">127</span> ,RSort(); <span class="comment">//一开始是以单个字符为单位，所以(m = 127)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> w = <span class="number">1</span>, p = <span class="number">1</span>, i; p &lt; n; w += w, m = p) &#123; <span class="comment">//把子串长度翻倍,更新rank</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//w 当前一个子串的长度; m 当前离散后的排名种类数</span></span><br><span class="line">        <span class="comment">//当前的tp(第二关键字)可直接由上一次的SA的得到</span></span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>, i = n - w + <span class="number">1</span>; i &lt;= n; i ++) tp[++ p] = i; <span class="comment">//长度越界,第二关键字为0</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i ++) <span class="keyword">if</span> (SA[i] &gt; w) tp[++ p] = SA[i] - w;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新SA值,并用tp暂时存下上一轮的rank(用于cmp比较)</span></span><br><span class="line">        RSort(), swap(rank, tp), rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用已经完成的SA来更新与它互逆的rank,并离散rank</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i ++) rank[SA[i]] = cmp(tp, SA[i], SA[i - <span class="number">1</span>], w) ? p : ++ p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//离散：把相等的字符串的rank设为相同。</span></span><br><span class="line">    <span class="comment">//LCP</span></span><br><span class="line">    <span class="keyword">int</span> j, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; Height[rank[i ++]] = k)</span><br><span class="line">        <span class="keyword">for</span>( k = k ? k - <span class="number">1</span> : k, j = SA[rank[i] - <span class="number">1</span>]; a[i + k] == a[j + k]; ++ k);</span><br><span class="line">    <span class="comment">//这个知道原理后就比较好理解程序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</span><br><span class="line">    cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Height[i]&lt;mid)cnt=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> cnt++;</span><br><span class="line">        <span class="keyword">if</span>(cnt&gt;=k)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i &lt;=n; i ++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">freopen(<span class="string">"C:/Users/Administrator/Desktop/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    Init();</span><br><span class="line">    Suffix();</span><br><span class="line"></span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=n;i++)cout&lt;&lt;SA[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;Height[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">           l=mid+<span class="number">1</span>;</span><br><span class="line">           res=max(res,mid);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
            <tag> 后缀数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-4333-Revolving Digits(扩展KMP)</title>
      <link href="/article/HDU-4333-Revolving-Digits-%E6%89%A9%E5%B1%95KMP.html"/>
      <url>/article/HDU-4333-Revolving-Digits-%E6%89%A9%E5%B1%95KMP.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180822/13_1939105653.jpg" alt=""></p><p><a href="https://blog.csdn.net/anoy_acer?t=1" target="_blank" rel="noopener">CSDN</a></p><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4333" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://i.loli.net/2018/11/28/5bfe5e30b4b4e.png" alt=""></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个字符串，你可以将该字符串的任意长度后缀截取下来然后接到最前面，让你统计所有新串中有多少种字典序小于、等于、大于原串。</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>首先我们将原串扩展成两倍，算一遍扩展KMP（自匹配），时间复杂度O(n)。这样一来，我们就得到了eKMP[i]，eKMP[i]代表s[i…len-1]与s的最长公共子串。为了避免重复子串重复计数，我们先求出s的最小循环节：然后我们只需统计最小循环节以内的字符就可。当eKMP[i]&gt;=len时，显然是原串，E++;否则我们只需比较一位就可判断大小，即：比较s[i+eKMP[i]]和s[eKMP[i]]的大小。为什么只需比较一位?因为s[0…eKMP[i]-1]和s[i…i+eKMP[i]-1]是相同的，只需判断第一个不相同的位置就可</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100010</span>;<span class="comment">//字符串长度最大值</span></span><br><span class="line"><span class="keyword">int</span> next1[maxn*<span class="number">2</span>],ex[maxn];<span class="comment">//ex数组即为extend数组</span></span><br><span class="line"><span class="keyword">char</span> s[maxn*<span class="number">2</span>],s2[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="comment">//预处理计算next数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j,po,len=<span class="built_in">strlen</span>(s);</span><br><span class="line">next1[<span class="number">0</span>]=len;<span class="comment">//初始化next[0]</span></span><br><span class="line"><span class="keyword">while</span>(s[i]==s[i+<span class="number">1</span>]&amp;&amp;s[i+<span class="number">1</span>])<span class="comment">//计算next[1]</span></span><br><span class="line">i++;</span><br><span class="line">next1[<span class="number">1</span>]=i;</span><br><span class="line">po=<span class="number">1</span>;<span class="comment">//初始化po的位置</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(next1[i-po]+i&lt;=next1[po]+po<span class="number">-1</span>)<span class="comment">//第一种情况，可以直接得到next[i]的值</span></span><br><span class="line">next1[i]=next1[i-po];</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//第二种情况，要继续匹配才能得到next[i]的值</span></span><br><span class="line">&#123;</span><br><span class="line">j=next1[po]+po-i;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span>)j=<span class="number">0</span>;<span class="comment">//如果i&gt;po+next[po],则要从头开始匹配</span></span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len&amp;&amp;s[j]==s[j+i])<span class="comment">//计算next[i]</span></span><br><span class="line">j++;</span><br><span class="line">next1[i]=j;</span><br><span class="line">po=i;<span class="comment">//更新po的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret1,ret2,ret3;</span><br><span class="line">ret1=ret2=ret3=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;2*n;i++)printf("%d ",next1[i]);</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i!=<span class="number">0</span>&amp;&amp;next1[i]&gt;=n)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(next1[i]&lt;n)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i+next1[i]]&lt;s[next1[i]])ret1++;</span><br><span class="line"><span class="keyword">else</span> ret3++;</span><br><span class="line">&#125;<span class="keyword">else</span> ret2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,ret1,ret2,ret3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,cas=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">n=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d: "</span>,++cas);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">s[n+i]=s[i];</span><br><span class="line">&#125;s[<span class="number">2</span>*n]=<span class="string">'\0'</span>;</span><br><span class="line"><span class="comment">//printf("\n%s",s);</span></span><br><span class="line">getnext();</span><br><span class="line">work();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> 扩展KMP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Anoyer训练计划</title>
      <link href="/article/Anoyer%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92.html"/>
      <url>/article/Anoyer%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180919/0410235545-6.jpg" alt=""></p><h2 id="Anoyer-JB训练规划"><a href="#Anoyer-JB训练规划" class="headerlink" title="Anoyer JB训练规划"></a>Anoyer JB训练规划</h2><ul><li><p>前期：18年12月-19年2月低完成算法专题训练一阶段+一些专题散题：</p><ul><li>kuangbin-字符串所有专题</li><li>kuangbin-数论所有专题</li><li>各OJ专题散题+cf比赛</li></ul><blockquote><p>该阶段必须掌握字符串和数论所有考点算法及其各种运用<del>（<strong>这也是刷专题的意义所在</strong>）</del>，除去一些特难算法稀有神兽级别的算法<del>（脑子不够，学意义也不大）</del></p></blockquote><p><img src="https://i.loli.net/2018/11/29/5bff8ff37dbc4.png" alt=""></p></li><li><p>中期：19年3月-省赛前完成计算几何 （<strong>重心</strong>） 和数据结构算法学习及专题训练++一些专题散题：</p><ul><li>kuangbin-计算几何所有专题</li><li>kuangbin-数据结构所有专题</li><li>各OJ专题散题+cf比赛</li></ul><blockquote><p>该阶段结束时，必须掌握字符串,数论,计算机几何,数据结构所有考点算法及其各种运用<del>（<strong>这也是刷专题的意义所在，粘贴复制上文的QAQ</strong>）</del>，除去一些特难算法稀有神兽级别的算法<del>（脑子不够，学意义也不大）</del></p></blockquote></li><li><p>后期：省赛结束后-暑假前开始补cf以前的题，锻炼思维及出题速度 <del><strong>学习较为单一的一个阶段</strong></del></p><ul><li>尽可能多的补cf以前的题，对于补的每一场比赛，尽可能的把这一场的题都补完，这样才是补题意义所在</li></ul><blockquote><p>该阶段意义在于训练思维能力，能快速的对于一道题目给出解题思路，这也是我半年训练及两次现场赛的经验<del>CF很重要，解题思维比算法更重要</del></p></blockquote></li></ul><ul><li><p>冲刺期：7月-8月准备参加多校训练或者时参加夏令营<del>个人意向时参加夏令营，提升会很大也很快</del></p><ul><li>进行高压训练，每场比赛都可以看出本赛季的希望，且对知识巩固利用并实战</li><li>同时利用空闲时间进行个人模板整理</li><li>cf补题</li></ul><blockquote><p>该阶段也是对知识点磨合对算法巩固脑子实战，也是队伍快速磨合阶段</p></blockquote></li><li><p>网络赛阶段：9月打6场网络赛，拿取名额。在冲刺期应该会有一场CCPC网络赛。目标打满该赛季的ICPC及一场CCPC（<del>估计得经济倒退一阵子</del>）</p><ul><li>网络赛</li><li>cf补题</li></ul><blockquote><p>好好打网络赛拿名额</p></blockquote></li><li><p>网络赛后备赛阶段，日常刷题训练</p><ul><li>cf补题</li><li>专题复习</li></ul><blockquote><p>平复赛前心态，以最好心态及状态参赛</p></blockquote></li></ul><p><strong>Anoyer训练规划讲完！！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 闲记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>逆元模板</title>
      <link href="/article/%E9%80%86%E5%85%83%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E9%80%86%E5%85%83%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170307/110J2C95-5.jpg" alt=""></p><p><strong>费马小定理求逆元</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">quick_mod</span><span class="params">(ll a,ll b,ll c)</span> <span class="comment">//快速幂计算(a^b)%c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)   <span class="comment">//相当于b%2==1</span></span><br><span class="line">            ans = (ans*a)%c;</span><br><span class="line">        a = (a*a)%c;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;    <span class="comment">//相当于b/=2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll b,ll c)</span>   <span class="comment">//计算b的逆元</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> quick_mod(b,c<span class="number">-2</span>,c);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">div</span><span class="params">(ll a,ll b,ll c)</span>  <span class="comment">//计算(a/b)%c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((a%c)*(inv(b,c)%c))%c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>扩展GCD求逆元</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ex_gcd</span><span class="params">(ll a, ll b, ll &amp;d, ll &amp;x, ll &amp;y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) &#123;d = a, x = <span class="number">1</span>, y = <span class="number">0</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ex_gcd(b, a % b, d, y, x);</span><br><span class="line">        y -= x * (a / b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll a, ll p)</span></span>&#123;<span class="comment">//如果不存在，返回-1  a,p互质</span></span><br><span class="line">    ll d, x, y;</span><br><span class="line">    ex_gcd(a, p, d, x, y);</span><br><span class="line">    <span class="keyword">return</span> d == <span class="number">1</span> ? (x % p + p) % p : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递归求逆元</strong></p><p><strong>当p是个质数的时候有inv(a) = (p - p / a) * inv(p % a) % p,且1的逆元就是1</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll t, ll p)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//求t关于p的逆元，注意:t要小于p，最好传参前先把t%p一下 ,即inv(a%p, p)求a对p的逆元</span></span><br><span class="line">    <span class="keyword">return</span> t == <span class="number">1</span> ? <span class="number">1</span> : (p - p / t) * inv(p % t, p) % p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>打表求逆元</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ll inv[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Prepare_inv</span><span class="params">(ll n,ll M)</span></span>&#123;</span><br><span class="line">    inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        inv[i]=(ll)(M-M/i)*inv[M%i]%M;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>莫比乌斯函数打表模板</title>
      <link href="/article/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E8%A1%A8.html"/>
      <url>/article/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E8%A1%A8.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170307/110J2C29-3.jpg" alt=""></p><ul><li><strong>莫比乌斯打表（phi可以删除）</strong></li><li><strong>phi–欧拉函数表 miu–莫比乌斯函数表 fac–i最大的素因子辅助打phi表</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> phi[maxn],miu[maxn],fac[maxn];</span><br><span class="line">ll f[maxn], F[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; ++i) fac[i] = i;</span><br><span class="line">phi[<span class="number">1</span>] = miu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (fac[i] == i)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i &lt;&lt; <span class="number">1</span>; j &lt; maxn; j += i)</span><br><span class="line">fac[j] = i; </span><br><span class="line"><span class="keyword">if</span> (i / fac[i] % fac[i]) phi[i] = (fac[i] - <span class="number">1</span>)*phi[i / fac[i]], miu[i] = -miu[i / fac[i]]; <span class="comment">//如果b质数  a%b！=0  phi(a*b) = phi(a)*b - phi(a)</span></span><br><span class="line"><span class="keyword">else</span> phi[i] = fac[i] * phi[i / fac[i]], miu[i] = <span class="number">0</span>;<span class="comment">//当b是质数，a%b==0，phi(a*b)=phi(a)*b </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>求一个数的欧拉函数值–复杂度n^1/2</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">miu</span><span class="params">(ll n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> prime = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (n%i == <span class="number">0</span>) &#123;</span><br><span class="line">prime++;</span><br><span class="line">n /= i;</span><br><span class="line"><span class="keyword">if</span> (n%i == <span class="number">0</span>) &#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (prime % <span class="number">2</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>矩阵快速幂模板</title>
      <link href="/article/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82.html"/>
      <url>/article/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170307/110J2D13-2.jpg" alt=""></p><p><strong>快速幂函数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">quick_mod</span><span class="params">(ll a,ll b,ll c)</span> <span class="comment">//快速幂计算(a^b)%c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)   <span class="comment">//相当于b%2==1</span></span><br><span class="line">            ans = (ans*a)%c;</span><br><span class="line">        a = (a*a)%c;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;    <span class="comment">//相当于b/=2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>矩阵快速幂模版</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N=<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Matrix</span><span class="params">(<span class="keyword">int</span> (&amp;a)[<span class="number">2</span>][<span class="number">2</span>],<span class="keyword">int</span> b[<span class="number">2</span>][<span class="number">2</span>])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tmp[<span class="number">2</span>][<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">2</span>;++k)</span><br><span class="line">tmp[i][j]=(tmp[i][j]+a[i][k]*b[k][j])%N;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;++j)&#123;</span><br><span class="line">a[i][j]=tmp[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;n))&#123;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>&amp;&amp;n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">           <span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">           <span class="keyword">continue</span>;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="keyword">int</span> temp[<span class="number">2</span>][<span class="number">2</span>]=&#123;a,b,<span class="number">0</span>,<span class="number">0</span>&#125;,cot[<span class="number">2</span>][<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;, x[<span class="number">2</span>] = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">n-=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(n)&#123; </span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)Matrix(cot,temp);</span><br><span class="line">Matrix(temp,temp);</span><br><span class="line">n/=<span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">ans=(ans+x[i]*cot[<span class="number">0</span>][i])%N;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Miller-Rabin素性测试模板</title>
      <link href="/article/Miller-Rabin%E7%B4%A0%E6%80%A7%E6%B5%8B%E8%AF%95.html"/>
      <url>/article/Miller-Rabin%E7%B4%A0%E6%80%A7%E6%B5%8B%E8%AF%95.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/1942344507-3.jpg" alt=""></p><p><strong>/*</strong></p><p><strong>* 随机素数测试（伪素数原理理）</strong></p><p><strong>* CALL: bool res = miller(n);</strong></p><p><strong>* 快速测试n是否满⾜足素数的“必要”条件，出错概率极低</strong></p><p><strong>* 对于任意奇数n &gt; 2和正整数s，算法出错概率≤2^(-s)</strong></p><p><strong>*/</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2</span>*<span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">quicks</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span>  a, <span class="keyword">long</span> <span class="keyword">long</span> b, <span class="keyword">long</span> <span class="keyword">long</span> c)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line">a = a % c;</span><br><span class="line"><span class="keyword">while</span> (b != <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = (ans*a) % c;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">a = (a*a) % c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin_1</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n)</span> </span>&#123;  <span class="comment">//标准代码 </span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> b = n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((b &amp; <span class="number">1</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">t++;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//现在的a^(b*2^t)=1(mod n)</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a = rand() % (n - <span class="number">1</span>) + <span class="number">1</span>;   <span class="comment">//测试</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x = quicks(a, b, n);</span><br><span class="line"><span class="comment">//个人认为这里如果加上优先判定是不是1，n-1的话，会更快一点？是不是呢？？？？？ </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i = <span class="number">1</span>; i &lt;= t; i++)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> y = quicks(x, <span class="number">2</span>, n);</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">1</span> &amp;&amp; x != <span class="number">1</span> &amp;&amp; x != n - <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;    <span class="comment">//这里的意思是如果a^(d*2^r)是1，但是a^(d*2^(r-1))不是1也不是n-1的情况，这时候我们认为是合数 </span></span><br><span class="line">x = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x != <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ll n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (Miller_Rabin_1(n))<span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基数排序MSD模板</title>
      <link href="/article/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8FMSD.html"/>
      <url>/article/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8FMSD.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/1942345230-11.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> arr[maxn]=&#123;<span class="number">12</span>,<span class="number">14</span>,<span class="number">54</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">47</span>,<span class="number">89</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getdigit</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1e3</span>,<span class="number">1e4</span>,<span class="number">1e5</span>,<span class="number">1e6</span>,<span class="number">1e7</span>,<span class="number">1e8</span>,<span class="number">1e9</span>&#125;;<span class="comment">////因为待排数据最大数据位数</span></span><br><span class="line"><span class="keyword">return</span> ((x/a[d])%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">msdradix_sort</span><span class="params">(<span class="keyword">int</span> begin,<span class="keyword">int</span> end,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> radix=<span class="number">10</span>;<span class="comment">//进制数</span></span><br><span class="line"><span class="keyword">int</span> count[radix],i,j;<span class="comment">//count表示每个桶中元素个数</span></span><br><span class="line"><span class="comment">//置零</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)count[i]=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//给桶分配空间</span></span><br><span class="line"><span class="keyword">int</span> *bucket=(<span class="keyword">int</span> *)<span class="built_in">malloc</span>((end-begin+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="comment">//统计各桶需要装的元素的个数</span></span><br><span class="line"><span class="keyword">for</span>(i=begin;i&lt;=end;++i)&#123;</span><br><span class="line">count[getdigit(arr[i], d)]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求出桶的边界索引，count[i]值为第i个桶的右边界索引+1</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;radix;++i)&#123;</span><br><span class="line">count[i]+=count[i<span class="number">-1</span>];<span class="comment">//每个桶的边界，便于下步将arr重新放入bucket里 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里要从右向左扫描，保证排序稳定性 </span></span><br><span class="line"><span class="keyword">for</span>(i=end;i&gt;=begin;--i)&#123;</span><br><span class="line">j=getdigit(arr[i],d);  <span class="comment">//求出关键码的第d位的数字， 例如：576的第3位是5 </span></span><br><span class="line">bucket[count[j]<span class="number">-1</span>]=arr[i];  <span class="comment">//放入对应的桶中，count[j]-1是第j个桶的右边界索引</span></span><br><span class="line">--count[j];  <span class="comment">//第j个桶放下一个元素的位置(右边界索引+1)  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意：此时count[i]为第i个桶左边界    </span></span><br><span class="line">    <span class="comment">//从各个桶中收集数据  </span></span><br><span class="line"><span class="keyword">for</span>(i = begin, j = <span class="number">0</span>;i &lt;= end; ++i, ++j)&#123;</span><br><span class="line">        arr[i] = bucket[j]; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="comment">//释放存储空间</span></span><br><span class="line"><span class="built_in">free</span>(bucket);</span><br><span class="line"><span class="comment">//对每个桶再次排序</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;radix;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> p1=begin+count[i];<span class="comment">//第I个桶的左边界</span></span><br><span class="line"><span class="keyword">int</span> p2=begin+count[i+<span class="number">1</span>]<span class="number">-1</span> ;<span class="comment">//第i个桶的右边界</span></span><br><span class="line"><span class="keyword">if</span>(p1&lt;p2&amp;&amp;d&gt;<span class="number">1</span>)&#123;</span><br><span class="line">msdradix_sort(p1, p2, d<span class="number">-1</span>);  <span class="comment">//对第i个桶递归调用，进行基数排序，数位降 1  </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="built_in">cout</span>&lt;&lt;arr[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> msdradix_sort(<span class="number">0</span>,<span class="number">10</span><span class="number">-1</span>,<span class="number">2</span>); <span class="comment">//2表示最高位数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)<span class="built_in">cout</span>&lt;&lt;arr[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>素数筛+埃筛模板</title>
      <link href="/article/%E7%B4%A0%E6%95%B0%E7%AD%9B.html"/>
      <url>/article/%E7%B4%A0%E6%95%B0%E7%AD%9B.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170307/110J2C50-16.jpg" alt=""></p><p><strong>普通的素数筛</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX=<span class="number">1e7</span>+<span class="number">7</span>;<span class="comment">//求MAX范围内的素数</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> su[MAX],cnt;</span><br><span class="line"><span class="keyword">bool</span> isprime[MAX];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(isprime,<span class="number">1</span>,<span class="keyword">sizeof</span>(isprime));<span class="comment">//初始化认为所有数都为素数</span></span><br><span class="line">    isprime[<span class="number">0</span>]=isprime[<span class="number">1</span>]=<span class="number">0</span>;<span class="comment">//0和1不是素数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">2</span>;i&lt;=MAX;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(isprime[i])</span><br><span class="line">            su[cnt++]=i;<span class="comment">//保存素数i</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> j=<span class="number">1</span>;j&lt;cnt&amp;&amp;su[j]*i&lt;MAX;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            isprime[su[j]*i]=<span class="number">0</span>;<span class="comment">//筛掉小于等于i的素数和i的积构成的合数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    prime();</span><br><span class="line">    <span class="comment">//for(long long i=1;i&lt;cnt;i++)</span></span><br><span class="line">     <span class="comment">//   printf("%d  ",su[i]);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>埃筛（线性筛）筛素数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> p[maxn], check[maxn], tot = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    check[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    check[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!check[i])p[++tot]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=tot&amp;&amp;i*p[j]&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            check[i*p[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!(i%p[j]))<span class="keyword">break</span>;<span class="comment">//*****关键</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>求大数的n次方对m取模（欧拉降幂）</title>
      <link href="/article/%E5%A4%A7%E6%95%B0%E6%AC%A1%E6%96%B9%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%A4%A7%E6%95%B0%E6%AC%A1%E6%96%B9%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/1942344b9-5.jpg" alt=""></p><p><strong>求2^n次方对mod取模，n为一个大数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">phi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ret = x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; ++i)</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ret -= ret / i;</span><br><span class="line"><span class="keyword">while</span> (x % i == <span class="number">0</span>)</span><br><span class="line">x /= i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">ret -= ret / x;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">mpow</span><span class="params">(ll a, ll n, ll m)</span> <span class="comment">//a ^ n % m</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">t = (t * a) % m;</span><br><span class="line">a = (a * a) % m, n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line"><span class="comment">//freopen("C:/input.txt", "r", stdin);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">ll n = <span class="number">0</span>, p = phi(MOD);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);<span class="comment">//求2^s次方  s为一个大数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++)</span><br><span class="line">n = (n * <span class="number">10</span> + s[i] - <span class="string">'0'</span>) % p;</span><br><span class="line">n += p - <span class="number">1</span>;</span><br><span class="line">ll ans = mpow(<span class="number">2</span>, n, MOD);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>欧几里得及拓展欧几里得模板</title>
      <link href="/article/%E6%8B%93%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%8F%8A%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97.html"/>
      <url>/article/%E6%8B%93%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%8F%8A%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170307/110J21b5-19.jpg" alt=""></p><p><strong>欧几里得</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> (b==<span class="number">0</span>)?a:gcd(b,a%b);    <span class="comment">//一条语句搞定（三元运算符）装逼，跟上面略有不同，上面做到t=0,这里做到b=0</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>拓展欧几里得</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> (b==<span class="number">0</span>)?a:gcd(b,a%b);    <span class="comment">//一条语句搞定（三元运算符）装逼，跟上面略有不同，上面做到t=0,这里做到b=0</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a / gcd(a,b) * b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x=<span class="number">1</span>;</span><br><span class="line">        y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> r=exgcd(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">int</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-a/b*y;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>拓展欧几里得求整数解个数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> b ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a / gcd(a, b) * b;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">extend_gcd</span><span class="params">(ll a, ll b, ll&amp;x, ll&amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b) &#123;</span><br><span class="line">x = <span class="number">1</span>;</span><br><span class="line">y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">ll xt = <span class="number">0</span>, yt = <span class="number">0</span>;</span><br><span class="line">ll d = extend_gcd(b, a % b, xt, yt);</span><br><span class="line">x = yt;</span><br><span class="line">y = xt - yt * (a / b);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">cal</span><span class="params">(ll a, ll b, ll n)</span> </span>&#123;    <span class="comment">//计算ax+by == n的非负整数解组数</span></span><br><span class="line">ll x = <span class="number">0</span>, y = <span class="number">0</span>, d;</span><br><span class="line">d = extend_gcd(a, b, x, y);</span><br><span class="line"><span class="keyword">if</span> (n % d != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">x *= n / d, y *= n / d;</span><br><span class="line">ll LCM = lcm(a, b);</span><br><span class="line">ll t1 = LCM / a, t2 = LCM / b;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">1</span>) &#123;</span><br><span class="line">ll num = (<span class="number">1</span> - x) / t1;</span><br><span class="line">x += num * t1;</span><br><span class="line">y -= num * t2;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">1</span>) &#123;</span><br><span class="line">y -= t2;</span><br><span class="line">x += t1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y &lt; <span class="number">1</span>) &#123;</span><br><span class="line">ll num = (<span class="number">1</span> - y) / t2;</span><br><span class="line">y += num * t2;</span><br><span class="line">x -= num * t1;</span><br><span class="line"><span class="keyword">if</span> (y &lt; <span class="number">1</span>) &#123;</span><br><span class="line">y += t2;</span><br><span class="line">x -= t1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans = x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (ans) &#123;</span><br><span class="line">ans += min((x - <span class="number">1</span>) / t1, ((n - <span class="number">1</span>) / b - y) / t2);</span><br><span class="line">ans += min((y - <span class="number">1</span>) / t2, ((n - <span class="number">1</span>) / a - x) / t1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线段树模板</title>
      <link href="/article/%E7%BB%84%E5%90%88%E6%95%B0.html"/>
      <url>/article/%E7%BB%84%E5%90%88%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170305/22-1F305005A5643.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> C[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">C[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">1000</span>; j++)</span><br><span class="line">C[i][j] = C[i - <span class="number">1</span>][j - <span class="number">1</span>] + C[i - <span class="number">1</span>][j]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; C[<span class="number">4</span>][<span class="number">3</span>] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浮点型数据高精度乘法</title>
      <link href="/article/%E6%B5%AE%E7%82%B9%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E6%B3%95.html"/>
      <url>/article/%E6%B5%AE%E7%82%B9%E5%9E%8B%E6%95%B0%E6%8D%AE%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/194234D05-10.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*有2堆石子。A B两个人轮流拿，A先拿。每次可以从一堆中取任意个或从2堆中取相同数量的石子，但不可不取。拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出2堆石子的数量，问最后谁能赢得比赛。</span></span><br><span class="line"><span class="comment">例如：2堆石子分别为3颗和5颗。那么不论A怎样拿，B都有对应的方法拿到最后1颗。</span></span><br><span class="line"><span class="comment">Input</span></span><br><span class="line"><span class="comment">第1行：一个数T，表示后面用作输入测试的数的数量。（1 &lt;= T &lt;= 10000)</span></span><br><span class="line"><span class="comment">第2 - T + 1行：每行2个数分别是2堆石子的数量，中间用空格分隔。(1 &lt;= N &lt;= 10^18)</span></span><br><span class="line"><span class="comment">Output</span></span><br><span class="line"><span class="comment">共T行，如果A获胜输出A，如果B获胜输出B。</span></span><br><span class="line"><span class="comment">Input示例</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">3 5</span></span><br><span class="line"><span class="comment">3 4</span></span><br><span class="line"><span class="comment">1 9</span></span><br><span class="line"><span class="comment">Output示例</span></span><br><span class="line"><span class="comment">B</span></span><br><span class="line"><span class="comment">A</span></span><br><span class="line"><span class="comment">A</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//注意：sqrt产生精度问题 double最多存小数点后14位，模拟乘法 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="comment">//0.618033988749894848204586834... 拆成整数放进数组里，</span></span><br><span class="line"><span class="comment">//拆成三部分即可 </span></span><br><span class="line">ll tmp[<span class="number">3</span>] = &#123; <span class="number">618033988</span>,<span class="number">749894848</span>,<span class="number">204586834</span> &#125;;</span><br><span class="line">ll MOD = <span class="number">1e9</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line">ll a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (a &gt; b)&#123;</span><br><span class="line">ll t = a;</span><br><span class="line">a = b;</span><br><span class="line">b = t;</span><br><span class="line">&#125;</span><br><span class="line">ll diff = b - a;</span><br><span class="line"><span class="comment">//把10^18分成两部分10^9</span></span><br><span class="line">ll ta = diff / MOD;</span><br><span class="line">ll tb = diff % MOD;</span><br><span class="line">ll tp = tb * tmp[<span class="number">2</span>];</span><br><span class="line">tp = ta * tmp[<span class="number">2</span>] + tb * tmp[<span class="number">1</span>] + tp / MOD;</span><br><span class="line">tp = ta * tmp[<span class="number">1</span>] + tb * tmp[<span class="number">0</span>] + tp / MOD;</span><br><span class="line">tp = ta * tmp[<span class="number">0</span>] + tp / MOD + diff;</span><br><span class="line"><span class="keyword">if</span> (tp == a)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>整除分块模板</title>
      <link href="/article/%E6%95%B4%E9%99%A4%E5%88%86%E5%9D%97%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E6%95%B4%E9%99%A4%E5%88%86%E5%9D%97%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170305/22-1F305005631293.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,last;i&lt;=n;i=last+<span class="number">1</span>)&#123;</span><br><span class="line">last=n/(n/i);  <span class="comment">//该区间的最后一个数</span></span><br><span class="line">ans+=(last-i+<span class="number">1</span>)*(n/i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博弈论模板</title>
      <link href="/article/%E5%8D%9A%E5%BC%88%E8%AE%BA.html"/>
      <url>/article/%E5%8D%9A%E5%BC%88%E8%AE%BA.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/1942344416-4.jpg" alt=""></p><p><strong>Bash–两人从一堆a个石子里面轮流取石子，每次最多去b个，取到最后一个石子获胜</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b,flag;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (a % (b + <span class="number">1</span>) == <span class="number">0</span>)flag = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Nim–两人从n堆石子中任选一堆取石子，不得不取，可以把一堆直接去玩，拿到最后一颗石子得人获胜</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> stone, tag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;stone);</span><br><span class="line">tag ^= stone;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// tag为0则为后⼿手赢，否则为先⼿手赢 </span></span><br><span class="line"><span class="keyword">if</span> (tag == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>威佐夫博弈–有2堆石子。A B两个人轮流拿，A先拿。每次可以从一堆中取任意个或从2堆中取相同数量的石子，但不可不取。拿到最后1颗石子的人获胜</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> stone, tag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a,&amp;b);</span><br><span class="line"><span class="keyword">if</span> (a &lt; b)swap(a, b);</span><br><span class="line"><span class="keyword">int</span> flag = (a - b)*(<span class="built_in">sqrt</span>(<span class="number">5</span>) + <span class="number">1</span>) / <span class="number">2</span>;  <span class="comment">//黄金分割线</span></span><br><span class="line"><span class="comment">//  如果flag == b，则为后⼿手赢，否则先⼿手赢（奇异局）</span></span><br><span class="line"><span class="keyword">if</span> (flag == b)<span class="built_in">printf</span>(<span class="string">"B\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"A\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SG打表</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//f[]：可以取走的石子个数</span></span><br><span class="line"><span class="comment">//sg[]:0~n的SG函数值</span></span><br><span class="line"><span class="comment">//hash[]:mex&#123;&#125;</span></span><br><span class="line"><span class="keyword">int</span> f[N],sg[N],hash[N];     </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSG</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="built_in">memset</span>(sg,<span class="number">0</span>,<span class="keyword">sizeof</span>(sg));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(hash,<span class="number">0</span>,<span class="keyword">sizeof</span>(hash));</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;f[j]&lt;=i;j++)</span><br><span class="line">            hash[sg[i-f[j]]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=n;j++)    <span class="comment">//求mes&#123;&#125;中未出现的最小的非负整数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(hash[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                sg[i]=j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SG-DFS打表</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> s[<span class="number">110</span>],sg[<span class="number">10010</span>],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SG_dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>(sg[x]!=<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> sg[x];</span><br><span class="line">    <span class="keyword">bool</span> vis[<span class="number">110</span>];</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=s[i])</span><br><span class="line">        &#123;</span><br><span class="line">            SG_dfs(x-s[i]);</span><br><span class="line">            vis[sg[x-s[i]]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> e;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;;i++)</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            e=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> sg[x]=e;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般DFS只在打表解决不了的情况下用，首选打表预处理。</p>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>欧拉函数模板</title>
      <link href="/article/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0.html"/>
      <url>/article/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170307/110J244Z-7.jpg" alt=""></p><p><strong>求一个数的欧拉函数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">phi</span><span class="params">(ll x)</span></span>&#123;<span class="comment">//求1~n与n互质的个数   //   phi(1323)=phi(3^3*7^2)=1323*(1-1/3)*(1-1/7)</span></span><br><span class="line">ll i, ans = x;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i*i &lt;= x; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (x%i == <span class="number">0</span>)</span><br><span class="line">ans = ans - ans / i;</span><br><span class="line"><span class="keyword">while</span>(x%i == <span class="number">0</span>)</span><br><span class="line">x /= i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">ans = ans - ans / x;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递推求欧拉函数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ll _phi(ll x) &#123;<span class="comment">//递推求欧拉函数   利用了欧拉函数的积性 </span></span><br><span class="line"><span class="comment">//如果b质数  a%b！=0  phi(a*b) = phi(a)*b - phi(a)</span></span><br><span class="line"><span class="comment">//当b是质数，a%b==0，phi(a*b)=phi(a)*b </span></span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">ll res = <span class="number">1</span>, t = x;</span><br><span class="line"><span class="keyword">for</span> (ll i = <span class="number">2</span>; i &lt;= (ll)<span class="built_in">sqrt</span>(<span class="number">1.</span>*x); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (t%i == <span class="number">0</span>) &#123;</span><br><span class="line">res *= (i - <span class="number">1</span>);</span><br><span class="line">t /= i;</span><br><span class="line"><span class="keyword">while</span> (t%i == <span class="number">0</span>) &#123;</span><br><span class="line">res *= i;</span><br><span class="line">t /= i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t &gt; <span class="number">1</span>) &#123; res *= (t - <span class="number">1</span>); &#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>递推欧拉函数打表</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ll phi[maxn]; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">phi[i] = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i*i &lt; maxn; i++)&#123;  <span class="comment">//最大素因子表</span></span><br><span class="line"><span class="keyword">if</span> (phi[i] == i)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i * i; j &lt; maxn; j += i)&#123;</span><br><span class="line">phi[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxn; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> ((i / phi[i]) % phi[i] == <span class="number">0</span>)&#123;</span><br><span class="line">phi[i] = phi[i / phi[i]] * phi[i];    <span class="comment">//当b是质数，a%b==0，phi(a*b)=phi(a)*b </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">phi[i] = phi[i / phi[i]] * (phi[i] - <span class="number">1</span>);  <span class="comment">//如果b质数  a%b！=0  phi(a*b) = phi(a)*b - phi(a) </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>杜教筛模板</title>
      <link href="/article/%E6%9D%9C%E6%95%99%E7%AD%9B.html"/>
      <url>/article/%E6%9D%9C%E6%95%99%E7%AD%9B.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/1942345X4-7.jpg" alt=""></p><p><img src="https://img-blog.csdn.net/20180915213717919?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fub3lfYWNlcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2001000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ni 500000004  <span class="comment">//2的逆元</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> mod=<span class="number">0x3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> &amp;x)</span>  <span class="comment">//输入外挂 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> p;p=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> c;c=getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span>(c==<span class="string">'-'</span>)p=<span class="number">-1</span>;c=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) &#123;x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(c<span class="number">-48</span>);c=getchar();&#125;</span><br><span class="line">    x*=p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> mu[N],sum1[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> phi[N],sum2[N];</span><br><span class="line"><span class="keyword">int</span> cnt,prim[N];</span><br><span class="line"><span class="keyword">int</span> e,e1;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span> ,<span class="keyword">int</span>&gt;w,w1;  <span class="comment">//哈希 w用来求phi前缀和  w1用来求miu前缀和 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> maxn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>]=mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prim[++cnt]=i;</span><br><span class="line">            mu[i]=<span class="number">-1</span>;phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prim[j]*i&lt;=maxn;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i*prim[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prim[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prim[j]]=phi[i]*prim[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> mu[i*prim[j]]=-mu[i],phi[i*prim[j]]=phi[i]*(prim[j]<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)sum1[i]=sum1[i<span class="number">-1</span>]+mu[i],sum2[i]=(sum2[i<span class="number">-1</span>]+phi[i])%mod;   <span class="comment">//打一个maxn的phi前缀和表 和miu前缀和表  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">djsmu</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span><span class="comment">//求miu前缀和 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=<span class="number">2000000</span>)<span class="keyword">return</span> sum1[x];</span><br><span class="line">    <span class="keyword">if</span>(w.count(x))<span class="keyword">return</span> w[x];</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;l&lt;=x;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=x/(x/l);</span><br><span class="line">        ans-=(r-l+<span class="number">1l</span>l)*djsmu(x/l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w[x]=ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">djsphi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span><span class="comment">//求phi 前缀和 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=<span class="number">2000000</span>)<span class="keyword">return</span> sum2[x];</span><br><span class="line">    <span class="keyword">if</span>(w1.count(x))<span class="keyword">return</span> w1[x];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=(x %mod* ((x + <span class="number">1</span>) % mod)) % mod*ni%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;l&lt;=x;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=x/(x/l);  <span class="comment">//最后一个分块中的数</span></span><br><span class="line">        ans = (ans - ((r - l + <span class="number">1</span>) % mod*djsphi(x / l)) % mod + mod) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w1[x]=ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t;</span><br><span class="line">    read(t);</span><br><span class="line">    get(<span class="number">2000000</span>);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">long</span> <span class="keyword">long</span> n;</span><br><span class="line">        read(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld %d\n"</span>,djsphi(n),djsmu(n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>BM杜教</title>
      <link href="/article/BM%E6%9D%9C%E6%95%99.html"/>
      <url>/article/BM%E6%9D%9C%E6%95%99.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/1942346141-1.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for (int i=a;i&lt;n;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> per(i,a,n) for (int i=n-1;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(),(x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span> </span>&#123;ll res=<span class="number">1</span>;a%=mod; assert(b&gt;=<span class="number">0</span>); <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;a=a*a%mod;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="comment">// head</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _,n;</span><br><span class="line"><span class="keyword">namespace</span> linear_seq &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10010</span>;</span><br><span class="line">    ll res[N],base[N],_c[N],_md[N];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Md;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(ll *a,ll *b,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        rep(i,<span class="number">0</span>,k+k) _c[i]=<span class="number">0</span>;</span><br><span class="line">        rep(i,<span class="number">0</span>,k) <span class="keyword">if</span> (a[i]) rep(j,<span class="number">0</span>,k) _c[i+j]=(_c[i+j]+a[i]*b[j])%mod;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k+k<span class="number">-1</span>;i&gt;=k;i--) <span class="keyword">if</span> (_c[i])</span><br><span class="line">            rep(j,<span class="number">0</span>,SZ(Md)) _c[i-k+Md[j]]=(_c[i-k+Md[j]]-_c[i]*_md[Md[j]])%mod;</span><br><span class="line">        rep(i,<span class="number">0</span>,k) a[i]=_c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(ll n,VI a,VI b)</span> </span>&#123; <span class="comment">// a 系数 b 初值 b[n+1]=a[0]*b[n]+...</span></span><br><span class="line"><span class="comment">//        printf("%d\n",SZ(b));</span></span><br><span class="line">        ll ans=<span class="number">0</span>,pnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> k=SZ(a);</span><br><span class="line">        assert(SZ(a)==SZ(b));</span><br><span class="line">        rep(i,<span class="number">0</span>,k) _md[k<span class="number">-1</span>-i]=-a[i];_md[k]=<span class="number">1</span>;</span><br><span class="line">        Md.clear();</span><br><span class="line">        rep(i,<span class="number">0</span>,k) <span class="keyword">if</span> (_md[i]!=<span class="number">0</span>) Md.push_back(i);</span><br><span class="line">        rep(i,<span class="number">0</span>,k) res[i]=base[i]=<span class="number">0</span>;</span><br><span class="line">        res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> ((<span class="number">1l</span>l&lt;&lt;pnt)&lt;=n) pnt++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> p=pnt;p&gt;=<span class="number">0</span>;p--) &#123;</span><br><span class="line">            mul(res,res,k);</span><br><span class="line">            <span class="keyword">if</span> ((n&gt;&gt;p)&amp;<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i=k<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) res[i+<span class="number">1</span>]=res[i];res[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">                rep(j,<span class="number">0</span>,SZ(Md)) res[Md[j]]=(res[Md[j]]-res[k]*_md[Md[j]])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        rep(i,<span class="number">0</span>,k) ans=(ans+res[i]*b[i])%mod;</span><br><span class="line">        <span class="keyword">if</span> (ans&lt;<span class="number">0</span>) ans+=mod;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">VI <span class="title">BM</span><span class="params">(VI s)</span> </span>&#123;</span><br><span class="line">        VI C(1,1),B(1,1);</span><br><span class="line">        <span class="keyword">int</span> L=<span class="number">0</span>,m=<span class="number">1</span>,b=<span class="number">1</span>;</span><br><span class="line">        rep(n,<span class="number">0</span>,SZ(s)) &#123;</span><br><span class="line">            ll d=<span class="number">0</span>;</span><br><span class="line">            rep(i,<span class="number">0</span>,L+<span class="number">1</span>) d=(d+(ll)C[i]*s[n-i])%mod;</span><br><span class="line">            <span class="keyword">if</span> (d==<span class="number">0</span>) ++m;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span>*L&lt;=n) &#123;</span><br><span class="line">                VI T=C;</span><br><span class="line">                ll c=mod-d*powmod(b,mod<span class="number">-2</span>)%mod;</span><br><span class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(<span class="number">0</span>);</span><br><span class="line">                rep(i,<span class="number">0</span>,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</span><br><span class="line">                L=n+<span class="number">1</span>-L; B=T; b=d; m=<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ll c=mod-d*powmod(b,mod<span class="number">-2</span>)%mod;</span><br><span class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(<span class="number">0</span>);</span><br><span class="line">                rep(i,<span class="number">0</span>,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</span><br><span class="line">                ++m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">gao</span><span class="params">(VI a,ll n)</span> </span>&#123;</span><br><span class="line">        VI c=BM(a);</span><br><span class="line">        c.erase(c.begin());</span><br><span class="line">        rep(i,<span class="number">0</span>,SZ(c)) c[i]=(mod-c[i])%mod;</span><br><span class="line">        <span class="keyword">return</span> solve(n,c,VI(a.begin(),a.begin()+SZ(c)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line">        v.push_back(<span class="number">2</span>);<span class="comment">//前几项</span></span><br><span class="line">        v.push_back(<span class="number">4</span>);</span><br><span class="line">        v.push_back(<span class="number">6</span>);</span><br><span class="line">        v.push_back(<span class="number">8</span>);</span><br><span class="line">        v.push_back(<span class="number">10</span>);</span><br><span class="line">        v.push_back(<span class="number">12</span>);</span><br><span class="line">        <span class="comment">//输入n ,输出第n项的值</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,linear_seq::gao(v,n<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>log(n)分解一个数的所有素因子模板</title>
      <link href="/article/%E5%88%86%E8%A7%A3%E7%B4%A0%E5%9B%A0%E5%AD%90.html"/>
      <url>/article/%E5%88%86%E8%A7%A3%E7%B4%A0%E5%9B%A0%E5%AD%90.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170314/1942341320-8.jpg" alt=""></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//n为要分解的数</span></span><br><span class="line"><span class="comment">//Fac数组存所有质因子</span></span><br><span class="line"><span class="comment">//cnt为质因子个数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">primeFactor</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        Fac[cnt++]=<span class="number">2</span>;</span><br><span class="line">        n/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 经过第二步, 此时 n 一定为奇数</span></span><br><span class="line">    <span class="comment">// 并且不存在偶数的素因子</span></span><br><span class="line">    <span class="comment">// 所以我们可以跳过所有偶数 (i += 2)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="built_in">sqrt</span>(n);i+=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            Fac[cnt++]=i;</span><br><span class="line">            n/=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//此处为了防止是一个大于 2 的素数</span></span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">2</span>)Fac[cnt++]=n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>最长循环节模板</title>
      <link href="/article/%E6%9C%80%E9%95%BF%E5%BE%AA%E7%8E%AF%E8%8A%82.html"/>
      <url>/article/%E6%9C%80%E9%95%BF%E5%BE%AA%E7%8E%AF%E8%8A%82.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170305/22-1F305005H4203.jpg" alt=""></p><p><strong>正整数k的倒数1/k，写为10进制的小数如果为无限循环小数，</strong><br><strong>则存在一个循环节，求&lt;=n的数中，倒数循环节长度最长的那个数，</strong><br><strong>假如存在多个最优的答案，输出所有答案中最大的那个数。</strong></p><ul><li>如果1&lt;=b&lt;a,a没有2或5的质因子，并且a与b互质，那么b/a 的循环节位数恰好等于e 满足min(10^e≡1(moda))),e是正整数。</li><li>如果1&lt;=b&lt;a,a没有2或5的质因子，并且a与b互质，那么b/a 的循环节位数必整除ϕ(a)。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,ans=<span class="number">1</span>,maxx=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> tmp = i, tmp1 = <span class="number">1</span>, tmp2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (tmp % <span class="number">2</span> == <span class="number">0</span>)tmp /= <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (tmp % <span class="number">5</span> == <span class="number">0</span>)tmp /= <span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">1</span>)tmp2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">tmp1 = tmp1 * <span class="number">10</span> % tmp;</span><br><span class="line">++tmp2;</span><br><span class="line">&#125; <span class="keyword">while</span> (tmp1 != <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tmp2 &gt; maxx) &#123;</span><br><span class="line">maxx = tmp2;</span><br><span class="line">ans = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>置顶文章示例</title>
      <link href="/article/article-top.html"/>
      <url>/article/article-top.html</url>
      
        <content type="html"><![CDATA[<p>【前言】这是置顶文章的示例。在<code>&lt;!-- more --&gt;</code>标签前的内容都会显示在首页的文章列表的摘录中，内容不能太多，建议在一至两段后即可添加more标签。</p><h2 id="置顶文章的顶部参数设置"><a href="#置顶文章的顶部参数设置" class="headerlink" title="置顶文章的顶部参数设置"></a>置顶文章的顶部参数设置</h2><ul><li><code>img:</code> 设置了首页列表左侧显示的图片，使用默认的置顶图片即可。如果需要替换，请进入博客根目录下的<code>source\img</code>文件夹下进行替换。</li></ul><p><code>topimg:</code> 设置是否显示右侧的置顶标志，true为显示，false为不显示。</p><p><code>top:</code> 设置置顶顺序，当top的值越大时，文章会显示在首页列表最上方。若无特殊需求，建议不要在其他文章中设置top参数，以免导致文章顺序排列错误。</p><h2 id="置顶文章的内容建议"><a href="#置顶文章的内容建议" class="headerlink" title="置顶文章的内容建议"></a>置顶文章的内容建议</h2><p>可将某篇特别的文章进行置顶展示或者专门用来编辑各种公告、通知、留言等内容。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Hexo的入门教程及Next主题配置</title>
      <link href="/article/Hexo%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html"/>
      <url>/article/Hexo%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/181025/22025KZ4-6.jpg" alt=""></p><h2 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h2><h1 id="Hexo的入门教程及Next主题配置"><a href="#Hexo的入门教程及Next主题配置" class="headerlink" title="Hexo的入门教程及Next主题配置"></a>Hexo的入门教程及Next主题配置</h1><h2 id="Node及Hexo安装"><a href="#Node及Hexo安装" class="headerlink" title="Node及Hexo安装"></a>Node及Hexo安装</h2><p>hexo是什么？简单的说，就是一个静态博客的生成工具也可以说是一个搭建静态博客的框架，我<a href="anoyer.cn">这个博客</a>就是就是基于hexo生成的。9月份把这个博客用hexo折腾出来，前几天ACM区域赛事结束了，所以想记录下来折腾的过程，留着以后备用。这里只说如何在windows下成功安装hexo并运行起来，关于主题以及配置不做记录。</p><p><strong>安装Node.js</strong></p><p>因为Hexo是基于Node.js的，所以必须先安装Node，所以请<a href="https://nodejs.org/en/" target="_blank" rel="noopener">点击这里</a>去下载适合自己windows版本的Node吧。</p><p>（注意：在安装步骤里Custom Setup这一步记得选<strong>Add to PATH</strong>）。</p><p>安装好以后，打开<code>CMD</code>，(<del>那对于小白来说如何打开<code>CMD</code>呢？<code>win+R</code>然后输入<code>cmd</code>，点击确定，这样<code>CMD</code>就打开了.</del>)，输入<code>npm -v</code>,如果出现版本号，那说明安装成功了，并且环境变量也配置好了，如果是未知命令那就要配置下环境变量。</p><p><strong>安装Hexo</strong></p><p>还是打开<code>CMD</code>然后输入安装hexo的命令：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这一步需要一点时间，请稍等一会，让他安装好。</p><p>安装完成后在<code>CMD</code>里输入<code>hexo -v</code>出现一系列版本号就是安装成功啦<del>QAQ</del></p><p><img src="https://i.loli.net/2018/11/26/5bfb5a150c82b.png" alt=""></p><p>到这里，就要恭喜你成功完成了Hexo的安装了。</p><h2 id="生成一个博客"><a href="#生成一个博客" class="headerlink" title="生成一个博客"></a>生成一个博客</h2><p><strong>初始化个人博客仓库</strong></p><p>在电脑中建一个文件夹（路径根据自己爱好，我是在E盘里建了一个名为Blog的文件夹），我在这里命名为Blog吧。</p><p>然后通过<code>CMD</code>的<code>cd</code>到这个文件夹下，运行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>这个时候会将这个文件夹初始化为一个博客专用文件夹，生成过程稍微要点时间，耐心等待。</p><p>然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>之后npm将会自动安装你需要的组件，只需要等待npm操作即可。</p><p><strong>开始生成博客</strong></p><p>继续操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/26/5bfb5c8b6a062.jpg" alt=""></p><p>然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>会出现：</p><p><img src="https://i.loli.net/2018/11/26/5bfb5d1e524b6.png" alt=""></p><p>在浏览器里打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，你将会看到：</p><p><img src="http://ww4.sinaimg.cn/large/9fe4afa0gw1falkk5mnsvj211y0lcten.jpg" alt=""></p><p>到这里你已经有了一个属于你的本地Blog了。</p><h2 id="Coding部署"><a href="#Coding部署" class="headerlink" title="Coding部署"></a>Coding部署</h2><p>why不是Github，因为我个人认为搭建一个个人博客用Github会有诸多不便。</p><p>比如：1.搭建一个博客肯定就要往百度推送，不然别人搜不到你的博客有什么意思。而如果部署Github的话，百度无法抓取blog链接。2.Coding服务器在中国，所以Blog加载速度比GitHub快很多。</p><p><strong>注册Coding</strong></p><p>现在我们的博客已经在本地搭建完成，那要怎么才能让别人看到我们的博客呢？我们选择把我们的静态网页的代码发到coding上去，然后由coding负责将我们的代码展现出来。注册步骤比较简单，<a href="https://dev.tencent.com/user?from=coding" target="_blank" rel="noopener">点击这里</a>去注册。需要声明的是，如果你以后不想绑定独立域名，那么coding给你的域名默认为 <code>仓库名.coding.me</code></p><p>而你需要建立的仓库名需要与你的用户名保持一致，不然会出现问题，所以慎重起名字。然后填好个人信息，就会升级为银牌会员（能拥有5个私人仓库）。</p><p><strong>新建仓库</strong></p><p>在coding上面新建仓库</p><p><img src="https://i.loli.net/2018/11/26/5bfb606e733fd.png" alt=""></p><p>项目名称写成你的用户名，比如我的仓库名字为Blog,然后描述写不写都行，自己选择公有还是私有，然后直接选择创建项目。</p><p><strong>配置ssh</strong></p><p>这个过程的目的是在你的电脑和coding之间建立联系的通道，不然谁都能往上面增加内容，那你的博客岂不乱套了？<br>首先查看目录C:Users\用户名<br>有没有.ssh目录,如果没有，cmd在本地blog路径下,输入命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;这里填上你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>然后按3个回车。<br>再检查有没有.ssh目录，打开目录，你会看到出现3个文件：</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-932d836ffeea17da" alt="img"></p><p>然后用notepad++打开id——rsa.pub(这个是公钥，不带pub的是私钥，这个不要泄露出去），你会开到一堆字母，全选复制下来。<br>下面打来浏览器，进入你刚才创建的仓库，设置-部署公钥-新建部署公钥，公钥名称可以不填，将刚才复制的公钥粘贴在公钥内容里面。把授予权限打上勾！，然后添加就可以了。</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-ecb651235adacd32..g!&amp;rf=viewer_4" alt="img"></p><p><strong>站点配置</strong></p><p>下面我们进行博客的站点配置，打开Blog文件夹，你会看到这样的文件</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-757829fcd92f6aa2..8!&amp;rf=viewer_4" alt=""></p><p>这个文件的意思就是对你的博客进行一些设置，比如的你的用户名等等，记住这个文件特别重要！，以后你进行配置都要在这里进行，下面我们用notepad++打开它，这是你的网站信息</p><p><img src="https://i.loli.net/2018/11/26/5bfb61b302f16.png" alt=""></p><p>要是不懂英文就查字典写，注意：名称后面要放空格，不然会出错！！！。然后滑倒最下面，填写你的git地址，这一步特别关键，你可以照我这个写，同样，别忘了空格！</p><p><img src="https://upload-images.jianshu.io/upload_images/1259326-da7d3697439b88f6" alt=""></p><p>（本张图片来自vzhiwen，因为我Blog修改了域名，后面会讲到）</p><p>然后点击文件保存</p><p><strong>上传代码</strong></p><p>在Blog文件路径里，依次输入下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>如果提及不上去，就下载一个插件，在命令行里输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>再次提交就可以了</p><p>clean表示清除缓存，d是deploy的缩写，意思是将代码推送到coding，然后等待一些时间，第一次需要输入coding的用户名和密码或者询问你yes/no，按照说明输入即可，出现下面的字样说明推送完毕</p><p><strong>打开pages服务</strong></p><p>打开浏览器，进入coding，代码-pages服务，部署来源选择master，然后可以选择https访问（）这个就是打开你网页的时候地址栏前面显示的绿锁头，后面写着安全，如果不选择，就会出现叹号，不过影响不大。<br>现在，你的博客已经基本配置完成，现在就打开你的浏览器，输入你的网址试试吧！</p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>如果你感觉默认Blog主题可以通过这一块来学习，如果给自己Blog换个主题。</p><p><strong>主题安装</strong></p><p>为了使博客不太难看，我们需要安装一个主题，切换至刚刚生成的Hexo 目录，安装主题<br>$ cd Blog<br>$ git clone <a href="https://link.jianshu.com?t=https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p><p>如果没有Git可以去下一个，百度有一堆</p><p>这里选了一个极简的主题，也是Hexo众多主题中最受欢迎的一个。上面出现的喵神的主题 在<a href="https://link.jianshu.com?t=https://github.com/monniya/hexo-theme-new-vno" target="_blank" rel="noopener">这里</a>。Hexo也有<a href="https://link.jianshu.com?t=https://hexo.io/themes/" target="_blank" rel="noopener">更多主题</a>供你选择。</p><p><strong>启用主题：</strong></p><p>在你的站点配置文件<code>_config.yml</code>里修改<code></code>theme: next //刚刚安装主题的，名字</p><p><strong>主题配置：</strong></p><p><img src="http://ww4.sinaimg.cn/large/9fe4afa0gw1fan5zwhgvij20lf0bxaaq.jpg" alt=""></p><p>这是 NexT 默认的 Scheme —— Muse ，现在，你已经成功安装并启用了 NexT 主题。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。 4）<strong>主题设定</strong> 选择 Scheme Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Muse</span> <span class="selector-tag">-</span> 默认 <span class="selector-tag">Scheme</span>，这是 <span class="selector-tag">NexT</span> 最初的版本，黑白主调，大量留白</span><br><span class="line"><span class="selector-tag">Mist</span> <span class="selector-tag">-</span> <span class="selector-tag">Muse</span> 的紧凑版本，整洁有序的单栏外观</span><br><span class="line"><span class="selector-tag">Pisces</span> <span class="selector-tag">-</span> 双栏 <span class="selector-tag">Scheme</span>，小家碧玉似的清新</span><br><span class="line"><span class="selector-tag">Scheme</span> 的切换通过更改 主题配置文件，搜索 <span class="selector-tag">scheme</span> 关键字。 你会看到有三行 <span class="selector-tag">scheme</span> 的配置，将你需用启用的 <span class="selector-tag">scheme</span> 前面</span><br></pre></td></tr></table></figure><p>注释 # 即可。 选择 Pisce Scheme</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><p><strong>写文章</strong></p><p>所有基础框架都已经创建完成，接下来可以开始写你的第一篇博客了<br>在Blog/source/_posts下创建你的第一个博客吧，例如，创建一个名为FirstNight.md的文件，用Markdown大肆发挥吧，注意保存。<br>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: First Night</span><br><span class="line">---</span><br><span class="line">&gt; 我有一头**小毛驴**，可是我从来都不骑。</span><br></pre></td></tr></table></figure><p>然后本体测试看看，输入<code>hexo s</code></p><p>测试服务启动，你可以在浏览器中输入<a href="https://link.jianshu.com/?t=https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> 访问了</p><p>如果测试没问题，就可以上传到Coding了</p><p>依次输入下面命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>然后你就可以再浏览器里输入你的Coding项目链接访问了</p><h2 id="标签-分类-关于-标签图标-侧边栏菜单"><a href="#标签-分类-关于-标签图标-侧边栏菜单" class="headerlink" title="标签 分类 关于 标签图标 侧边栏菜单"></a>标签 分类 关于 标签图标 侧边栏菜单</h2><p><strong>创建文章</strong></p><p>在Blog路径下输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名称&quot;</span><br></pre></td></tr></table></figure><p>生产后会提示你文件路径，一般在Blog/source/_posts下</p><p>文章基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: CentOS7下Tomcat启动慢的原因及解决方案</span><br><span class="line">date: 2017-12-02 21:01:24</span><br><span class="line">comments: true #是否可评论</span><br><span class="line">toc: true #是否显示文章目录</span><br><span class="line">categories: &quot;云服务器&quot; #分类</span><br><span class="line">tags:   #标签</span><br><span class="line">- centOS</span><br><span class="line">- tomcat</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>创建标签</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2017-12-02 21:01:24</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure><p><strong>创建分类</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: categories</span><br><span class="line">date: 2017-12-02 21:01:24</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>标签图标实现效果图</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-9f1817d2d7627f7a.png?imageMogr2/auto-orient/" alt=""></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><p><strong>设置菜单：</strong></p><p><strong>设置 菜单</strong> 菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。 编辑主题配置文件，修改以下内容： 设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。 菜单示例配置(在主题配置文件中)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  #about: /about</span><br><span class="line">  #categories: /categories</span><br><span class="line">  tags: /tags</span><br><span class="line">  #commonweal: /404.html</span><br></pre></td></tr></table></figure><p>若你的站点运行在子目录中，请将链接前缀的 / 去掉 NexT 默认的菜单项有（标注 的项表示需要手动创建这个页面）：</p><table><thead><tr><th style="text-align:center">键值</th><th style="text-align:center">设定值</th><th style="text-align:center">显示文本（简体中文）</th></tr></thead><tbody><tr><td style="text-align:center">home</td><td style="text-align:center">home: /</td><td style="text-align:center">主页</td></tr><tr><td style="text-align:center">archives</td><td style="text-align:center">archives: /archives</td><td style="text-align:center">归档页</td></tr><tr><td style="text-align:center">categories</td><td style="text-align:center">categories: /categories</td><td style="text-align:center">分类页</td></tr><tr><td style="text-align:center">tags</td><td style="text-align:center">tags: /tags</td><td style="text-align:center">标签页</td></tr><tr><td style="text-align:center">about</td><td style="text-align:center">about: /about</td><td style="text-align:center">关于页面</td></tr><tr><td style="text-align:center">commonweal</td><td style="text-align:center">commonweal: /404.html</td><td style="text-align:center">公益 404</td></tr></tbody></table><p>设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。 以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 languages/zh-Hans.yml，在 menu 字段下添加一项：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">menu</span>:</span><br><span class="line">  <span class="selector-tag">home</span>: 首页</span><br><span class="line">  <span class="selector-tag">archives</span>: 归档</span><br><span class="line">  <span class="selector-tag">categories</span>: 分类</span><br><span class="line">  <span class="selector-tag">tags</span>: 标签</span><br><span class="line">  <span class="selector-tag">about</span>: 关于</span><br><span class="line">  <span class="selector-tag">search</span>: 搜索</span><br><span class="line">  <span class="selector-tag">commonweal</span>: 公益404</span><br><span class="line">  <span class="selector-tag">something</span>: 有料</span><br></pre></td></tr></table></figure><p>设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。 菜单图标配置示例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  <span class="comment"># Icon Mapping.</span></span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: archive</span><br><span class="line">  commonweal: heartbeat</span><br></pre></td></tr></table></figure><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，NexT 将会使用 作为图标。 请注意键值（如 home）的大小写要严格匹配 7）<strong>侧栏</strong> 默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 主题配置文件 中的 sidebar 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。 设置侧栏的位置，修改 sidebar.position 的值，支持的选项有：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">left - 靠左放置</span><br><span class="line">right - 靠右放置</span><br></pre></td></tr></table></figure><p>目前仅 Pisces Scheme 支持 position 配置。影响版本5.0.0及更低版本。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  position: left</span><br></pre></td></tr></table></figure><p>设置侧栏显示的时机，修改 sidebar.display 的值，支持的选项有：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post - 默认行为，在文章页面（拥有目录列表）时显示</span><br><span class="line">always - 在所有页面中都显示</span><br><span class="line">hide - 在所有页面中都隐藏（可以手动展开）</span><br><span class="line">remove - 完全移除</span><br><span class="line">sidebar:</span><br><span class="line">  display: post</span><br></pre></td></tr></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>搜索功能真心好用，当文章多起来的时候，标签提供的作用已经很少了，只能简单索引，搜索却能精确查找，这里我用的依旧是最简单的本地站内搜索。</p><p><strong>安装插件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p><strong>修改 站点配置 文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p><strong>修改 主题配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><h2 id="头像-（头像旋转）"><a href="#头像-（头像旋转）" class="headerlink" title="头像  （头像旋转）"></a>头像 （头像旋转）</h2><p><strong>实现效果图：</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-e035ce8ac8ea0b5b.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/138/format/webp" alt=""></p><p><strong>设置头像</strong></p><p>编辑 主题配置文件_config.yml</p><p>， 修改字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar</span><br></pre></td></tr></table></figure><p>， 值设置成头像的链接地址。其中，头像的链接地址可以是</p><table><thead><tr><th>地址</th><th>值</th></tr></thead><tbody><tr><td>完整的互联网</td><td><code>URI</code>:<code>http://example.com/avatar.png</code></td></tr><tr><td>站点内的地址</td><td>将头像放置主题目录下的<code>source/uploads/</code>（新建 <code>uploads</code> 目录若不存在） 配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/ 目录下</code>, 配置为：<code>avatar: /images/avatar.png</code></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: http://example.com/avatar.png</span><br></pre></td></tr></table></figure><p><strong>实现头像旋转：</strong></p><p>打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: <span class="number">0</span> auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  border-radius: <span class="number">80</span>px;</span><br><span class="line">  -webkit-border-radius: <span class="number">80</span>px;</span><br><span class="line">  -moz-border-radius: <span class="number">80</span>px;</span><br><span class="line">  box-shadow: inset <span class="number">0</span> <span class="number">-1</span>px <span class="number">0</span> <span class="comment">#333sf;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></span><br><span class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  -webkit-transition: -webkit-transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">  transition: transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img:hover &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></span><br><span class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></span><br><span class="line"><span class="comment">  animation-play-state:paused;*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  -webkit-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">  -moz-transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">  transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(<span class="number">0</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100</span>% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(<span class="number">-360</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    -moz-transform: rotateZ(<span class="number">0</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100</span>% &#123;</span><br><span class="line">    -moz-transform: rotateZ(<span class="number">-360</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  <span class="number">0</span>% &#123;</span><br><span class="line">    transform: rotateZ(<span class="number">0</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100</span>% &#123;</span><br><span class="line">    transform: rotateZ(<span class="number">-360</span>deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="友链"><a href="#友链" class="headerlink" title="友链"></a>友链</h2><p>编辑主题配置文件</p><p>添加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># title</span></span><br><span class="line">links_title: Links</span><br><span class="line">links:</span><br><span class="line">  MacTalk: http:<span class="comment">//macshuo.com/</span></span><br><span class="line">  Title: http:<span class="comment">//example.com/</span></span><br></pre></td></tr></table></figure><h2 id="社交网站"><a href="#社交网站" class="headerlink" title="社交网站"></a>社交网站</h2><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在主题配置文件</p><p>中。</p><p>1、 链接放置在 <code>social</code>字段下，一行一个链接。其键值格式是 <code>显示文本: 链接地址</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line">social:</span><br><span class="line">  GitHub: https:<span class="comment">//github.com/your-user-name</span></span><br><span class="line">  Twitter: https:<span class="comment">//twitter.com/your-user-name</span></span><br><span class="line">  微博: http:<span class="comment">//weibo.com/your-user-name</span></span><br><span class="line">  豆瓣: http:<span class="comment">//douban.com/people/your-user-name</span></span><br><span class="line">  知乎: http:<span class="comment">//www.zhihu.com/people/your-user-name</span></span><br><span class="line">  <span class="comment"># 等等12345678</span></span><br></pre></td></tr></table></figure><p>2、 设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键:<code>Font Awesome</code>图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是<code>Font Awesome</code>图标的名字（不必带 fa- 前缀）。 <code>enable</code> 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social Icons</span></span><br><span class="line">social_icons:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  <span class="comment"># Icon Mappings</span></span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  微博: weibo</span><br></pre></td></tr></table></figure><h2 id="浏览量-访客量-阅读数"><a href="#浏览量-访客量-阅读数" class="headerlink" title="浏览量 访客量  阅读数"></a>浏览量 访客量 阅读数</h2><p>打开文件： <code>themes/next/_config.yml</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show PV/UV of the website/page with busuanzi.</span></span><br><span class="line"><span class="comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">busuanzi_count:</span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site</span></span><br><span class="line">  site_uv: <span class="keyword">true</span></span><br><span class="line">  site_uv_header: &lt;i class="fa fa-user"&gt;&lt;/i&gt; 访问人数</span><br><span class="line">  site_uv_footer: 人</span><br><span class="line">  <span class="comment"># custom pv span for the whole site</span></span><br><span class="line">  site_pv: <span class="keyword">true</span></span><br><span class="line">  site_pv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; 总访问量</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  <span class="comment"># custom pv span for one page only</span></span><br><span class="line">  page_pv: <span class="keyword">true</span></span><br><span class="line">  page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; 阅读数</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><p>相关操作：</p><ol><li>enable: true</li><li>添加相关中文说明，不添加也行。</li></ol><p><strong>修改统计规则及busuanzi失效修复</strong></p><p>打开<code>\themes\next\layout_partials\footer.swig</code>文件,在copyright前加上画红线这句话：</p><p>代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后再合适的位置添加显示统计的代码，如图：</p><p>代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="powered-by"&gt;</span><br><span class="line">&lt;i class="fa fa-user-md"&gt;&lt;/i&gt;&lt;span id="busuanzi_container_site_uv"&gt;</span><br><span class="line">  本站访客数:&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在这里有两中不同计算方式的统计代码：</p><ol><li><p>pv的方式，单个用户连续点击n篇文章，记录n次访问量</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id="busuanzi_container_site_pv"&gt;</span><br><span class="line">    本站总访问量&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></li></ol><p>uv的方式，单个用户连续点击n篇文章，只记录1次访客数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id="busuanzi_container_site_uv"&gt;</span><br><span class="line">  本站总访问量&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>添加之后再执行hexo d -g，然后再刷新页面就能看到效果</p><h2 id="字数统计-阅读时长-总字数"><a href="#字数统计-阅读时长-总字数" class="headerlink" title="字数统计 阅读时长 总字数"></a>字数统计 阅读时长 总字数</h2><p>在站点的根目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>post_wordcount</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: <span class="keyword">true</span></span><br><span class="line">  <span class="comment">#字数统计</span></span><br><span class="line">  wordcount: <span class="keyword">true</span></span><br><span class="line">  <span class="comment">#预览时间</span></span><br><span class="line">  min2read: <span class="keyword">true</span></span><br><span class="line">  <span class="comment">#总字数,显示在页面底部</span></span><br><span class="line">  totalcount: <span class="keyword">true</span></span><br><span class="line">  separated_meta: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><h2 id="文章发表-更新时间"><a href="#文章发表-更新时间" class="headerlink" title="文章发表 更新时间"></a>文章发表 更新时间</h2><p>打开主题配置文件 <code>_config.yml</code> ,搜索关键字 <code>updated_at</code> 设置为 <code>true</code> ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line">post_meta:</span><br><span class="line">  item_text: <span class="keyword">true</span></span><br><span class="line">  created_at: <span class="keyword">true</span></span><br><span class="line">  updated_at: ture</span><br><span class="line">  categories: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p><del>编辑文章,增加关键字<code>updated</code></del>（next可以根据文章改变时间自动更改）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: layout</span><br><span class="line">title: 关于</span><br><span class="line">date: <span class="number">2017</span><span class="number">-08</span><span class="number">-18</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">18</span></span><br><span class="line">updated: <span class="number">2017</span><span class="number">-09</span><span class="number">-05</span> <span class="number">20</span>:<span class="number">18</span>:<span class="number">54</span> <span class="comment">#手动添加更新时间,不加这一行会自动更新</span></span><br></pre></td></tr></table></figure><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p>在 themes/next/source/css/_custom/custom.styl 中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    background:url(/images/bg.jpg);</span><br><span class="line">    background-size:cover;</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态粒子"><a href="#动态粒子" class="headerlink" title="动态粒子"></a>动态粒子</h2><p><strong>修改<code>_layout.swig</code></strong></p><p>打开 <code>next/layout/_layout.swig</code><br>在 <code>&lt; /body&gt;</code>之前添加代码(注意不要放在&lt; /head&gt;的后面)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><strong>修改配置文件</strong></p><p>打开 <code>/next/_config.yml</code>,在里面添加如下代码：(可以放在最后面)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>到此就结束了，运行 <code>hexo clean</code>，然后运行 <code>hexo g</code>,然后运行 <code>hexo s</code>，最后打开浏览器在浏览器的地址栏输入 <code>localhost:4000</code> 就能看到效果了\（￣︶￣）/</p><p><strong>如果你感觉默认的线条太多的话</strong></p><p><strong>可以这么设置====&gt;</strong></p><p>在上一步修改 <code>_layout.swig</code>中，把刚才的这些代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">color=<span class="string">"0,0,255"</span> opacity=<span class="string">'0.7'</span> zIndex=<span class="string">"-2"</span> count=<span class="string">"99"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br></pre></td></tr></table></figure><p><strong>配置项说明</strong></p><ul><li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li><li><code>count</code>: 线条的总数量, 默认: <code>150</code></li><li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li></ul><h2 id="加载动画"><a href="#加载动画" class="headerlink" title="加载动画"></a>加载动画</h2><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>pace</code> ,设置为 <code>true</code> ,可以更换加载样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">Progress</span> <span class="selector-tag">bar</span> <span class="selector-tag">in</span> <span class="selector-tag">the</span> <span class="selector-tag">top</span> <span class="selector-tag">during</span> <span class="selector-tag">page</span> <span class="selector-tag">loading</span>.</span><br><span class="line"><span class="selector-tag">pace</span>: <span class="selector-tag">true</span></span><br><span class="line"># <span class="selector-tag">Themes</span> <span class="selector-tag">list</span>:</span><br><span class="line"><span class="selector-id">#pace-theme-big-counter</span></span><br><span class="line"><span class="selector-id">#pace-theme-bounce</span></span><br><span class="line"><span class="selector-id">#pace-theme-barber-shop</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-atom</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-circle</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-radar</span></span><br><span class="line"><span class="selector-id">#pace-theme-center-simple</span></span><br><span class="line"><span class="selector-id">#pace-theme-corner-indicator</span></span><br><span class="line"><span class="selector-id">#pace-theme-fill-left</span></span><br><span class="line"><span class="selector-id">#pace-theme-flash</span></span><br><span class="line"><span class="selector-id">#pace-theme-loading-bar</span></span><br><span class="line"><span class="selector-id">#pace-theme-mac-osx</span></span><br><span class="line"><span class="selector-id">#pace-theme-minimal</span></span><br><span class="line"># <span class="selector-tag">For</span> <span class="selector-tag">example</span></span><br><span class="line"># <span class="selector-tag">pace_theme</span>: <span class="selector-tag">pace-theme-center-simple</span></span><br><span class="line"><span class="selector-tag">pace_theme</span>: <span class="selector-tag">pace-theme-flash</span> #替换更换样式</span><br></pre></td></tr></table></figure><h2 id="透明背景"><a href="#透明背景" class="headerlink" title="透明背景"></a>透明背景</h2><p><strong>内容板块透明</strong></p><p>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code> 文件 <code>.content-wrap</code> 标签下 <code>background: white</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p><strong>菜单栏背景</strong></p><p>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code> 文件 <code>.header-inner</code> 标签下 <code>background: white</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p><strong>站点概况背景</strong></p><p>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_sidebar.styl</code> 文件 <code>.sidebar-inner</code> 标签下 <code>background: white</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p>然后修改博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code> 文件 <code>.sidebar</code> 标签下 <code>background: $body-bg-color</code>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: rgba(255,255,255,0.7); //0.7是透明度</span><br></pre></td></tr></table></figure><p><strong>按钮背景</strong></p><p>博客根目录 <code>themes\next\source\css\_common\components\post\post-button.styl</code> 同上修改对应位置为 <code>background: transparent;</code></p><h2 id="修改底部Hexo和主题信息"><a href="#修改底部Hexo和主题信息" class="headerlink" title="修改底部Hexo和主题信息"></a>修改底部Hexo和主题信息</h2><ol><li>在图标库中找到你自己喜欢的图标, 修改桃心,打开 <code>themes/next_config.yml</code> ,搜索关键字 <code>authoricon</code>,替换图标名</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">icon</span> <span class="selector-tag">between</span> <span class="selector-tag">year</span> <span class="selector-tag">and</span> <span class="selector-tag">author</span> @<span class="keyword">Footer</span></span><br><span class="line">authoricon: id-card</span><br></pre></td></tr></table></figure><p>2.隐藏网页底部 <code>Hexo 强力驱动</code></p><p>打开主题配置文件,搜索关键字 <code>copyright</code> ，如下:(或者直接删除)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">Footer</span> `<span class="selector-tag">powered-by</span>` <span class="selector-tag">and</span> `<span class="selector-tag">theme-info</span>` <span class="selector-tag">copyright</span></span><br><span class="line"><span class="selector-tag">copyright</span>: <span class="selector-tag">false</span></span><br></pre></td></tr></table></figure><h2 id="博客运行时间"><a href="#博客运行时间" class="headerlink" title="博客运行时间"></a>博客运行时间</h2><p>打开<code>next\layout\_partials</code>路径中的<code>footer.swig</code>,在文件中合适位置<del>（我加在了最后面）</del>加入下面代码段：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id="timeDate" title="网站运行时间"&gt;载入天数...&lt;/span&gt;&lt;span id="times" title="网站运行时间"&gt;载入时分秒...&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>在<code>next\layout\_layout.swig</code>中插入下面代码块：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span>此处为建站时间 <span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">  var now = new Date(); </span><br><span class="line">  <span class="selector-tag">function</span> <span class="selector-tag">createtime</span>() &#123; </span><br><span class="line">      var grt= new Date("09/24/2018 23:45:01");</span><br><span class="line">      <span class="selector-tag">now</span><span class="selector-class">.setTime</span>(<span class="selector-tag">now</span><span class="selector-class">.getTime</span>()+250); </span><br><span class="line">      days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); </span><br><span class="line">      hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); </span><br><span class="line">      if(String(hnum).length ==1 )&#123;hnum = "0" + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">      mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = "0" + mnum;&#125; </span><br><span class="line">      seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">      snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = "0" + snum;&#125; </span><br><span class="line">      document.getElementById("timeDate").innerHTML ="(ㆆᴗㆆ)本弱已菜菜的存活了"+dnum+"&amp;thinsp;天"; </span><br><span class="line">      document.getElementById("times").innerHTML = hnum + "&amp;thinsp;时" + mnum + "&amp;thinsp;分" + snum + "&amp;thinsp;秒"; </span><br><span class="line">  &#125; </span><br><span class="line"><span class="selector-tag">setInterval</span>("<span class="selector-tag">createtime</span>()",250);</span><br></pre></td></tr></table></figure><p>然后就可以上传看效果啦</p><h2 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h2><p>自己使用的Hexo+NexT主题，主题默认的版权声明配置在<code>themes\next\_config.yml</code>文件中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Copy<span class="comment"># Declare license on posts</span></span><br><span class="line">post_copyright:</span><br><span class="line">  enable: <span class="keyword">false</span></span><br><span class="line">  license: CC BY-NC-SA <span class="number">3.0</span></span><br><span class="line">  license_url: https:<span class="comment">//creativecommons.org/licenses/by-nc-sa/3.0/</span></span><br></pre></td></tr></table></figure><p>直接把<code>enable</code> 改为<code>true</code>即可开启。</p><h2 id="文章结尾–加入感谢阅读"><a href="#文章结尾–加入感谢阅读" class="headerlink" title="文章结尾–加入感谢阅读"></a>文章结尾–加入感谢阅读</h2><p><strong>实现效果图</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>具体实现方法</strong></p><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">        &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下画红色部分代码（post-footer之前两个DIV）：</p><p><img src="http://upload-images.jianshu.io/upload_images/5308475-865c7f94f89b907e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">    &#123;% <span class="keyword">include</span> <span class="string">'passage-end-tag.swig'</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后打开主题配置文件（<code>_config.yml</code>),在末尾添加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p><h2 id="Valine评论"><a href="#Valine评论" class="headerlink" title="Valine评论"></a>Valine评论</h2><p><strong>注册Leancloud</strong></p><p>评论系统其实是放在Leancloud上的，因此首先需要去注册一个账号</p><p>Leancloud官网，<a href="https://leancloud.cn/" target="_blank" rel="noopener">点我注册</a></p><p>注册完以后需要创建一个应用，名字可以：blog ，然后 进入应用-&gt;设置-&gt;应用key</p><p>获取你的appid 和 appkey 如图所示：</p><p><img src="https://upload-images.jianshu.io/upload_images/5110710-f78e74b42f5bc7e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><strong>博客主题配置文件配置</strong></p><p>拿到你的appid和appkey之后，打开主题配置文件 搜索 valine，填入appid 和 appkey</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  appid:  your app id</span><br><span class="line">  appkey: your app key</span><br><span class="line">  notify: <span class="keyword">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  verify: <span class="keyword">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  placeholder: just so so</span><br><span class="line">  guest_info: nick,mail,link</span><br><span class="line">  pageSize: <span class="number">10</span></span><br></pre></td></tr></table></figure><p><strong>配置域名</strong></p><p>记得在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名 把你的域名加进去</p><h2 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h2><p><img src="https://segmentfault.com/img/remote/1460000009254889?w=1240&amp;h=578" alt=""></p><ul><li><p><a href="http://sharesdk.mob.com/" target="_blank" rel="noopener">ShareSDK</a></p></li><li><p>开始使用<br>注册一个账号，然后打开后台，找到appkey</p><p><img src="https://segmentfault.com/img/remote/1460000009254890?w=895&amp;h=300" alt=""></p></li><li><p>打开</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">博客\themes\next\layout\_partials\share</span><br></pre></td></tr></table></figure><ul><li>新建一个文件名为 <code>sharesdk.swig</code> ，并输入以下代码：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--MOB</span> <span class="selector-tag">SHARE</span> <span class="selector-tag">BEGIN--</span>&gt;</span><br><span class="line">                            &lt;div class="-mob-share-ui-button -mob-share-open"&gt;分享&lt;/div&gt;</span><br><span class="line">                            &lt;div class="-mob-share-ui" style="display: none"&gt;</span><br><span class="line">                                &lt;ul class="-mob-share-list"&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-weibo"&gt;&lt;p&gt;新浪微博&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-tencentweibo"&gt;&lt;p&gt;腾讯微博&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-qzone"&gt;&lt;p&gt;QQ空间&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-qq"&gt;&lt;p&gt;QQ好友&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-weixin"&gt;&lt;p&gt;微信&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-douban"&gt;&lt;p&gt;豆瓣&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-renren"&gt;&lt;p&gt;人人网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-kaixin"&gt;&lt;p&gt;开心网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-facebook"&gt;&lt;p&gt;Facebook&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-twitter"&gt;&lt;p&gt;Twitter&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-pocket"&gt;&lt;p&gt;Pocket&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-google"&gt;&lt;p&gt;Google+&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-youdao"&gt;&lt;p&gt;有道云笔记&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-mingdao"&gt;&lt;p&gt;明道&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-pengyou"&gt;&lt;p&gt;朋友网&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-tumblr"&gt;&lt;p&gt;Tumblr&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-instapaper"&gt;&lt;p&gt;Instapaper&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                    &lt;li class="-mob-share-linkedin"&gt;&lt;p&gt;LinkedIn&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">                                &lt;/ul&gt;</span><br><span class="line">                                &lt;div class="-mob-share-close"&gt;取消&lt;/div&gt;</span><br><span class="line">                            &lt;/div&gt;</span><br><span class="line">                            &lt;div class="-mob-share-ui-bg"&gt;&lt;/div&gt;</span><br><span class="line">                            &lt;script id="-mob-share" src="http://f1.webshare.mob.com/code/mob-share.js?appkey=&#123;&#123; theme.shareSDKappkey &#125;&#125;"&gt;&lt;/script&gt;</span><br><span class="line">                            &lt;!<span class="selector-tag">--MOB</span> <span class="selector-tag">SHARE</span> <span class="selector-tag">END--</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>打开：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LX-Blog\themes\next\layout\post.swig</span><br></pre></td></tr></table></figure><ul><li>将以下代码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="post-spread"&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> theme.jiathis %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/jiathis.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.baidushare %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/baidushare.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.add_this_id %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/add-this.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.duoshuo_shortname <span class="keyword">and</span> theme.duoshuo_share %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/duoshuo_share.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>改成：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="post-spread"&gt;</span><br><span class="line">      &#123;% <span class="keyword">if</span> theme.jiathis %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/jiathis.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.baidushare %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/baidushare.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.add_this_id %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/add-this.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.duoshuo_shortname <span class="keyword">and</span> theme.duoshuo_share %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/duoshuo_share.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">elseif</span> theme.sharesdk %&#125;</span><br><span class="line">        &#123;% <span class="keyword">include</span> <span class="string">'_partials/share/sharesdk.swig'</span> %&#125;</span><br><span class="line">      &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>打开 <code>主题配置文件</code>，添加以下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sharesdk: true</span><br><span class="line">shareSDKappkey: 你的appkey</span><br></pre></td></tr></table></figure><h2 id="向百度站长推送"><a href="#向百度站长推送" class="headerlink" title="向百度站长推送"></a>向百度站长推送</h2><p>当我们一开始建完博客时，搜索引擎是搜索不到的，我们需要做一项工作就是通知搜索引擎收录我们的网站。</p><p><strong>如何被百度收录</strong></p><p>这里需要做两个事情，一个是<code>验证网站</code>，一个是<code>链接提交</code>.</p><p><strong>验证网证</strong></p><p>我们到百度站长平台里面的<a href="http://zhanzhang.baidu.com/dashboard/index" target="_blank" rel="noopener">站长工具</a>里面去验证网站，大概步骤如下：</p><ol><li>第一步：输入网站</li><li>第二步：站点属性</li><li>第三步：验证网站</li></ol><p>前两步都很简单，第三步：验证网站有以下三种方法：</p><ul><li>文件验证</li><li>HTML标签验证</li><li>CNAME验证</li></ul><p>这里我们选择<code>文件验证</code>的方法，然后会得到一个<code>baidu_verify_xxxxx.html</code>文件。<br>我使用的主题是<code>next</code>，所以我把这个验证文件放在<code>theme/next/source/</code>根目录下面，<br>这样当我们编译网站<code>hexo generate</code>的时候，这个文件会被原封不动的拷贝到我们博客的<code>public/</code>根目录下。</p><p>好，重要编译hexo并部署，完成验证.</p><p><strong>链接提交</strong></p><p>接下来我们进入<a href="https://ziyuan.baidu.com/linksubmit/index" target="_blank" rel="noopener">链接提交</a>.<br>链接提交有<code>手动</code>和<code>自动</code>两种方法，手动就是每次你有新的链接生成，你就需要手动提交链接到百度，这种方法太麻烦了，不使用。<br><code>自动</code>提交有三种方式：</p><ol><li>主动推送(实时)</li><li>自动推送</li><li>sitemap</li></ol><p>这里我们选择<code>sitemap</code>方式。</p><ul><li><p>安装hexo的sitemap网站地图生成插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></li><li><p>在你的hexo站点的<code>_config.yml</code>添加下面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo sitemap网站地图</span></span><br><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br></pre></td></tr></table></figure></li><li><p>配置成功后，hexo编译时会在hexo站点根目录生成<code>baidusitemap.xml</code>，部署网站后，提交到百度：</p></li></ul><h2 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h2><ul><li><p>下载插件<a href="https://link.jianshu.com/?t=https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">clipboard.js</a> 。</p></li><li><p>将下载的clipboard.js文件下的dist文件夹中的文件拖到<code>.\themes\next\source\js\src</code> 文件夹下</p></li></ul><ul><li><p>也是在<code>.\themes\next\source\js\src</code>目录下，创建<code>clipboard-use.js</code>，文件内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*页面载入完成后，创建复制按钮*/</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123; </span><br><span class="line">  <span class="comment">/* code */</span></span><br><span class="line">  <span class="keyword">var</span> initCopyCode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = <span class="string">''</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'  &lt;i class="fa fa-globe"&gt;&lt;/i&gt;&lt;span&gt;copy&lt;/span&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;/button&gt;'</span>;</span><br><span class="line">    $(<span class="string">".highlight .code pre"</span>).before(copyHtml);</span><br><span class="line">    <span class="keyword">new</span> ClipboardJS(<span class="string">'.btn-copy'</span>, &#123;</span><br><span class="line">        target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></li><li><p>在<code>.\themes\next\source\css\_custom\custom.styl</code>样式文件中添加下面代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码块复制按钮</span></span><br><span class="line">.highlight&#123;</span><br><span class="line">  <span class="comment">//方便copy代码按钮（btn-copy）的定位</span></span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    background-color: #eee;</span><br><span class="line">    background-image: linear-gradient(#fcfcfc,#eee);</span><br><span class="line">    border: 1px solid #d5d5d5;</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    font-size: <span class="number">13</span>px;</span><br><span class="line">    font-weight: <span class="number">700</span>;</span><br><span class="line">    line-height: <span class="number">20</span>px;</span><br><span class="line">    color: #333;</span><br><span class="line">    -webkit-transition: opacity <span class="number">.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    -o-transition: opacity <span class="number">.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    transition: opacity <span class="number">.3</span>s ease-<span class="keyword">in</span>-out;</span><br><span class="line">    padding: <span class="number">2</span>px <span class="number">6</span>px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: <span class="number">5</span>px;</span><br><span class="line">    top: <span class="number">5</span>px;</span><br><span class="line">    opacity: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">.btn-copy span &#123;</span><br><span class="line">    margin-left: <span class="number">5</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight:hover .btn-copy&#123;</span><br><span class="line">  opacity: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>.\themes\next\layout\_layout.swig</code>文件中，添加引用（注：在 swig 末尾或 body 结束标签（<code>&lt;/body&gt;</code>）之前添加）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 代码块复制功能 --&gt;</span><br><span class="line">  &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clipboard.min.js"</span>&gt;&lt;/script&gt;  </span><br><span class="line">  &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clipboard-use.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="博客压缩加速访问"><a href="#博客压缩加速访问" class="headerlink" title="博客压缩加速访问"></a>博客压缩加速访问</h2><p>在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp -g</span><br><span class="line">$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure><p>在如下图所示，新建 gulpfile.js ，并填入以下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require('gulp');</span><br><span class="line">var minifycss = require('gulp-minify-css');</span><br><span class="line">var uglify = require('gulp-uglify');</span><br><span class="line">var htmlmin = require('gulp-htmlmin');</span><br><span class="line">var htmlclean = require('gulp-htmlclean');</span><br><span class="line">// 压缩 public 目录 css</span><br><span class="line">gulp.task('minify-css', function() &#123;</span><br><span class="line">    return gulp.src('./public/**/*.css')</span><br><span class="line">        <span class="selector-class">.pipe</span>(<span class="selector-tag">minifycss</span>())</span><br><span class="line">        .pipe(gulp.dest('./public'));</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public 目录 html</span><br><span class="line">gulp.task('minify-html', function() &#123;</span><br><span class="line">  return gulp.src('./public/**/*.html')</span><br><span class="line">    <span class="selector-class">.pipe</span>(<span class="selector-tag">htmlclean</span>())</span><br><span class="line">    <span class="selector-class">.pipe</span>(<span class="selector-tag">htmlmin</span>(&#123;</span><br><span class="line">         <span class="attribute">removeComments</span>: true,</span><br><span class="line">         minifyJS: true,</span><br><span class="line">         minifyCSS: true,</span><br><span class="line">         minifyURLs: true,</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest('./public'))</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩 public/js 目录 js</span><br><span class="line">gulp.task('minify-js', function() &#123;</span><br><span class="line">    return gulp.src('./public/**/*.js')</span><br><span class="line">        <span class="selector-class">.pipe</span>(<span class="selector-tag">uglify</span>())</span><br><span class="line">        .pipe(gulp.dest('./public'));</span><br><span class="line">&#125;);</span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task('default', [</span><br><span class="line">    'minify-html','minify-css','minify-js'</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>生成博文是执行 hexo g &amp;&amp; gulp 就会根据 gulpfile.js 中的配置，对 public 目录中的静态资源文件进行压缩。</p><h2 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h2><p><strong>实现效果图</strong></p><p><img src="http://os94ofsac.bkt.clouddn.com/hexo-next-blog/as.png" alt=""></p><p><strong>具体实现方法</strong></p><p>打开<code>\themes\next\source\css_custom\custom.styl</code>,向里面加入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*主页文章添加阴影效果*/</span></span><br><span class="line"> <span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);</span><br><span class="line">   <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="修改代码块自定义样式"><a href="#修改代码块自定义样式" class="headerlink" title="修改代码块自定义样式"></a>修改<code></code>代码块自定义样式</h2><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="博客宝宝"><a href="#博客宝宝" class="headerlink" title="博客宝宝"></a>博客宝宝</h2><p><strong>效果如图</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/12642878-e1616d8839c3d477.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/377/format/webp" alt=""></p><p>安装依赖包,在站点根目录，打开Git Bash ，安装hexo-helper-live2d</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>在<code>站点配置文件</code>或者<code>主题配置文件</code>添加以下内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    <span class="keyword">use</span>: <span class="title">live2d</span>-<span class="title">widget</span>-<span class="title">model</span>-<span class="title">wanko</span></span><br><span class="line">  <span class="title">display</span>:</span><br><span class="line">    <span class="title">position</span>: <span class="title">right</span></span><br><span class="line">    <span class="title">width</span>: 150</span><br><span class="line">    <span class="title">height</span>: 300</span><br><span class="line">  <span class="title">mobile</span>:</span><br><span class="line">    <span class="title">show</span>: <span class="title">true</span></span><br></pre></td></tr></table></figure><p>安装需要的宠物文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &#123;packagename&#125;</span><br></pre></td></tr></table></figure><p>如效果图所示的宠物名为haruto， 则为 <code>npm install live2d-widget-model-haruto</code>,其他宠物包点击<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">live2d-widget-models</a>。如果需要修改宠物的位置，可以在<code>display</code>下添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 水平位置</span><br><span class="line">hOffset: 0</span><br><span class="line"># 垂直位置</span><br><span class="line">vOffset: -20</span><br></pre></td></tr></table></figure><p>详细内容可参考<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener"><strong>hexo-helper-live2d</strong></a></p><h2 id="点击红心特效和爆炸特效"><a href="#点击红心特效和爆炸特效" class="headerlink" title="点击红心特效和爆炸特效"></a>点击红心特效和爆炸特效</h2><p><strong>红心特效</strong></p><p>实现效果图：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-78e64c0a80bb559e.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/66/format/webp" alt=""></p><p>实现方法：</p><p>在网址输入:<code>http://7u2ss1.com1.z0.glb.clouddn.com/love.js</code></p><p>然后将里面的代码copy一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span> 页面点击小红心 <span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>爆炸特效</strong></p><p>实现效果图：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-39a777c8c36cec1a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/990/format/webp" alt=""></p><p>实现方法：</p><p>跟那个红心是差不多的，首先在<code>themes/next/source/js/src</code>里面建一个叫fireworks.js的文件，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span><span class="params">(e)</span></span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span><span class="params">(e)</span></span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*Math.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span><span class="params">(e)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,y:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,radius:<span class="number">0.1</span>,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(<span class="number">80</span>,<span class="number">160</span>),lineWidth:<span class="number">0</span>,alpha:&#123;value:<span class="number">0</span>,easing:<span class="string">"linear"</span>,duration:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;<span class="keyword">var</span> n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;canvasEl.width=<span class="number">2</span>*window.innerWidth,canvasEl.height=<span class="number">2</span>*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;duration:<span class="number">1</span>/<span class="number">0</span>,update:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span><span class="params">(e)</span></span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span><span class="params">(e)</span></span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*Math.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*Math.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span><span class="params">(e)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,y:<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,radius:<span class="number">0.1</span>,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(<span class="number">80</span>,<span class="number">160</span>),lineWidth:<span class="number">0</span>,alpha:&#123;value:<span class="number">0</span>,easing:<span class="string">"linear"</span>,duration:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,duration:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span><span class="params">(e,t)</span></span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;<span class="keyword">var</span> n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;canvasEl.width=<span class="number">2</span>*window.innerWidth,canvasEl.height=<span class="number">2</span>*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;duration:<span class="number">1</span>/<span class="number">0</span>,update:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><p>打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; </span><br><span class="line">   &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; </span><br><span class="line">   &lt;script type="text/javascript" src="/js/src/fireworks.js"&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件，在里面最后写下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line">fireworks: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p><img src="https://upload-images.jianshu.io/upload_images/5308475-0c7e5e61b78dc937.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt=""></p><p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-446793cd6d740b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt=""></p><p>代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">    (<span class="selector-tag">function</span>()&#123;</span><br><span class="line">        if('&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">            if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">                alert('密码错误！');</span><br><span class="line">                <span class="selector-tag">history</span><span class="selector-class">.back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后在文章上写成类似这样：</p><p><img src="https://upload-images.jianshu.io/upload_images/5308475-e6c726a0152cb8ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/720/format/webp" alt=""></p><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><p><del>打开 <code>Hexo</code> 站点下 <code>node_modules/hexo-generator-index/lib/generator.js</code> 文件。代码全部替换为：</del>(next 5.1以后主题已自带此功能)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>打开文章添加top字段,设置数值，数值越大文章越靠前：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: layout</span><br><span class="line">title: 标签1</span><br><span class="line">date: 2017-08-18 15:41:18</span><br><span class="line">tags: 标签1</span><br><span class="line">top: 100</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="域名更换"><a href="#域名更换" class="headerlink" title="域名更换"></a>域名更换</h2><p><strong>1.申请域名</strong></p><ul><li>我在万网购买的域名，地址：<a href="https://wanwang.aliyun.com/domain/com?spm=5176.8142029.388261.137.LoKzy7" target="_blank" rel="noopener">https://wanwang.aliyun.com/domain/com?spm=5176.8142029.388261.137.LoKzy7</a></li><li>我这里是<code>.cn</code>结尾的域名，一年39大洋<a href="https://anoyer.cn/">anoyer.cn</a></li></ul><p><strong>2.解析域名</strong></p><p>添加如下的解析</p><p>得到域名之后，到控制台进行解析</p><p>控制台-&gt;域名与网站(万网)-&gt;域名-&gt;域名列表-&gt;解析</p><p><img src="https://i.loli.net/2018/11/26/5bfbb9d07c358.png" alt=""></p><p><img src="https://i.loli.net/2018/11/26/5bfbba20982b6.png" alt=""></p><p>在阿里云控制台，设置主机记录<code>www</code>，记录类型为<code>A</code>，记录值是IP<code>103.210.21.11</code>。其中103.210.21.11是Github Pages服务器指定的IP地址，访问该IP地址即表示访问Coding Pages。</p><p>在阿里云控制台，设置主机记录<code>@</code>，记录类型为<code>CNAME</code>，记录值是<code>anoyer.coding.me</code>。表示将<code>https://anoyer.cn</code>这个主域名映射<code>anoyer.coding.me</code></p><p>如何知道知道的 Coding Pages IP</p><p>在<code>命令提示符</code>中输入<code>ping anoyer.cn</code></p><p><img src="https://i.loli.net/2018/11/26/5bfbbbb54551d.png" alt=""></p><p>成功之后:</p><p><img src="https://i.loli.net/2018/11/26/5bfbb9d07c358.png" alt=""></p><p><strong>3.配置</strong></p><ul><li>在<code>博客</code>的<code>source</code>文件夹下建立一个<code>CNAME</code>的文件</li><li>内容写入你的域名信息，比如我这里是<code>anoyer.cn</code></li><li>发布到Coding即可</li></ul><p><strong>4.Coding 配置</strong></p><p>进入Coding 项目的Pages服务，进入设置</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\1543224779578.png" alt=""></p><p>把刚解析的域名绑定上去。到这里就OK了。</p><h2 id="插入网易云音乐"><a href="#插入网易云音乐" class="headerlink" title="插入网易云音乐"></a>插入网易云音乐</h2><p>在知道了页面的结构之后，你就可以将你的播放器添加在页面的任意位置，开始我是放在了首页，然后发现一上来就自动播放太吵了，于是就放在了侧边栏，想要听得朋友可以手动点击播放，<br>我们可以直接在网易云音乐中搜索我们想要插入的音乐，然后点击生成外链播放器</p><p><img src="https://img-blog.csdn.net/20170409181717791?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3Vuc2hpbmU5NDAzMjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>然后可以根据你得设置生成相应的html代码，将获得的html代码插入到你想要插入的位置即可</p><p><img src="https://img-blog.csdn.net/20170409181941920?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc3Vuc2hpbmU5NDAzMjY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>我放在了layout/_macro/sidebar.swig 文件下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"music163player"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">280</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=38358214&amp;auto=0&amp;height=66"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h2><p>在文章中使用<code>&lt; !--more--&gt;</code> 手动进行截断<br>这种方法可以根据文章的内容，自己在合适的位置添加 <code>&lt; !--more--&gt;</code> 标签，使用灵活，也是Hexo推荐的方法。</p><h2 id="在线联系"><a href="#在线联系" class="headerlink" title="在线联系"></a>在线联系</h2><p>​ 之前有访问过一些大佬的个人博客，里面有个在线联系功能，看着不错，所以也试着在自己的站点上接入了此功能。</p><p><strong>注册</strong></p><p>首先在<a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>注册个账号，点击-&gt;<a href="http://dashboard.daovoice.io/get-started?invite_code=0f81ff2f" target="_blank" rel="noopener">邀请码</a>是<code>2e5d695d</code>。<br><a href="https://s1.ax1x.com/2018/01/21/pW5DRP.png" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pW5DRP.png" alt="pW5DRP.png"></a></p><p>完成后，会得到一个<code>app_id</code>，后面会用到：<br><a href="https://s1.ax1x.com/2018/01/21/pW5yM8.png" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pW5yM8.png" alt="appid"></a></p><p><strong>修改head.swig</strong></p><p>修改<code>/themes/next/layout/_partials/head.swig</code>文件，添加内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&apos;init&apos;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>位置贴图：<br><a href="https://imgchr.com/i/pWIwmF" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pWIwmF.md.png" alt="pWIwmF.md.png"></a></p><p><strong>主题配置文件</strong></p><p>在<code>_config.yml</code>文件中添加内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Online contact</span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id:   # 这里填你刚才获得的 app_id</span><br></pre></td></tr></table></figure><p><strong>聊天窗口配置</strong></p><p>附上我的聊天窗口的颜色、位置等设置信息：<br><a href="https://s1.ax1x.com/2018/01/21/pWonhR.png" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2018/01/21/pWonhR.png" alt="pWonhR.png"></a></p><p>至此，网页的在线联系功能已经完成，重新<code>hexo g</code>，<code>hexo d</code>上传GitHub后，页面上就能看到效果了。</p><p>就比如说你现在往右下角看看(～￣▽￣)～ ，欢迎撩我（滑稽）。</p><h2 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h2><blockquote><p>因为next主题自带打赏功能，所以我们只需要在next的主题配置文件中找到如下代码,<code>image</code>文件夹是我在blog/source下面建立的文件夹，然后把你的微信及支付宝收钱码图片拉进去，修改名字为<code>wechatreward.png</code>和<code>alipayreward.png</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</span><br><span class="line">wechatpay: /image/wechatreward.png</span><br><span class="line">alipay: /image/alipayreward.png</span><br></pre></td></tr></table></figure><h2 id="修改文章间分割线"><a href="#修改文章间分割线" class="headerlink" title="修改文章间分割线"></a>修改文章间分割线</h2><p>打开 <code>themes/next/source/css/_common/components/post/post-eof.styl</code> ,修改：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.posts-expand &#123;</span><br><span class="line">  .post-eof &#123;</span><br><span class="line">    display: block;</span><br><span class="line">  <span class="comment">//  margin: $post-eof-margin-top auto $post-eof-margin-bottom;  </span></span><br><span class="line">    width: <span class="number">0</span>%; <span class="comment">//分割线长度</span></span><br><span class="line">    height: <span class="number">0</span>px; <span class="comment">// 分割线高度</span></span><br><span class="line">    background: $grey-light;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h1><p>1.<a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener">https://www.jianshu.com/p/f054333ac9e6</a></p><p>2.<a href="https://blog.csdn.net/qsdsn/article/details/77946677" target="_blank" rel="noopener">https://blog.csdn.net/qsdsn/article/details/77946677</a></p><p>3.<a href="https://www.aisun.org/2017/10/hexo-next+dingzhi/" target="_blank" rel="noopener">https://www.aisun.org/2017/10/hexo-next+dingzhi/</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-3374-String Problem(最大与最小表示法+kmp求循环节)</title>
      <link href="/article/HDU%20-%203374%20-%20String%20Problem(%E6%9C%80%E5%A4%A7%E4%B8%8E%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95+kmp%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82).html"/>
      <url>/article/HDU%20-%203374%20-%20String%20Problem(%E6%9C%80%E5%A4%A7%E4%B8%8E%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95+kmp%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82).html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180919/23560W9C-5.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h2 id="HDU-3374-String-Problem"><a href="#HDU-3374-String-Problem" class="headerlink" title="HDU - 3374 - String Problem"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3374" target="_blank" rel="noopener">HDU - 3374</a> - String Problem</h2><p><img src="https://i.loli.net/2018/11/17/5befdfc91fa46.png" alt="在这里插入图片描述"></p><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给你一个字符串，问这个字符串经过移动后的字典序最小的字符串的首字符位置和字典序最大的字符串的首字符的位置，和能出现多少次最小字典序的字符串和最大字典序的字符串</p><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>利用<a href="https://blog.csdn.net/Anoy_acer/article/details/84190327" target="_blank" rel="noopener">最小表示法与最大表示法O(n)</a>复杂度求出最小字典序和最大字典序串出现位置，然后利用kmp求出next，利用next数组性质求出循环节次数，因为最小和最大字典序串出现次数等于循环节次数（<del>这个关系可以脑补下</del>）</p><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNex</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(nex,<span class="number">0</span>,<span class="keyword">sizeof</span>(nex));</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=s[j+<span class="number">1</span>]&amp;&amp;j!=<span class="number">-1</span>)j=nex[j];</span><br><span class="line">        <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>]&amp;&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">        nex[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i&lt;j?i:j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,s)!=EOF)&#123;</span><br><span class="line">        len=<span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> mi=GetMin();<span class="comment">//获取最小表示下标</span></span><br><span class="line">        <span class="keyword">int</span> mx=GetMax();<span class="comment">//获取最大表示下标</span></span><br><span class="line">        GetNex();</span><br><span class="line">        <span class="keyword">if</span>(len%(len-nex[len<span class="number">-1</span>]<span class="number">-1</span>)==<span class="number">0</span>)sum=len/(len-nex[len<span class="number">-1</span>]<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">else</span> sum=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>,mi+<span class="number">1</span>,sum,mx+<span class="number">1</span>,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>最小表示法与最大表示法</title>
      <link href="/article/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95%E4%B8%8E%E6%9C%80%E5%A4%A7%E8%A1%A8%E7%A4%BA%E6%B3%95(O(n)).html"/>
      <url>/article/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95%E4%B8%8E%E6%9C%80%E5%A4%A7%E8%A1%A8%E7%A4%BA%E6%B3%95(O(n)).html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180423/163GQ106-8.jpg" alt=""></p><h4 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h4><h3 id="最小表示法伪代码："><a href="#最小表示法伪代码：" class="headerlink" title="最小表示法伪代码："></a>最小表示法伪代码：</h3><p><strong>最小表示法的算法思路是维护两个指针i,j。</strong><br>令i=0,j=1<br>如果S[i] &gt; S[j] i=j, j=i+1<br>如果S[i] &lt; S[j] j++<br>如果S[i]==S[j] 设指针k，分别从i和j位置向下比较，直到S[i] != S[j]<br>​ <strong>如果S[i+k] &gt; S[j+k] i=i+k</strong><br>​ 否则j++<br><strong>返回i和j的小者</strong></p><h3 id="模版："><a href="#模版：" class="headerlink" title="模版："></a>模版：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;len&amp;&amp;j&lt;len&amp;&amp;k&lt;len)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=s[(i+k)%len]-s[(j+k)%len];</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">0</span>)k++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t&gt;<span class="number">0</span>)j=j+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> i=i+k+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==j)j++;</span><br><span class="line">            k=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i&lt;j?i:j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>河南农业大学热身赛标程</title>
      <link href="/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%83%AD%E8%BA%AB%E8%B5%9B%E6%A0%87%E7%A8%8B.html"/>
      <url>/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%83%AD%E8%BA%AB%E8%B5%9B%E6%A0%87%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1542096058349&amp;di=a7993576f87b04f411a04b0f8777d6eb&amp;imgtype=0&amp;src=http%3A%2F%2Ff.hiphotos.baidu.com%2Fzhidao%2Fpic%2Fitem%2Fb7fd5266d0160924d66fcc0bd20735fae6cd3453.jpg" alt="Image text"></p><h1 id="河南农业大学热身赛标程"><a href="#河南农业大学热身赛标程" class="headerlink" title="河南农业大学热身赛标程"></a>河南农业大学热身赛标程</h1><h2 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h2><h3 id="A-宅宅的排位赛"><a href="#A-宅宅的排位赛" class="headerlink" title="A.宅宅的排位赛"></a>A.宅宅的排位赛</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> a, suma = <span class="number">0</span>, sumb = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">13</span>; i++)&#123;<span class="comment">//suma记录A1~N1的和</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">suma += a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">13</span>; i++)&#123;<span class="comment">//sumb记录A2~N2的和</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">sumb += a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, suma - sumb);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-冒泡排序"><a href="#B-冒泡排序" class="headerlink" title="B.冒泡排序"></a>B.冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, min_ = <span class="number">9999</span>,id=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"><span class="comment">//sort(a, a + n);//解法一：调用库函数快排函数</span></span><br><span class="line"><span class="comment">//解法二：手撸冒泡排序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">min_ =a[i];</span><br><span class="line">id = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++)&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &lt;= min_)min_ = a[j], id = j;</span><br><span class="line">&#125;</span><br><span class="line">swap(a[i], a[id]);<span class="comment">//把为排序的最小值换到当前i位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-小刘数字母"><a href="#C-小刘数字母" class="headerlink" title="C.小刘数字母"></a>C.小刘数字母</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; //万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10050</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">        getchar();  <span class="comment">//接收空格</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;ch);</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;  <span class="comment">//记录出现次数</span></span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s); <span class="comment">//求出输入串长度</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==ch)cnt++;  <span class="comment">//如果ch出现就cnt++</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-HH的LCM"><a href="#D-HH的LCM" class="headerlink" title="D.HH的LCM"></a>D.HH的LCM</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="comment">//GCD解法</span></span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a*b/__gcd(a,b));  <span class="comment">//a,b的最小公倍数=a*b/(a,b的最大公因数)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  暴力解法</span></span><br><span class="line">    <span class="comment">/*while(t--)&#123;</span></span><br><span class="line"><span class="comment">        int a,b;</span></span><br><span class="line"><span class="comment">        scanf("%d%d",&amp;a,&amp;b);</span></span><br><span class="line"><span class="comment">        for(int i=1;i&lt;=a*b;i++)&#123;    //a*b肯定能被整除a,b，所以LCM不大于a*b</span></span><br><span class="line"><span class="comment">            if(i%a==0&amp;&amp;i%b==0)&#123; //第一个能被整除的a,b的便是他们的最小公倍数</span></span><br><span class="line"><span class="comment">                printf("%d\n",i);</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E-斐波那契数"><a href="#E-斐波那契数" class="headerlink" title="E.斐波那契数"></a>E.斐波那契数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> Fib[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">Fib[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">Fib[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; Fib[i - <span class="number">1</span>] &lt;= <span class="number">100000</span>; i++, cnt++)&#123;<span class="comment">//暴力打表求出所有小于100000的斐波那契数</span></span><br><span class="line">Fib[i] = Fib[i - <span class="number">1</span>] + Fib[i - <span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n, ans = <span class="number">0</span>;<span class="comment">//ans用来记录数量</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">26</span>; i &gt;= <span class="number">1</span>; i--)&#123;<span class="comment">//对于n从最大的Fib数列往前扫，</span></span><br><span class="line"><span class="keyword">if</span> (n &gt;= Fib[i])n -= Fib[i], ans++;<span class="comment">//如果发现不大于n的Fib数，就用n-Fib[i],ans++</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">贪心证明：因为对于任何n,比n小的且最大的Fib[i]一定满足  Fib[i]&lt;n&lt;2*Fib[i]  </span></span><br><span class="line"><span class="comment">因为 Fib[i-1]+Fib[i]=Fib[i+1]&lt;2*Fib[i]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-辉辉学长爱喝水"><a href="#F-辉辉学长爱喝水" class="headerlink" title="F.辉辉学长爱喝水"></a>F.辉辉学长爱喝水</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> a = <span class="built_in">ceil</span>(n / (m * <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"0\n"</span>);   <span class="comment">//  需要多少步 向上取整</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"No answer!\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n-a*m&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="G-打麻将"><a href="#G-打麻将" class="headerlink" title="G.打麻将"></a>G.打麻将</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="number">0</span>;      <span class="comment">//胡牌标记</span></span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">20</span>];   <span class="comment">//标记这张牌有没有被使用</span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">20</span>][<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> ttt[<span class="number">11</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">char</span> *str,<span class="keyword">int</span> cnt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur&gt;<span class="number">12</span>)<span class="keyword">return</span>;   <span class="comment">//因为组成刻子和顺子的牌需要12张，如果超过了就return</span></span><br><span class="line">    <span class="keyword">if</span>(cur==<span class="number">12</span>&amp;&amp;cnt==<span class="number">4</span>)&#123;    <span class="comment">//如果刻子和顺子用了12张牌且刻子和顺子数一共4，则进一步判断另外两张牌是不是对子</span></span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">14</span>;i++)<span class="keyword">if</span>(!vis[i])&#123;vis[i]=<span class="literal">true</span>,a=i;<span class="keyword">break</span>;&#125;   <span class="comment">//遍历出剩余第一张牌</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">14</span>;i++)<span class="keyword">if</span>(!vis[i])&#123;vis[i]=<span class="literal">true</span>,b=i;<span class="keyword">break</span>;&#125;   <span class="comment">//遍历出剩余第二张牌</span></span><br><span class="line">        <span class="keyword">if</span>(str[a]==str[b]&amp;&amp;(str[a]!=<span class="string">' '</span>&amp;&amp;str[b]!=<span class="string">' '</span>))      <span class="comment">//如果str[a]等于str[b]能胡牌 ，ok=true</span></span><br><span class="line">            ok=<span class="literal">true</span>;</span><br><span class="line">        vis[a]=vis[b]=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>&amp;&amp;!ok;i++) <span class="comment">//dfs遍历这14张牌所有组合情况</span></span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=<span class="number">13</span>&amp;&amp;!ok;j++)</span><br><span class="line">                <span class="keyword">if</span>(!vis[j])</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;=<span class="number">14</span>&amp;&amp;!ok;k++)&#123;      <span class="comment">//挑3个牌str[i],str[j],str[k]</span></span><br><span class="line">                        <span class="keyword">if</span>(!vis[k])</span><br><span class="line">                            <span class="keyword">if</span>((str[i]==str[j]&amp;&amp;str[j]==str[k])||(str[i]+<span class="number">1</span>==str[j]&amp;&amp;str[j]+<span class="number">1</span>==str[k]))&#123; <span class="comment">//看能否成顺子或刻子</span></span><br><span class="line">                                vis[i]=vis[j]=vis[k]=<span class="literal">true</span>;  <span class="comment">//把选的牌标记为已用</span></span><br><span class="line">                                dfs(cur+<span class="number">3</span>,str,cnt+<span class="number">1</span>);<span class="comment">//成了的话，cur+3，cur代表选的牌数，cnt+1，cnt代表现在顺子跟刻子的总和</span></span><br><span class="line">                                vis[i]=vis[j]=vis[k]=<span class="literal">false</span>; <span class="comment">//把牌标记为未用</span></span><br><span class="line">                            &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> t;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">   <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;a[<span class="number">1</span>]);</span><br><span class="line">        <span class="comment">//cnt++;</span></span><br><span class="line">        <span class="keyword">int</span> tt_=<span class="number">0</span>;</span><br><span class="line">        ok=<span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">memset</span>(ttt,<span class="number">0</span>,<span class="keyword">sizeof</span>(ttt));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">14</span>;i++)&#123;     <span class="comment">//判断是否是合法牌</span></span><br><span class="line">            ttt[a[i]-<span class="string">'0'</span>]++;</span><br><span class="line">            <span class="keyword">if</span>(ttt[a[i]-<span class="string">'0'</span>]&gt;<span class="number">4</span>)&#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"The data is error!\n"</span>);</span><br><span class="line">               tt_=<span class="number">1</span>;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tt_)<span class="keyword">continue</span>;</span><br><span class="line">        sort(a+<span class="number">1</span>,a+<span class="number">15</span>); <span class="comment">//把牌从小到大排好序</span></span><br><span class="line">        dfs(<span class="number">0</span>,a,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(!ok)<span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>河南农业大学训练赛二标程</title>
      <link href="/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E4%BA%8C%E6%A0%87%E7%A8%8B.html"/>
      <url>/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E4%BA%8C%E6%A0%87%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1542208722771&amp;di=77013fdd672e1a91bc43690379d20cfc&amp;imgtype=0&amp;src=http%3A%2F%2Fgss0.baidu.com%2F-fo3dSag_xI4khGko9WTAnF6hhy%2Fzhidao%2Fpic%2Fitem%2F838ba61ea8d3fd1f0714fd38334e251f95ca5f96.jpg" alt=""><br></p><h1 id="河南农业大学测试赛二标程"><a href="#河南农业大学测试赛二标程" class="headerlink" title="河南农业大学测试赛二标程"></a>河南农业大学测试赛二标程</h1><h2 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h2><h3 id="A-判断闰年"><a href="#A-判断闰年" class="headerlink" title="A.判断闰年"></a>A.判断闰年</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>((n%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;n%<span class="number">100</span>!=<span class="number">0</span>)||(n%<span class="number">400</span>==<span class="number">0</span>))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-复读机"><a href="#B-复读机" class="headerlink" title="B.复读机"></a>B.复读机</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    freopen(<span class="string">"C:/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> N;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">        <span class="keyword">char</span> c, last = <span class="number">0</span>;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            c = getchar();</span><br><span class="line">            <span class="keyword">if</span> (c != last)</span><br><span class="line">                <span class="built_in">putchar</span>(c), last = c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-hui姐识数"><a href="#C-hui姐识数" class="headerlink" title="C.hui姐识数"></a>C.hui姐识数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> Num[<span class="number">20</span>][<span class="number">100</span>] = &#123; <span class="string">"Ling"</span>, <span class="string">"Yi"</span>, <span class="string">"Er"</span>, <span class="string">"San"</span>, <span class="string">"Si"</span>, <span class="string">"Wu"</span>, <span class="string">"Liu"</span>, <span class="string">"Qi"</span>, <span class="string">"Ba"</span>, <span class="string">"Jiu"</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> Unit[<span class="number">10</span>][<span class="number">100</span>] = &#123; <span class="string">""</span>, <span class="string">"Shi"</span>, <span class="string">"Bai"</span>, <span class="string">"Qian"</span>,<span class="string">"Wan"</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span> (t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,k=<span class="number">4</span>,flag=<span class="number">0</span>,flag0=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)&#123; <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, Num[<span class="number">0</span>]); <span class="keyword">continue</span>; &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10000</span>; k&gt;=<span class="number">0</span>; i /= <span class="number">10</span>,k--)&#123;</span><br><span class="line">            <span class="keyword">if</span> (n / i)&#123;</span><br><span class="line">                <span class="keyword">if</span> (flag&amp;&amp;flag0)&#123; <span class="built_in">printf</span>(<span class="string">"%s"</span>, Num[<span class="number">0</span>]); flag = <span class="number">0</span>; &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s%s"</span>, Num[n / i], Unit[k]); </span><br><span class="line">                n %= i;</span><br><span class="line">                flag =<span class="number">1</span>;</span><br><span class="line">                flag0 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(flag)flag0 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>河南农业大学训练赛标程</title>
      <link href="/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E6%A0%87%E7%A8%8B.html"/>
      <url>/article/%E6%B2%B3%E5%8D%97%E5%86%9C%E4%B8%9A%E5%A4%A7%E5%AD%A6%E6%B5%8B%E8%AF%95%E8%B5%9B%E6%A0%87%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1542198975&amp;di=7f7d19bc6206a8bf596b6f0eae78ad00&amp;src=http://pic1.16pic.com/00/49/83/16pic_4983642_b.jpg" alt=""></p><h1 id="河南农业大学测试赛标程"><a href="#河南农业大学测试赛标程" class="headerlink" title="河南农业大学测试赛标程"></a>河南农业大学测试赛标程</h1><h2 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h2><h3 id="A-最大最小值"><a href="#A-最大最小值" class="headerlink" title="A.最大最小值"></a>A.最大最小值</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e9</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">ll a, min_ = maxn, max_ = -maxn;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a);</span><br><span class="line"><span class="keyword">if</span> (a&gt;max_)max_ = a;</span><br><span class="line"><span class="keyword">if</span> (a &lt; min_)min_ = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>, max_, min_);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-找众数"><a href="#B-找众数" class="headerlink" title="B.找众数"></a>B.找众数</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e9</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n,a;</span><br><span class="line"><span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="keyword">sizeof</span>(num));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a);</span><br><span class="line">num[a]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (num[i] &gt;= a)b = i,a=num[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, b);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-买！买！买！"><a href="#C-买！买！买！" class="headerlink" title="C.买！买！买！"></a>C.买！买！买！</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">15</span>, <span class="number">25</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dp[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">dp[<span class="number">0</span>] = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10</span>; i &lt;= n * <span class="number">10</span>; i+=<span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= a[j])&#123;</span><br><span class="line">dp[i] += dp[i - a[j]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[n * <span class="number">10</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 农大训练赛题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 河南农业大学训练赛题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线性基模板</title>
      <link href="/article/%E7%BA%BF%E6%80%A7%E5%9F%BA%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E7%BA%BF%E6%80%A7%E5%9F%BA%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180522/1K4432P7-4.jpg" alt=""></p><p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span>  <span class="title">Linear_Basis</span>&#123;</span></span><br><span class="line">    ll b[<span class="number">63</span>],nb[<span class="number">63</span>],tot; <span class="comment">//b为线性基  nb用来求第K小异或值 tot为nb元素个数</span></span><br><span class="line"><span class="keyword">bool</span> flag=<span class="literal">false</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;    <span class="comment">//初始化</span></span><br><span class="line">        tot=<span class="number">0</span>;</span><br><span class="line">flag=<span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">memset</span>(nb,<span class="number">0</span>,<span class="keyword">sizeof</span>(nb));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Ins</span><span class="params">(ll  x)</span></span>&#123; <span class="comment">//插入</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x&amp;(<span class="number">1l</span>l&lt;&lt;i))&#123;</span><br><span class="line">                <span class="keyword">if</span>(!b[i])&#123;</span><br><span class="line">                    b[i]=x;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                x^=b[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">Fin</span><span class="params">(ll x)</span></span>&#123; <span class="comment">//验证存在性</span></span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">0</span>&amp;&amp;b[<span class="number">0</span>])<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">int</span> j=i<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;j))&#123;</span><br><span class="line">                x^=b[i];</span><br><span class="line">                <span class="keyword">if</span>(!x)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Max</span><span class="params">(ll x)</span></span>&#123;   <span class="comment">//求最大值</span></span><br><span class="line">        ll res=x;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            res=max(res,res^b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Min</span><span class="params">(ll x)</span></span>&#123;   <span class="comment">//求最小值</span></span><br><span class="line">        ll res=x;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">62</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i])res^=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Rebuild</span><span class="params">()</span></span>&#123;   <span class="comment">//第K大</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b[j]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(b[i]&amp;(<span class="number">1l</span>l&lt;&lt;j))b[i]^=b[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">62</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i])nb[tot++]=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">Kth_Max</span><span class="params">(ll k)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(flag)k--;  <span class="comment">//???</span></span><br><span class="line">        ll res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(k&gt;=(<span class="number">1l</span>l&lt;&lt;tot))<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">62</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k&amp;(<span class="number">1l</span>l&lt;&lt;i))res^=nb[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;LB;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(Linear_Basis &amp;a,Linear_Basis &amp;b)</span></span>&#123;<span class="comment">//a和b都变成a+b</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">31</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b.b[i]==<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">        a.Ins(b.b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    b=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数论模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces-Round-515-(Div.3)--C.BooksQueries</title>
      <link href="/article/Codeforces-Round-515-Div-3-C-Books-Queries.html"/>
      <url>/article/Codeforces-Round-515-Div-3-C-Books-Queries.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180919/23560Q561-11.jpg" alt=""></p><h2 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h2><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://codeforces.com/contest/1066/problem/C" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c03585f85a37.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给Q次操作，可以往书架右边边缘加书或者左边边缘加书或者查询一本书里边缘的最短距离</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><strong>用两个数组记录一本书是第几本放右边或左边的书，这样就可以保证如果这本书是当时通过放左边进入书架则距离为 ==min(L + b[id]-1,R - b[id])== ，如果通过右边则是 ==min(R + a[id]-1, L - a[id])== ，可以自己脑补下</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="keyword">const</span> ll LINF=<span class="number">0x3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn],b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> q,d;</span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> id,L=<span class="number">0</span>, R=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q);</span><br><span class="line"><span class="keyword">while</span> (q--) &#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ch &gt;&gt; id;</span><br><span class="line"><span class="keyword">if</span> (ch[<span class="number">0</span>] == <span class="string">'L'</span>) &#123;</span><br><span class="line">++cnt;</span><br><span class="line">a[id] = ++L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch[<span class="number">0</span>] == <span class="string">'R'</span>) &#123;</span><br><span class="line">++cnt;</span><br><span class="line">b[id] = ++R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (a[id] == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, min(L + b[id]<span class="number">-1</span>,R - b[id]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, min(R + a[id]<span class="number">-1</span>, L - a[id]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces-Round-513-D-Social-Circles</title>
      <link href="/article/Codeforces-Round-513-C-Social-Circles.html"/>
      <url>/article/Codeforces-Round-513-C-Social-Circles.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180919/23560Q3P-19.jpg" alt=""></p><h2 id="博主博客"><a href="#博主博客" class="headerlink" title="博主博客"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主博客</a></h2><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://codeforces.com/contest/1060/problem/D" target="_blank" rel="noopener">题目链接</a></h2><p><img src="https://i.loli.net/2018/12/02/5c03597d47c5c.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>有n个人，及每个人坐位置时左右需要有多少空椅子，求所有人入座至少需要多少椅子</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><strong>利用贪心，将所有人的右边需要空的椅子数存在a数组里，右边需要空的椅子数存在b数组里，然后排序，将对应下标的max（a[i],b[i]）加起来再加上n，就是答案，因为大的和大的一合一起可以保证省去椅子最大</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">sort(a, a + n);</span><br><span class="line">sort(b, b + n);</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">ans += max(a[i], b[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans+n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>表达式求值（逆波兰）</title>
      <link href="/article/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.html"/>
      <url>/article/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170303/22-1F3031H430135.jpg" alt=""></p><p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (ch)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'-'</span>:<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'/'</span>:<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">default</span>:<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> ss = <span class="string">""</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ToSuffix</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt;Se;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">Se.push(<span class="string">'#'</span>);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] &gt;= <span class="string">'0'</span>&amp;&amp;s[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ss += s[i++];</span><br><span class="line"><span class="keyword">while</span> (s[i] &gt;= <span class="string">'0'</span>&amp;&amp;s[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ss += s[i++];</span><br><span class="line">&#125;</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'('</span>)Se.push(s[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">')'</span>)&#123;</span><br><span class="line"><span class="keyword">while</span> (Se.top() != <span class="string">'('</span>)&#123;</span><br><span class="line">ss += Se.top();</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'+'</span> || s[i] == <span class="string">'-'</span> || s[i] == <span class="string">'*'</span> || s[i] == <span class="string">'/'</span>)&#123;</span><br><span class="line"><span class="keyword">while</span> (cmp(Se.top()) &gt;= cmp(s[i]))&#123;</span><br><span class="line">ss += Se.top();</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line">Se.push(s[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (Se.top() != <span class="string">'#'</span>)&#123;</span><br><span class="line">ss += Se.top();</span><br><span class="line">ss += <span class="string">' '</span>;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line">Se.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">double</span>&gt;num;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> x = <span class="number">0</span>, y = <span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ss[i]; i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (ss[i] &gt;= <span class="string">'0'</span>&amp;&amp;ss[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ans = ss[i++] - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">while</span> (ss[i] &gt;= <span class="string">'0'</span>&amp;&amp;ss[i] &lt;= <span class="string">'9'</span>)&#123;</span><br><span class="line">ans =ans*<span class="number">10</span>+ ss[i++]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line">num.push(ans);</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">' '</span>);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">x = num.top();</span><br><span class="line">num.pop();</span><br><span class="line">y = num.top();</span><br><span class="line">num.pop();</span><br><span class="line"><span class="keyword">if</span> (ss[i] == <span class="string">'+'</span>)num.push(x + y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">'-'</span>)num.push(y - x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">'*'</span>)num.push(x * y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ss[i] == <span class="string">'/'</span>)num.push(y / x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">x = num.top();</span><br><span class="line">num.pop();</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">"C:/Users/Administrator/Desktop/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">ss = <span class="string">""</span>;</span><br><span class="line">ToSuffix();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,Solve());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
            <tag> 逆波兰 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线段树模板</title>
      <link href="/article/%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E7%BA%BF%E6%AE%B5%E6%A0%91%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170718/36-1FGQF003543.jpg" alt=""></p><p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,p,a,b,m,x,y,ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,w,f;</span><br><span class="line">&#125;tree[<span class="number">400001</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> ll,<span class="keyword">int</span> rr)</span> </span>&#123;<span class="comment">//建树</span></span><br><span class="line">    tree[k].l=ll,tree[k].r=rr;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].l==tree[k].r)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tree[k].w);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m=(ll+rr)/<span class="number">2</span>;</span><br><span class="line">    build(k*<span class="number">2</span>,ll,m);</span><br><span class="line">    build(k*<span class="number">2</span>+<span class="number">1</span>,m+<span class="number">1</span>,rr);</span><br><span class="line">    tree[k].w=tree[k*<span class="number">2</span>].w+tree[k*<span class="number">2</span>+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//标记下传</span></span><br><span class="line">    tree[k*<span class="number">2</span>].f+=tree[k].f;</span><br><span class="line">    tree[k*<span class="number">2</span>+<span class="number">1</span>].f+=tree[k].f;</span><br><span class="line">    tree[k*<span class="number">2</span>].w+=tree[k].f*(tree[k*<span class="number">2</span>].r-tree[k*<span class="number">2</span>].l+<span class="number">1</span>);</span><br><span class="line">    tree[k*<span class="number">2</span>+<span class="number">1</span>].w+=tree[k].f*(tree[k*<span class="number">2</span>+<span class="number">1</span>].r-tree[k*<span class="number">2</span>+<span class="number">1</span>].l+<span class="number">1</span>);</span><br><span class="line">    tree[k].f=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ask_point</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;<span class="comment">//单点查询</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l==tree[k].r)&#123;</span><br><span class="line">        ans=tree[k].w;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=m) ask_point(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> ask_point(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_point</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//单点修改</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l==tree[k].r)&#123;</span><br><span class="line">        tree[k].w+=y;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=m) change_point(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> change_point(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    tree[k].w=tree[k*<span class="number">2</span>].w+tree[k*<span class="number">2</span>+<span class="number">1</span>].w; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ask_interval</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//区间查询</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l&gt;=a&amp;&amp;tree[k].r&lt;=b) &#123;</span><br><span class="line">        ans+=tree[k].w;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=m) ask_interval(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(b&gt;m) ask_interval(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change_interval</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;<span class="comment">//区间修改</span></span><br><span class="line">    <span class="keyword">if</span>(tree[k].l&gt;=a&amp;&amp;tree[k].r&lt;=b)&#123;</span><br><span class="line">        tree[k].w+=(tree[k].r-tree[k].l+<span class="number">1</span>)*y;</span><br><span class="line">        tree[k].f+=y;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tree[k].f) down(k);</span><br><span class="line">    <span class="keyword">int</span> m=(tree[k].l+tree[k].r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=m) change_interval(k*<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(b&gt;m) change_interval(k*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">    tree[k].w=tree[k*<span class="number">2</span>].w+tree[k*<span class="number">2</span>+<span class="number">1</span>].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);<span class="comment">//n个节点 </span></span><br><span class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);<span class="comment">//建树 </span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);<span class="comment">//m种操作 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p);</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            ask_point(<span class="number">1</span>);<span class="comment">//单点查询,输出第x个数 </span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(p==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">            change_point(<span class="number">1</span>);<span class="comment">//单点修改 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(p==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);<span class="comment">//区间查询 </span></span><br><span class="line">            ask_interval(<span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;y);<span class="comment">//区间修改 </span></span><br><span class="line">             change_interval(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对数器模板</title>
      <link href="/article/%E5%AF%B9%E6%95%B0%E5%99%A8%E6%A8%A1%E7%89%88.html"/>
      <url>/article/%E5%AF%B9%E6%95%B0%E5%99%A8%E6%A8%A1%E7%89%88.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180607/1A14Wb9-3.jpg" alt=""></p><p><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要建立主路径 和主路径下sample/ 保证程序文件存在</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mpat</span><span class="params">(<span class="string">"D:/dsq/"</span>)</span></span>;<span class="comment">//主路径 注意末尾跟'/'!!!! linuxpwd查看当前路径</span></span><br><span class="line">string an("A"), bn("B");//程序名字</span><br><span class="line"><span class="keyword">int</span> brek = <span class="number">5</span>;<span class="comment">//几个错误停止 -1不停止</span></span><br><span class="line"><span class="keyword">int</span> cmpt = <span class="number">1</span>;<span class="comment">//编译模式</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exec</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;cmd, <span class="built_in">string</span> &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">FILE *fp = _popen(cmd.c_str(), <span class="string">"r"</span>); <span class="comment">//linux下改为popen</span></span><br><span class="line"><span class="keyword">while</span> (fgets(buf, <span class="number">1024</span>, fp))</span><br><span class="line">res.append(buf);</span><br><span class="line">_pclose(fp); <span class="comment">//linux下改为pclose</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wrfile</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;path, <span class="built_in">stringstream</span> &amp;ss)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">FILE *fp = fopen(path.c_str(), <span class="string">"wb"</span>);</span><br><span class="line"><span class="keyword">while</span> (getline(ss, str))</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%s\r\n"</span>, str.c_str());</span><br><span class="line">fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">d_rand</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l, <span class="keyword">long</span> <span class="keyword">long</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k = rand() % <span class="number">4</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t = rand();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">t = t &lt;&lt; <span class="number">16</span> | rand();</span><br><span class="line"><span class="keyword">return</span> l + t % (r - l + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f_rand</span><span class="params">(<span class="keyword">double</span> l, <span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> t = rand() / <span class="number">32767.0</span>;</span><br><span class="line"><span class="keyword">return</span> l + t * (r - l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">c_rand</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span> &amp;ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> ch[rand() % ch.size()];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sample</span><span class="params">(<span class="built_in">stringstream</span> &amp;sout)</span> <span class="comment">//样例生成</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand(time(<span class="literal">NULL</span>));</span><br><span class="line">rand();</span><br><span class="line"><span class="keyword">if</span> (cmpt) <span class="comment">//编译功能</span></span><br><span class="line">&#123;</span><br><span class="line">system((<span class="string">"g++ "</span> + mpat + an + <span class="string">".cpp -o "</span> + mpat + an + <span class="string">".exe -std=c++11"</span>).c_str()); <span class="comment">//C++11支持</span></span><br><span class="line">system((<span class="string">"g++ "</span> + mpat + bn + <span class="string">".cpp -o "</span> + mpat + bn + <span class="string">".exe -std=c++11"</span>).c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> num, aout, bout, spat = mpat + <span class="string">"sample/"</span>; <span class="comment">//样例生成子路径</span></span><br><span class="line"><span class="built_in">stringstream</span> ss;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>, wa = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= brek; i++)</span><br><span class="line">&#123;</span><br><span class="line">ss.clear(), ss &lt;&lt; i, ss &gt;&gt; num;</span><br><span class="line">remove((spat + num + <span class="string">"samp.txt"</span>).c_str());</span><br><span class="line">remove((spat + num + <span class="string">"ans"</span> + an + <span class="string">".txt"</span>).c_str());</span><br><span class="line">remove((spat + num + <span class="string">"ans"</span> + bn + <span class="string">".txt"</span>).c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (wa &lt; brek &amp;&amp; cnt &lt; <span class="number">1e4</span>) <span class="comment">//几个错误停止 极限1W个样例</span></span><br><span class="line">&#123;</span><br><span class="line">ss.str(<span class="string">""</span>), ss.clear(), ss &lt;&lt; wa + <span class="number">1</span>, ss &gt;&gt; num;</span><br><span class="line">aout.clear(), bout.clear(), ss.clear();</span><br><span class="line">sample(ss);</span><br><span class="line">wrfile(spat + num + <span class="string">"samp.txt"</span>, ss);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ++cnt;</span><br><span class="line">exec(mpat + an + <span class="string">".exe &lt; "</span> + spat + num + <span class="string">"samp.txt"</span>, aout);</span><br><span class="line">exec(mpat + bn + <span class="string">".exe &lt; "</span> + spat + num + <span class="string">"samp.txt"</span>, bout);</span><br><span class="line"><span class="keyword">if</span> (aout != bout)</span><br><span class="line">&#123;</span><br><span class="line">ss.clear(), ss.str(aout);</span><br><span class="line">wrfile(spat + num + <span class="string">"ans"</span> + an + <span class="string">".txt"</span>, ss);</span><br><span class="line">ss.clear(), ss.str(bout);</span><br><span class="line">wrfile(spat + num + <span class="string">"ans"</span> + bn + <span class="string">".txt"</span>, ss);</span><br><span class="line">++wa;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\t"</span> &lt;&lt; wa &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 对数器 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>后缀自动机模板</title>
      <link href="/article/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180927/0146061340-11.jpg" alt=""></p><h4 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h4><h2 id="SAM常解决的问题："><a href="#SAM常解决的问题：" class="headerlink" title="SAM常解决的问题："></a>SAM常解决的问题：</h2><ul><li>问题1.给定文本T，询问格式如下：给定字符串P，问P是否是T的子串。</li><li>问题2.给定字符串S，问它有多少不同的子串。（模板中的GetSubNum函数）</li><li>问题3.给定字符串S，求其所有不同子串的总长度。</li><li>问题4.给定字符串S，一系列询问——给出整数K_i，计算S的所有子串排序后的第K_i个。</li><li>问题5.给定字符串S，找到和它循环同构的字典序最小字符串。</li><li>问题.给定文本T，询问格式如下：给定字符串P，希望找出P作为子串在文本T中出现了多少次（出现区间可以相交）。</li><li>问题6.给定文本T，询问格式如下：给定字符串P，求P在文本中第一次出现的位置。</li><li>问题7.给定文本T，询问格式如下：给定字符串P，要求给出P在T中的所有出现位置（出现区间可以相交）。</li><li>问题8.给定两个字符串S和T。要求找出它们的最长公共子串，即一个字符串X，它同时是S和T的子串。</li></ul><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxc 28</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> len[maxn * <span class="number">2</span>], <span class="comment">//最长子串的长度(该节点字串数量=len[x]-len[link[x]])</span></span><br><span class="line">link[maxn * <span class="number">2</span>],   <span class="comment">//后缀链接(最短串前部减少一个字符所到达的状态)</span></span><br><span class="line">cnt[maxn * <span class="number">2</span>],    <span class="comment">//被后缀连接的数</span></span><br><span class="line">nex[maxn * <span class="number">2</span>][maxc],  <span class="comment">//状态转移(尾部加一个字符的下一个状态)(图)</span></span><br><span class="line">idx, <span class="comment">//节点编号</span></span><br><span class="line">last;    <span class="comment">//最后节点</span></span><br><span class="line">ll epos[maxn * <span class="number">2</span>]; <span class="comment">// enpos数（该状态子串出现数量）</span></span><br><span class="line"><span class="keyword">char</span> str[maxn];</span><br><span class="line">ll a[maxn];<span class="comment">//长度为i的子串出现最大次数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Iint</span><span class="params">()</span> </span>&#123;<span class="comment">//初始化</span></span><br><span class="line">last = idx = <span class="number">1</span>; <span class="comment">//1表示root起始点 空集</span></span><br><span class="line">link[<span class="number">1</span>] = len[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//SAM建图</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Extend</span><span class="params">(<span class="keyword">int</span> c)</span> </span>&#123;     <span class="comment">//插入字符，为字符ascll码值</span></span><br><span class="line"><span class="keyword">int</span> x = ++idx; <span class="comment">//创建一个新节点x;</span></span><br><span class="line">len[x] = len[last] + <span class="number">1</span>; <span class="comment">//  长度等于最后一个节点+1</span></span><br><span class="line">epos[x] = <span class="number">1</span>;  <span class="comment">//接受节点子串除后缀连接还需加一</span></span><br><span class="line"><span class="keyword">int</span> p;  <span class="comment">//第一个有C转移的节点;</span></span><br><span class="line"><span class="keyword">for</span> (p = last; p &amp;&amp; !nex[p][c]; p = link[p])nex[p][c] = x;<span class="comment">//沿着后缀连接 将所有没有字符c转移的节点直接指向新节点</span></span><br><span class="line"><span class="keyword">if</span> (!p)link[x] = <span class="number">1</span>, cnt[<span class="number">1</span>]++;  <span class="comment">//全部都没有c的转移 直接将新节点后缀连接到起点</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> q = nex[p][c];    <span class="comment">//p通过c转移到的节点</span></span><br><span class="line"><span class="keyword">if</span> (len[p] + <span class="number">1</span> == len[q])    <span class="comment">//pq是连续的</span></span><br><span class="line">link[x] = q, cnt[q]++; <span class="comment">//将新节点后缀连接指向q即可,q节点的被后缀连接数+1</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> nq = ++idx;   <span class="comment">//不连续 需要复制一份q节点</span></span><br><span class="line">len[nq] = len[p] + <span class="number">1</span>;   <span class="comment">//令nq与p连续</span></span><br><span class="line">link[nq] = link[q];   <span class="comment">//因后面link[q]改变此处不加cnt</span></span><br><span class="line"><span class="built_in">memcpy</span>(nex[nq], nex[q], <span class="keyword">sizeof</span>(nex[q]));  <span class="comment">//复制q的信息给nq</span></span><br><span class="line"><span class="keyword">for</span> (; p&amp;&amp;nex[p][c] == q; p = link[p])</span><br><span class="line">nex[p][c] = nq;    <span class="comment">//沿着后缀连接 将所有通过c转移为q的改为nq</span></span><br><span class="line">link[q] = link[x] = nq; <span class="comment">//将x和q后缀连接改为nq</span></span><br><span class="line"> cnt[nq] += <span class="number">2</span>; <span class="comment">//  nq增加两个后缀连接</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">last = x;  <span class="comment">//更新最后处理的节点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetNpos</span><span class="params">()</span> </span>&#123;<span class="comment">//求npos数，即该节点字串出现次数</span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= idx; i++)</span><br><span class="line"><span class="keyword">if</span> (!cnt[i])q.push(i);   <span class="comment">//将所有没被后缀连接指向的节点入队</span></span><br><span class="line"><span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> x = q.front();</span><br><span class="line">q.pop();</span><br><span class="line">epos[link[x]] += epos[x]; <span class="comment">//子串数量等于所有后缀连接指向该节点的子串数量和+是否为接受节点</span></span><br><span class="line"><span class="keyword">if</span> (--cnt[link[x]] == <span class="number">0</span>)q.push(link[x]);   <span class="comment">//当所有后缀连接指向该节点的处理完毕后再入队</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetSubNum</span><span class="params">()</span> </span>&#123;<span class="comment">//求不相同字串数量</span></span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= idx; i++)ans += len[i] - len[link[i]];<span class="comment">//一状态子串数量等于len[i]-len[link[i]]</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetSubMax</span><span class="params">()</span> </span>&#123;<span class="comment">//求出所有长度为k的子串中出现次数最多的子串出现次数</span></span><br><span class="line">GetNpos();</span><br><span class="line"><span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= idx; i++)a[len[i]] = max(a[len[i]], epos[i]);<span class="comment">//长度≤k的子串中出现次数最多的子串出现次数的最小值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)a[i] = max(a[i], a[i + <span class="number">1</span>]);<span class="comment">//求一遍后缀最大值就是答案</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, a[i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//freopen("c:/input.txt","r",stdin);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-4300-Clairewd’s message（KMP+特判）</title>
      <link href="/article/HDU-4300-Clairewd%E2%80%99s-message%EF%BC%88KMP-%E7%89%B9%E5%88%A4%EF%BC%89.html"/>
      <url>/article/HDU-4300-Clairewd%E2%80%99s-message%EF%BC%88KMP-%E7%89%B9%E5%88%A4%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180919/23560VE3-17.jpg" alt=""></p><h3 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h3><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4300" target="_blank" rel="noopener">题目</a></h1><p><img src="https://i.loli.net/2018/11/18/5bf0ee965dc1f.jpg" alt=""></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>先给你一个密码表。然后给你一个不一定完整的串。原串满足前一半是密码，后一半是明码。要求你最小的补全这个串。</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p><strong>设给的串长度为len,则1…(len+1)/2的字母一定是密码。我们将1…(len+1)/2的字母全部安装密码表转换成原文，然后将得到的串求Next数组。再根据Next数组求出最大的相等的前后缀（长度一定小于或等于len/2，题目要求），然后输出就可以。然后这里一定要先加一个特判是不是不存在相等的前后缀，也就是s[1]!=s[len],这时输出原串一次，再输出一次原串全解密的串.</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn],s1[maxn];</span><br><span class="line"><span class="keyword">char</span> t[maxn];</span><br><span class="line"><span class="keyword">char</span> m[<span class="number">33</span>];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">0</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">1</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, m+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;=len+<span class="number">1</span>; i++)s1[i] = s[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= (len +<span class="number">1</span>)/ <span class="number">2</span>; j++) &#123;   <span class="comment">//进行原串前半部分解密</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[j] == m[i]) &#123;</span><br><span class="line">s[j] = <span class="string">'a'</span> + i<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Get_nex();</span><br><span class="line"><span class="keyword">int</span> nn =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a = nex[len];</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">0</span>) &#123;<span class="comment">//如果不存在相等的前后缀</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, s1 + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = (len+<span class="number">1</span>)/<span class="number">2</span>+<span class="number">1</span>; j &lt;= len; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[j] == m[i]) &#123;</span><br><span class="line">s[j] = <span class="string">'a'</span> + i - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">0</span>) &#123;<span class="comment">//找出最大的相等的前后缀且长度小于或等于len/2</span></span><br><span class="line"><span class="keyword">if</span> (s[a] == s[len]) &#123;</span><br><span class="line"><span class="keyword">if</span> (a &lt;= len / <span class="number">2</span>)nn = max(nn, a);</span><br><span class="line">a = nex[a];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, s1+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = nn+<span class="number">1</span>; i &lt;= len -nn; ++i)<span class="built_in">printf</span>(<span class="string">"%c"</span>,s[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-2594-Simpsons’ Hidden Talents（KMP的next数组应用）</title>
      <link href="/article/HDU-2594-Simpsons%E2%80%99-Hidden-Talents%EF%BC%88KMP%E7%9A%84next%E6%95%B0%E7%BB%84%E5%BA%94%E7%94%A8%EF%BC%89.html"/>
      <url>/article/HDU-2594-Simpsons%E2%80%99-Hidden-Talents%EF%BC%88KMP%E7%9A%84next%E6%95%B0%E7%BB%84%E5%BA%94%E7%94%A8%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/181105/1F143A15-10.jpg" alt=""></p><h2 id="博主链接"><a href="#博主链接" class="headerlink" title="博主链接"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主链接</a></h2><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2594" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c0359c5144f0.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给你两个串，求第一个串的前缀和第二个串的后缀的相同长度</strong></p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h2><p>( 这题和<a href="https://blog.csdn.net/Anoy_acer/article/details/82888646" target="_blank" rel="noopener">POJ2752</a>基本一样，都是利用next性质求公共前后缀 )。<strong>利用strcat(s,s1)将两个串接起来,利用KMP的next数组性质如果s[next[n-1]]=s[n],则此时前后缀相同，然后再开始回滚，若s[next[n-1]] == s[n-1]，则子串s[0,1,2,…,next[n-1]]是满足条件的子串。然后判断s[next[next[n-1]]] == s[n-1]是否成立，这样一直回滚，直到next[next[…..next[n-1]]] == -1为止，这样求出最长的长度ans，判断ans是否大于两个串的较短串的长度，如果大于ans=min(len1,len2);(因为如果ans大于min，则一定存在长度为min的公共前后缀)</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn],s1[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn],len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">-1</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">0</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) != EOF) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s1);</span><br><span class="line"><span class="keyword">int</span> len1 = <span class="built_in">strlen</span>(s1);</span><br><span class="line"><span class="keyword">int</span> len2 = <span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="built_in">strcat</span>(s, s1);</span><br><span class="line">len = len1 + len2;</span><br><span class="line">Get_Nex();</span><br><span class="line"><span class="keyword">int</span> a = nex[len - <span class="number">1</span>], ans = <span class="number">0</span>, mi = min(len1, len2);</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[a] == s[len - <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">if</span> (ans &lt; a + <span class="number">1</span>)ans = a + <span class="number">1</span>;</span><br><span class="line">a = nex[a];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &gt; mi)ans = mi;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ans; i++) &#123; </span><br><span class="line"><span class="built_in">putchar</span>(s[i]);</span><br><span class="line"><span class="keyword">if</span> (i == ans - <span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ2752-Seek-the-Name-Seek-the-Fame（找相同的前后缀）</title>
      <link href="/article/POJ-2752-Seek-the-Name-Seek-the-Fame%EF%BC%88%E6%89%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E5%89%8D%E5%90%8E%E7%BC%80%EF%BC%89.html"/>
      <url>/article/POJ-2752-Seek-the-Name-Seek-the-Fame%EF%BC%88%E6%89%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E5%89%8D%E5%90%8E%E7%BC%80%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/181105/1F143E59-11.jpg" alt=""></p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://poj.org/problem?id=2752" target="_blank" rel="noopener">题目</a></h1><h2 id="博主博客"><a href="#博主博客" class="headerlink" title="博主博客"></a><a href="https://anoyer.cn/">博主博客</a></h2><p><img src="https://i.loli.net/2018/12/02/5c0359e848e38.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong><em>求一个串中相同前后缀长度，并输出</em></strong></p><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p><strong>利用KMP的next数组性质；如果s[next[n-1]]=s[n],则此时前后缀相同，然后再开始回滚，==若s[next[n-1]] == s[n-1]，则子串s[0,1,2,…,next[n-1]]是满足条件的子串==。然后判断s[next[next[n-1]]] == s[n-1]是否成立，这样一直回滚，直到next[next[…..next[n-1]]] == -1为止</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">4e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_Nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">-1</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>] &amp;&amp; i != <span class="number">0</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt;M;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s) != EOF) &#123;</span><br><span class="line">len = <span class="built_in">strlen</span>(s);</span><br><span class="line">Get_Nex();</span><br><span class="line"><span class="keyword">int</span> a = nex[len - <span class="number">1</span>];</span><br><span class="line">M.push(len);</span><br><span class="line"><span class="keyword">while</span> (a != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[a] == s[len - <span class="number">1</span>]) &#123;</span><br><span class="line">M.push(a + <span class="number">1</span>);</span><br><span class="line">a = nex[a];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!M.empty()) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, M.top());</span><br><span class="line">M.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)printf("%d ", nex[i]);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>POJ-3080 Blue Jeans(kmp+暴力求子串)</title>
      <link href="/article/POJ-3080-Blue-Jeans-kmp-%E6%9A%B4%E5%8A%9B%E6%B1%82%E5%AD%90%E4%B8%B2.html"/>
      <url>/article/POJ-3080-Blue-Jeans-kmp-%E6%9A%B4%E5%8A%9B%E6%B1%82%E5%AD%90%E4%B8%B2.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/181105/1F1431Q4-16.jpg" alt=""></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://poj.org/problem?id=3080" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c03578846211.jpg" alt="在这里插入图片描述"></p><hr><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给一个n，输入n个长度为60的字符串，求==最长公共子串==（2&lt;n&lt;=10),如果公共串长度大于等于3就输出这个子串（~~开始真的是瞎了，看了题直接将所有字符串连接来，求了波next数组，然后完美求出了子串长度，却发现要求是输出子串，心里***</strong>~~）**</p><hr><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p><strong>(==KMP+暴力求子串==)枚举第一个字符串的不同长度子串，判断她是否为下面多有的公共子串？如果是的话，那么我们就表明找到，则比较其长度，如果比已经找到的串长，那么就替换结果串 否则按字典序比较。取字典序考前的，就可以。</strong></p><hr><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">10</span>][<span class="number">62</span>];</span><br><span class="line"><span class="keyword">char</span> substr[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">char</span> result[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">int</span> next[<span class="number">62</span>];</span><br><span class="line"><span class="keyword">int</span> len, n, max;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &gt; <span class="number">-1</span> &amp;&amp; substr[j + <span class="number">1</span>] != substr[i])</span><br><span class="line">j = next[j];</span><br><span class="line"><span class="keyword">if</span> (substr[j + <span class="number">1</span>] == substr[i])  j++;</span><br><span class="line">next[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j, m;</span><br><span class="line">get_next();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; n; k++) &#123;</span><br><span class="line">j = <span class="number">-1</span>, m = <span class="number">-1</span>;<span class="comment">//m最好取-1</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">60</span>; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &gt; <span class="number">-1</span> &amp;&amp; substr[j + <span class="number">1</span>] != str[k][i])</span><br><span class="line">j = next[j];</span><br><span class="line"><span class="keyword">if</span> (substr[j + <span class="number">1</span>] == str[k][i]) j++;</span><br><span class="line"><span class="keyword">if</span> (j &gt; m) m = j; <span class="comment">//m取可匹配到的最大值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m &lt; max)   max = m;<span class="comment">//max取可匹配到的最小值，公共子串以最小者为准</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t, i, ans;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str[i]);</span><br><span class="line">ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">58</span>; i++) &#123;</span><br><span class="line"><span class="built_in">strcpy</span>(substr, str[<span class="number">0</span>] + i);<span class="comment">//枚举第一个串的所有后缀串</span></span><br><span class="line">len = <span class="number">60</span> - i;</span><br><span class="line">max = <span class="number">65</span>;</span><br><span class="line">kmp();</span><br><span class="line"><span class="keyword">if</span> (max &gt; ans) &#123;</span><br><span class="line">ans = max;</span><br><span class="line"><span class="built_in">strncpy</span>(result, str[<span class="number">0</span>] + i, ans + <span class="number">1</span>);</span><br><span class="line">result[ans + <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (max == ans) &#123; <span class="comment">//若有相等长度，取字典序小者</span></span><br><span class="line"><span class="built_in">strncpy</span>(temp, str[<span class="number">0</span>] + i, ans + <span class="number">1</span>);</span><br><span class="line">temp[ans + <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(result, temp) &gt; <span class="number">0</span>)</span><br><span class="line"><span class="built_in">strcpy</span>(result, temp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &gt;= <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, result);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no significant commonalities\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力题 </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
            <tag> POJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C/C++文件读写大杂烩</title>
      <link href="/article/C++%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99.html"/>
      <url>/article/C++%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170116/15152H3M-1.jpg" alt=""></p><h2 id="c-：ifstream"><a href="#c-：ifstream" class="headerlink" title="c++：ifstream"></a>c++：ifstream</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fstream in;  <span class="comment">//读文件</span></span><br><span class="line">in.open(<span class="string">"路径"</span>); <span class="comment">//只读 可以放在fstreaam in("路径");</span></span><br><span class="line">fstream out;  <span class="comment">//写文件</span></span><br><span class="line">out.open(<span class="string">"路径"</span>);</span><br><span class="line">out.close();<span class="comment">//关闭文件</span></span><br></pre></td></tr></table></figure><h3 id="如果文件不存在返回错误"><a href="#如果文件不存在返回错误" class="headerlink" title="如果文件不存在返回错误"></a>如果文件不存在返回错误</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!in.is_open()) &#123;  <span class="comment">//文件不存在，返回错误，并生成一个文件</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Error!"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>); <span class="comment">//终止程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如果文件不存在新建"><a href="#如果文件不存在新建" class="headerlink" title="如果文件不存在新建"></a>如果文件不存在新建</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fstream in;</span><br><span class="line">in.open(<span class="string">"路径"</span>,fstream::out||fstream::in);</span><br></pre></td></tr></table></figure><h3 id="成功打开文件后写入数组-写入文件"><a href="#成功打开文件后写入数组-写入文件" class="headerlink" title="成功打开文件后写入数组,写入文件"></a>成功打开文件后写入数组,写入文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">in&gt;&gt;a[i];</span><br><span class="line">out&lt;&lt;a[i];</span><br></pre></td></tr></table></figure><hr><h2 id="C：stdio-h-stdlib-h"><a href="#C：stdio-h-stdlib-h" class="headerlink" title="C：stdio.h ,stdlib.h"></a>C：stdio.h ,stdlib.h</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FILE *fp;  <span class="comment">//文件指针变量</span></span><br><span class="line">fp=fopen(<span class="string">"路径"</span>,“文件使用方式”); <span class="comment">//文件使用方式：r,w,a,rb,wb,ab,r+,w+,a+,rb+,wb+,ab+</span></span><br><span class="line">fclose(fp);<span class="comment">//关闭文件</span></span><br><span class="line">fgetc(fp); <span class="comment">//从fp指向文件读入一个字符</span></span><br><span class="line"><span class="built_in">fputs</span>(ch,fp); <span class="comment">//把字符写入fp指向文件</span></span><br><span class="line">fgets(str,n,fp); <span class="comment">//从fp指向文件中读入一个长度为n-1的字符串存在str中</span></span><br><span class="line"><span class="built_in">fputs</span>(str,fp) <span class="comment">//把str写入fp指向文件</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">"%d%s"</span>,i,str); <span class="comment">//向fp中输入整数i,字符串str;</span></span><br><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">"%d%s"</span>,i,str); <span class="comment">//从fp文件中读出一个整数一个字符串给整数i,字符串str</span></span><br></pre></td></tr></table></figure><h3 id="二进制读写–常用于读写结构体"><a href="#二进制读写–常用于读写结构体" class="headerlink" title="二进制读写–常用于读写结构体"></a>二进制读写–常用于读写结构体</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fread(变量地址,size,count,fp);<span class="comment">//从fp指的文件中读入连续count个size字节数据写入到变量</span></span><br><span class="line">fwrite(变量地址,size,count,fp);<span class="comment">//从变量中取出连续count个size字节数据写入到fp指向文件中</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round 512--C.Vasya and Golden Ti</title>
      <link href="/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-C-Vasya-and-Golden-Ti.html"/>
      <url>/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-C-Vasya-and-Golden-Ti.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/181105/1F1432437-19.jpg" alt=""></p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://codeforces.com/contest/1058/problem/C" target="_blank" rel="noopener">题目</a></h1><hr><p><img src="https://i.loli.net/2018/12/02/5c03595dcea22.jpg" alt="在这里插入图片描述"></p><hr><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给你一个由0-9组成的串，问能不能将串分成2份及两份以上，使每份数和相等</strong></p><hr><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p><strong>先特判下如果串中只有一种字符且串长度大于2则肯定可以，然后求出把0消去后串的前缀和（因为0对和没影响。再枚举i（i从1到n）位的前缀和num[i]，再看看（i-n）中有多少个前缀和num[j]能整除num[i]，如果满足的数量ans大于等于2且num[n]/ans==num[i],则一定可以分成ans份，否则输出no</strong></p><hr><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'0'</span>)<span class="keyword">continue</span>;</span><br><span class="line">num[cnt] = num[cnt - <span class="number">1</span>] + s[i] - <span class="string">'0'</span>;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] != s[i + <span class="number">1</span>])flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag&amp;&amp;n &gt;= <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; cnt; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; cnt; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (num[j] % num[i] == <span class="number">0</span>)ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &gt;= <span class="number">2</span> &amp;&amp; num[cnt - <span class="number">1</span>] % num[i] == <span class="number">0</span> &amp;&amp; num[cnt - <span class="number">1</span>] == num[i]*ans) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces Round 512--B.Vasya and Cornfield</title>
      <link href="/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-B-Vasya-and-Cornfield.html"/>
      <url>/article/Codeforces-Round-512-Div-2-based-on-Technocup-2019-Elimination-Round-1-B-Vasya-and-Cornfield.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170306/22-1F306102014Z1.jpg" alt=""></p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://codeforces.com/contest/1058/problem/B" target="_blank" rel="noopener">题目</a></h1><p><img src="https://i.loli.net/2018/12/02/5c03592115b3f.jpg" alt="在这里插入图片描述"><br><img src="https://i.loli.net/2018/12/02/5c035921177ef.jpg" alt="在这里插入图片描述"></p><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给出一个矩形，顶点坐标具有笛卡尔性质，然后m次询问，每次询问给一个点，温这个点是否再矩形内</strong></p><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p><strong>因为矩形顶点具有笛卡尔性质所以矩形4条边的方程分别为y=a+x,y=a-x,y=x-a,y=2*n-d-x,所以判断下点和4条边的关系便可值答案</strong></p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;d);</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="keyword">if</span> (x + d&gt;=y&amp;&amp;x - d&lt;=y&amp;&amp;d - x &lt;=y &amp;&amp; <span class="number">2</span> * n - d - x &gt;= y)<span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HDU-1358-Period（KMP求前缀循环节）</title>
      <link href="/article/HDU-1358-Period%EF%BC%88KMP%E6%B1%82%E5%89%8D%E7%BC%80%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html"/>
      <url>/article/HDU-1358-Period%EF%BC%88KMP%E6%B1%82%E5%89%8D%E7%BC%80%E5%BE%AA%E7%8E%AF%E8%8A%82%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/181105/1F1432037-15.jpg" alt=""></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1358" target="_blank" rel="noopener">题目</a></h2><p><img src="https://i.loli.net/2018/12/02/5c0359b17427c.jpg" alt="在这里插入图片描述"></p><hr><h2 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h2><p><strong>给定一个字符串，求出所有循环的前缀串，<br>输出前缀串的长度和循环的次数（大于一才算循环串）</strong></p><hr><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p><strong>思路是先构造出 next[] 数组，下标为 i，<br>定义一个变量 j = i - next[i] 就是next数组下标和下标对应值的差，<br>如果这个差能整除下标 i，即 i%j==0 ,则说明下标i之前的字符串（周期性字符串长度为 i）<br>一定可以由一个前缀周期性的表示出来，这个前缀的长度为刚才求得的那个差，<br>即 j，则这个前缀出现的次数为 i/j 。所以最后输出i和i/j即可。</strong></p><hr><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> nex[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_nex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">while</span> (s[i] != s[j + <span class="number">1</span>] &amp;&amp; j != <span class="number">-1</span>)j = nex[j];</span><br><span class="line"><span class="keyword">if</span> (s[i] == s[j + <span class="number">1</span>]&amp;&amp;i!=<span class="number">0</span>)j++;</span><br><span class="line">nex[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> L = i - nex[i];</span><br><span class="line"><span class="keyword">if</span> ((i + <span class="number">1</span>) % L == <span class="number">0</span> &amp;&amp; (i+<span class="number">1</span>) / L &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, i+<span class="number">1</span>, (i+<span class="number">1</span>) / L);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> Case = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) &#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">get_nex();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Test case #%d\n"</span>,++Case);</span><br><span class="line">Solve();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;n;i++)printf("%d ",nex[i]);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDU </tag>
            
            <tag> KMP </tag>
            
            <tag> 字符串题解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Codeforces-Round-511-Div-2-C-Enlarge-GCD</title>
      <link href="/article/Codeforces-Round-511-Div-2-C-Enlarge-GCD.html"/>
      <url>/article/Codeforces-Round-511-Div-2-C-Enlarge-GCD.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170306/22-1F306101Z9625.jpg" alt=""></p><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="http://codeforces.com/contest/1047/problem/C" target="_blank" rel="noopener">题目链接</a></h3><p><img src="https://i.loli.net/2018/12/02/5c03589d374dd.jpg" alt="在这里插入图片描述"></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p><strong>题解：先求出元素的最大公因子，开一个数组num记录每个数出现次数，再利用素数筛，求出所有数有当前质数因子的的个数</strong></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1.5e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> P[maxn], num[maxn], a[<span class="number">300005</span>], p[<span class="number">300005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b)</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,d=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">num[a[i]]++;</span><br><span class="line"><span class="keyword">if</span> (!d)</span><br><span class="line">d = a[i];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">d = gcd(d, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = d + <span class="number">1</span>; i &lt; maxn; i++)</span><br><span class="line"><span class="keyword">if</span> (!P[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>, j;</span><br><span class="line"><span class="keyword">for</span> (j = i; j &lt; maxn; j += i)</span><br><span class="line">P[j] = <span class="number">1</span>, cnt += num[j];</span><br><span class="line">ans = min(ans, n - cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans &lt; n)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeforces </tag>
            
            <tag> 思维题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>后缀数组DA模板</title>
      <link href="/article/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170517/36-1F51G12Ac26.jpg" alt=""></p><ul><li><strong>sufﬁx array</strong></li><li><strong>倍增算法 O(n*logn)</strong></li><li><strong>待排序数组⻓长度为n,放在0~n-1中,在后⾯面补⼀一个0</strong></li><li><strong>da(str, sa, rank, height, n, m);</strong></li><li><strong>例如:</strong></li><li><strong>n = 8;</strong></li><li><strong>num[] = { 1, 1, 2, 1, 1, 1, 1, 2, $ }; 注意num后⼀一位为0,其他⼤大于0</strong></li><li><strong>rank[] = { 4, 6, 8, 1, 2, 3, 5, 7, 0 }; rank[0~n-1]为有效值,rank[n]必定为0无效值</strong></li><li><strong>sa[] = { 8, 3, 4, 5, 0, 6, 1, 7, 2 }; sa[1~n]为有效值,sa[0]必定为n是⽆无效值</strong></li><li><strong>height[]= { 0, 0, 3, 2, 3, 1, 2, 0, 1 }; height[2~n]为有效值</strong></li><li><strong>稍微改动可以求⻓长公共前缀，需要注意两串串起始位置相同的情况</strong></li><li><strong>另外需要注意的是部分数组需要开两倍空间⼤大⼩小</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Problem: JZOJ1598(询问一个字符串中有多少至少出现两次的子串)</span></span><br><span class="line"><span class="comment">    Content: SA's Code and Explanation</span></span><br><span class="line"><span class="comment">    Author : Anoyer</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">100005</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ch[MAXN], All[MAXN];</span><br><span class="line"><span class="keyword">int</span> SA[MAXN], rank[MAXN], Height[MAXN], tax[MAXN], tp[MAXN], a[MAXN], n, m; </span><br><span class="line"><span class="keyword">char</span> str[MAXN];</span><br><span class="line"><span class="comment">//rank[i] 第i个后缀的排名; SA[i] 排名为i的后缀位置; Height[i] 排名为i的后缀与排名为(i-1)的后缀的LCP</span></span><br><span class="line"><span class="comment">//tax[i] 计数排序辅助数组; tp[i] rank的辅助数组(计数排序中的第二关键字),与SA意义一样。</span></span><br><span class="line"><span class="comment">//a为原串</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RSort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//rank第一关键字,tp第二关键字。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i ++) tax[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) tax[rank[tp[i]]] ++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++) tax[i] += tax[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i --) SA[tax[rank[tp[i]]] --] = tp[i]; <span class="comment">//确保满足第一关键字的同时，再满足第二关键字的要求</span></span><br><span class="line">&#125; <span class="comment">//计数排序,把新的二元组排序。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> *f, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span> </span>&#123; <span class="keyword">return</span> f[x] == f[y] &amp;&amp; f[x + w] == f[y + w]; &#125; </span><br><span class="line"><span class="comment">//通过二元组两个下标的比较，确定两个子串是否相同</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Suffix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//SA</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++) rank[i] = a[i], tp[i] = i;</span><br><span class="line">    m = <span class="number">127</span> ,RSort(); <span class="comment">//一开始是以单个字符为单位，所以(m = 127)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> w = <span class="number">1</span>, p = <span class="number">1</span>, i; p &lt; n; w += w, m = p) &#123; <span class="comment">//把子串长度翻倍,更新rank</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//w 当前一个子串的长度; m 当前离散后的排名种类数</span></span><br><span class="line">        <span class="comment">//当前的tp(第二关键字)可直接由上一次的SA的得到</span></span><br><span class="line">        <span class="keyword">for</span> (p = <span class="number">0</span>, i = n - w + <span class="number">1</span>; i &lt;= n; i ++) tp[++ p] = i; <span class="comment">//长度越界,第二关键字为0</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i ++) <span class="keyword">if</span> (SA[i] &gt; w) tp[++ p] = SA[i] - w;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新SA值,并用tp暂时存下上一轮的rank(用于cmp比较)</span></span><br><span class="line">        RSort(), swap(rank, tp), rank[SA[<span class="number">1</span>]] = p = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用已经完成的SA来更新与它互逆的rank,并离散rank</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i ++) rank[SA[i]] = cmp(tp, SA[i], SA[i - <span class="number">1</span>], w) ? p : ++ p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//离散：把相等的字符串的rank设为相同。</span></span><br><span class="line">    <span class="comment">//LCP</span></span><br><span class="line">    <span class="keyword">int</span> j, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; Height[rank[i ++]] = k) </span><br><span class="line">        <span class="keyword">for</span>( k = k ? k - <span class="number">1</span> : k, j = SA[rank[i] - <span class="number">1</span>]; a[i + k] == a[j + k]; ++ k);</span><br><span class="line">    <span class="comment">//这个知道原理后就比较好理解程序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str+<span class="number">1</span>);</span><br><span class="line">    n = <span class="built_in">strlen</span>(str+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n; i ++) a[i ] = str[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    Suffix();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;SA[i]&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str+SA[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">/*int ans = Height[2];</span></span><br><span class="line"><span class="comment">    for (int i = 3; i &lt;= n; i ++) ans += max(Height[i] - Height[i - 1], 0);</span></span><br><span class="line"><span class="comment">    printf("%d\n", ans);    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AC自动机模板</title>
      <link href="/article/AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/AC%E8%87%AA%E5%8A%A8%E6%9C%BA%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170517/36-1F51G1264MU.jpg" alt=""></p><p><strong>经常用来解决多模式匹配问题：就是有多个模式串P1,P2,P3…，Pm，求出所有这些模式串在连续文本T1….n中的所有可能出现的位置。</strong></p><ul><li><strong>例如：求出模式集合{“nihao”,”hao”,”hs”,”hsr”}在给定文本”sdmfhsgnshejfgnihaofhsrnihao”中所有可能出现的位置</strong></li><li><strong>给出L个模式字符串（加总长度为N），以及长度为M大文本，要求从大文本中提取每个模式字符串出现的位置。如果使用KMP算法，时间复杂度将达到O(LM+N)，而使用AC自动机可以在O(N+M)时间复杂度内解决这一问题，当L很大时，AC自动机的优势非常明显。</strong></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_n 1000050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_tot 500050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ac</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">state</span> &#123;</span>  <span class="comment">//节点状态</span></span><br><span class="line"><span class="keyword">int</span> next[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> fail, cnt;<span class="comment">//指针fail 到这个节点有cnt个串结束</span></span><br><span class="line">&#125;stable[max_tot];</span><br><span class="line"><span class="keyword">int</span> size;  <span class="comment">//当前AC自动机节点个数</span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;  <span class="comment">//初始化</span></span><br><span class="line">met(stable);</span><br><span class="line">size = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.empty())q.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;  <span class="comment">//将模式串插入trie树</span></span><br><span class="line"><span class="keyword">int</span> now = <span class="number">0</span>; <span class="comment">//代表走到那个节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (!stable[now].next[ch])  <span class="comment">//节点不存在该字母边，则新建一个</span></span><br><span class="line">stable[now].next[ch] = size++;</span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line">&#125;</span><br><span class="line">stable[now].cnt++;<span class="comment">//结束位置++；</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span> </span>&#123;  <span class="comment">//构造失配fail指针，要构造当前节点fail指针需先构造爸爸节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)<span class="keyword">if</span> (stable[<span class="number">0</span>].next[i])q.push(stable[<span class="number">0</span>].next[i]);</span><br><span class="line"><span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (stable[u].next[i]) &#123;  <span class="comment">//如果有i这条边  枚举下他儿子</span></span><br><span class="line"><span class="keyword">int</span> v = stable[u].fail;</span><br><span class="line"><span class="keyword">int</span> a = stable[u].next[i];</span><br><span class="line"><span class="keyword">while</span> (v) &#123;  <span class="comment">//一直按箭头的fail</span></span><br><span class="line"><span class="keyword">if</span> (stable[v].next[i]) &#123;  <span class="comment">//如果他某个祖先有i这条边</span></span><br><span class="line">stable[a].fail = stable[v].next[i];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">v = stable[v].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!stable[a].fail)stable[a].fail = stable[<span class="number">0</span>].next[i];</span><br><span class="line">q.push(stable[u].next[i]);  <span class="comment">//节点加进去</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;  <span class="comment">//算所有祖先的和</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u) &#123;</span><br><span class="line">res = res + stable[u].cnt;</span><br><span class="line">stable[u].cnt = <span class="number">0</span>;  <span class="comment">//计算后不再计算，如果要计算不清零</span></span><br><span class="line">u = stable[u].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;   <span class="comment">//匹配</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, now = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (stable[now].next[ch])  <span class="comment">//如果当前状态太能找到后继节点，则走他</span></span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line"><span class="keyword">else</span> &#123;  <span class="comment">//否则只能跳爸爸</span></span><br><span class="line"><span class="keyword">int</span> p = stable[now].fail;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; stable[p].next[ch] == <span class="number">0</span>)p = stable[p].fail; <span class="comment">//始终没找到，只能指根节点  //找到就跳对应地方</span></span><br><span class="line">now = stable[p].next[ch];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (stable[now].cnt)res = res + get(now);<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;Ac;</span><br><span class="line"><span class="keyword">char</span> s[max_n];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">freopen(<span class="string">"C:/input.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>应用：查找母串中各单词出现次数–对应题目<a href="https://www.luogu.org/problemnew/show/P3796" target="_blank" rel="noopener">P3796</a></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_n 1000050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_tot 500050</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> met(a) memset(a,0,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fup(i,a,n,b) for(int i=a;i&lt;n;i+=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fow(j,a,n,b) for(int j=a;j&gt;0;j-=b)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD(x) (x)%mod</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aa</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line">&#125;ans[<span class="number">180</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(aa a, aa b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a.cnt == b.cnt)<span class="keyword">return</span> a.i &lt; b.i;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a.cnt &gt; b.cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ac</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">state</span> &#123;</span>  <span class="comment">//节点状态</span></span><br><span class="line"><span class="keyword">int</span> next[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> fail, cnt;<span class="comment">//指针fail 到这个节点有cnt个串结束</span></span><br><span class="line">&#125;stable[max_tot];</span><br><span class="line"><span class="keyword">int</span> size;  <span class="comment">//当前AC自动机节点个数</span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;  <span class="comment">//初始化</span></span><br><span class="line">met(stable);</span><br><span class="line">size = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.empty())q.pop();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">150</span>; i++) &#123;</span><br><span class="line">ans[i].i = i;</span><br><span class="line">ans[i].cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> n)</span> </span>&#123;  <span class="comment">//将模式串插入trie树</span></span><br><span class="line"><span class="keyword">int</span> now = <span class="number">0</span>; <span class="comment">//代表走到那个节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (!stable[now].next[ch])  <span class="comment">//节点不存在该字母边，则新建一个</span></span><br><span class="line">stable[now].next[ch] = size++;</span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line">&#125;</span><br><span class="line">stable[now].cnt=n;<span class="comment">//结束位置++；</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span> </span>&#123;  <span class="comment">//构造失配fail指针，要构造当前节点fail指针需先构造爸爸节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)<span class="keyword">if</span> (stable[<span class="number">0</span>].next[i])q.push(stable[<span class="number">0</span>].next[i]);</span><br><span class="line"><span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line"><span class="keyword">int</span> u = q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (stable[u].next[i]) &#123;  <span class="comment">//如果有i这条边  枚举下他儿子</span></span><br><span class="line"><span class="keyword">int</span> v = stable[u].fail;</span><br><span class="line"><span class="keyword">int</span> a = stable[u].next[i];</span><br><span class="line"><span class="keyword">while</span> (v) &#123;  <span class="comment">//一直按箭头的fail</span></span><br><span class="line"><span class="keyword">if</span> (stable[v].next[i]) &#123;  <span class="comment">//如果他某个祖先有i这条边</span></span><br><span class="line">stable[a].fail = stable[v].next[i];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">v = stable[v].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!stable[a].fail)stable[a].fail = stable[<span class="number">0</span>].next[i];</span><br><span class="line">q.push(stable[u].next[i]);  <span class="comment">//节点加进去</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;  <span class="comment">//算所有祖先的和</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">u = stable[u].fail;</span><br><span class="line"><span class="keyword">while</span> (u) &#123;</span><br><span class="line"><span class="keyword">if</span>(stable[u].cnt)ans[stable[u].cnt].cnt++;  <span class="comment">//找个数</span></span><br><span class="line">u = stable[u].fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span> *s)</span> </span>&#123;   <span class="comment">//匹配</span></span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, now = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++) &#123;</span><br><span class="line"><span class="keyword">char</span> ch = s[i]-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (stable[now].next[ch])  <span class="comment">//如果当前状态太能找到后继节点，则走他</span></span><br><span class="line">now = stable[now].next[ch];</span><br><span class="line"><span class="keyword">else</span> &#123;  <span class="comment">//否则只能跳爸爸</span></span><br><span class="line"><span class="keyword">int</span> p = stable[now].fail;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; stable[p].next[ch] == <span class="number">0</span>)p = stable[p].fail; <span class="comment">//始终没找到，只能指根节点  //找到就跳对应地方</span></span><br><span class="line">now = stable[p].next[ch];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (stable[now].cnt) &#123; </span><br><span class="line">ans[stable[now].cnt].cnt++; </span><br><span class="line">&#125;</span><br><span class="line">get(now);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;Ac;</span><br><span class="line"><span class="keyword">char</span> s[max_n];</span><br><span class="line"><span class="keyword">char</span> s1[<span class="number">200</span>][<span class="number">80</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="comment">/*ios::sync_with_stdio(0);</span></span><br><span class="line"><span class="comment">cin.tie(0); cout.tie(0);*/</span></span><br><span class="line"><span class="keyword">int</span> t, n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)&amp;&amp;n!=<span class="number">0</span>) &#123;</span><br><span class="line">Ac.init();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s1[i]);</span><br><span class="line">Ac.insert(s1[i], i);</span><br><span class="line">&#125;</span><br><span class="line">Ac.build();</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">Ac.match(s);</span><br><span class="line"></span><br><span class="line">sort(ans, ans + n+<span class="number">1</span>, cmp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[<span class="number">0</span>].cnt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s1[ans[<span class="number">0</span>].i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (ans[i].cnt == ans[<span class="number">0</span>].cnt)<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, s1[ans[i].i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字符串Hash模板</title>
      <link href="/article/%E5%AD%97%E7%AC%A6%E4%B8%B2Hash%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%AD%97%E7%AC%A6%E4%B8%B2Hash%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/171224/2200393916-15.jpg" alt=""></p><ul><li><strong>字符串 Hash</strong></li><li><strong>注意：m选择足够大的质数（至少大于字符串个数</strong>）</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long int</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function">ll <span class="title">gethash</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">ll h=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++)</span><br><span class="line">h=((h&lt;&lt;<span class="number">8</span>)+s[i])%m;</span><br><span class="line"><span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line"><span class="comment">//freopen("C:/Users/Administrator/Desktop/input.txt","r",stdin);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>]=<span class="string">"22222222222222222222222222222"</span>;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">100</span>]=<span class="string">"22222222222222222222222223222"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,gethash(a,<span class="number">1e9</span>+<span class="number">7</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,gethash(b,<span class="number">1e9</span>+<span class="number">7</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Karp-Rabin算法模板</title>
      <link href="/article/Karp-Rabin%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/Karp-Rabin%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180413/1555133026-10.jpg" alt=""></p><p><strong>Karp Rabin 算法是利用hash函数的特性进行字符串匹配的。</strong></p><p><strong>KR算法对模式串和循环中每一次要匹配的子串按一定的hash函数求值，如果hash值相同，才进一步比较这两个串是否真正相等</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> d 256<span class="comment">//字符表中字符数目 </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,p;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RK</span><span class="params">(<span class="keyword">int</span> q)</span></span>&#123;</span><br><span class="line"><span class="comment">//assert( s&amp;&amp; p &amp;&amp; q &gt; 0 );//如果传递的有错，则打印提示 </span></span><br><span class="line"><span class="keyword">int</span> m=p.size();</span><br><span class="line"><span class="keyword">int</span> n=s.size();</span><br><span class="line"><span class="keyword">int</span> p_h=<span class="number">0</span>;<span class="comment">//模式串hash </span></span><br><span class="line"><span class="keyword">int</span> s_h=<span class="number">0</span>;<span class="comment">//s串hash </span></span><br><span class="line"><span class="keyword">int</span> h=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m<span class="number">-1</span>;i++)h=(h*d)%q;<span class="comment">//h表示ts+1 = 10(31415 - 10000*3) +2 = 14152中的10000   </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">p_h= ( d * p_h + p[i] ) % q;</span><br><span class="line">s_h= ( d * s_h + s[i] ) % q;</span><br><span class="line">&#125;<span class="comment">//求出开始p_h 和 s_h </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n-m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p_h==s_h)&#123;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line"><span class="keyword">if</span>(s[i+j]!=p[j])<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(j==m)<span class="built_in">printf</span>(<span class="string">"P occurs with shifts: %d\n"</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i&lt;n-m)&#123;</span><br><span class="line">s_h=(d*(s_h-s[i]*h)+s[i+m])%q;</span><br><span class="line"><span class="keyword">if</span>(s_h&lt;<span class="number">0</span>)</span><br><span class="line">s_h+=q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s=<span class="string">"GEEKlmnaS FOR GEEKlmnaS njknaskjdaskjbdkjasbdjas njabijbaslbckjsbfGEEKlmnaS FOR GEEKlmnaS"</span>;</span><br><span class="line">p=<span class="string">"GEEKlmna"</span>;</span><br><span class="line"><span class="keyword">int</span> mod=<span class="number">127</span>;<span class="comment">////需要比s长度大 </span></span><br><span class="line">RK(mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>KMP模板及优化</title>
      <link href="/article/KMP%E6%A8%A1%E6%9D%BF%E5%8F%8A%E4%BC%98%E5%8C%96.html"/>
      <url>/article/KMP%E6%A8%A1%E6%9D%BF%E5%8F%8A%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170116/15152J916-4.jpg" alt=""></p><p><strong>解决问题：字符串匹配。给你两个字符串，寻找其中一个字符串是否包含另一个字符串，如果包含，返回包含的起始位置。 或者给你两个字符串，查找一个字符串在另外一个字符串中出现了几次</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">10001</span>;</span><br><span class="line"><span class="keyword">int</span> next[maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">char</span> p[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prefix_next</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">next[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]==p[len])&#123;</span><br><span class="line">len++;</span><br><span class="line">next[i]=len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">len=next[len<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">next[i++]=len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_next</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">next[i]=next[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kmp_search</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="built_in">strlen</span>(p);</span><br><span class="line"><span class="keyword">int</span> m=<span class="built_in">strlen</span>(s);</span><br><span class="line">prefix_next(n);</span><br><span class="line">move_next(n);</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;m)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==p[j]&amp;&amp;j==n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No.%d--&gt;%d\n"</span>,++cnt,i-j);</span><br><span class="line">j=next[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==p[j])&#123;</span><br><span class="line">i++;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">j=next[j];</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">-1</span>)&#123;</span><br><span class="line">i++;j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt==<span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;<span class="string">"NO FOUD"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;p;</span><br><span class="line">kmp_search();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>KMP优化模板</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1000005</span>],t[<span class="number">200000</span>];</span><br><span class="line"><span class="keyword">int</span> slen,tlen;</span><br><span class="line"><span class="keyword">int</span> nex[<span class="number">200000</span>];<span class="comment">//nex数组大小和短串一致</span></span><br><span class="line"><span class="keyword">int</span> ans,a,b,c,d,n,m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">get_nex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">-1</span>;<span class="comment">//j初始化为-1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tlen;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>  (t[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>)<span class="comment">//如果下一个不同，那么j就变成next[j]，注意next[j]是小于j的，无论j取任何值</span></span><br><span class="line">j=nex[j];<span class="comment">//往前回溯</span></span><br><span class="line">            <span class="keyword">if</span> (t[i]==t[j+<span class="number">1</span>] &amp;&amp; i!=<span class="number">0</span>) j++;<span class="comment">//如果相同，j++</span></span><br><span class="line">            nex[i]=j;<span class="comment">//这个是把算的j的值（就是相同的最大前缀和最大后缀长）赋给next[i]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">kmp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;slen;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>  (s[i]!=t[j+<span class="number">1</span>] &amp;&amp; j!=<span class="number">-1</span>) </span><br><span class="line">j=nex[j];</span><br><span class="line">            <span class="keyword">if</span> (s[i]==t[j+<span class="number">1</span>]) </span><br><span class="line">j++;</span><br><span class="line">            <span class="keyword">if</span> (j==tlen<span class="number">-1</span>)  </span><br><span class="line">ans++,j=nex[j];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,t,s);</span><br><span class="line">        slen=<span class="built_in">strlen</span>(s);</span><br><span class="line">        tlen=<span class="built_in">strlen</span>(t);<span class="comment">//这两个长度应该设为全局变量最开始时求出，不能用一次求一次</span></span><br><span class="line">        get_nex();</span><br><span class="line">        kmp();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sunday算法模板</title>
      <link href="/article/Sunday%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/Sunday%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180522/1K4431K1-14.jpg" alt=""></p><p><strong>Sunday算法由Daniel M.Sunday在1990年提出，它的思想跟BM算法很相似：1<br>只不过Sunday算法是从前往后匹配，在匹配失败时关注的是主串中参加匹配的最末位字符的下一位字符。<br>如果该字符没有在模式串中出现则直接跳过，即移动位数 = 模式串长度 + 1；<br>否则，其移动位数 = 模式串长度 - 该字符最右出现的位置(以0开始) = 模式串中该字符最右出现的位置到尾部的距离 + 1。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s,p;</span><br><span class="line"><span class="keyword">int</span> next_[<span class="number">257</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len=p.size();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">256</span>;i++)next_[i]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)next_[p[i]]=i;   <span class="comment">//打next_表，记录模式串相应字符的位置 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sunday</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> slen=s.size();</span><br><span class="line"><span class="keyword">int</span> plen=p.size();</span><br><span class="line"><span class="keyword">if</span>(slen==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//如果s的长度为0，不需要匹配，直接返回-1 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;slen-plen;)&#123;</span><br><span class="line"><span class="keyword">int</span> j=i;<span class="comment">//s[j] </span></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;<span class="comment">//p[k]</span></span><br><span class="line"><span class="keyword">for</span>(;k&lt;plen&amp;&amp;j&lt;slen&amp;&amp;s[j]==p[k];j++,k++);<span class="comment">//一直匹配，找到失配 j 和  k </span></span><br><span class="line"><span class="keyword">if</span>(k==plen)<span class="comment">//说明已经找到一段匹配串</span></span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">//如果要查找出现次数，改成cnt++</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i+plen&lt;slen)i+=(plen-next_[s[i+plen]]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">////如果要查找出现次数，改成return cnt</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">s=<span class="string">"I love DNF and Code"</span>;</span><br><span class="line">p=<span class="string">"love"</span>;</span><br><span class="line">getnext();</span><br><span class="line"><span class="keyword">if</span>(sunday())<span class="built_in">printf</span>(<span class="string">"you find it at %d\n"</span>,sunday());</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"sorry,you do not find it!\n"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字符串编辑距离模板</title>
      <link href="/article/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180522/1K443C35-12.jpg" alt=""></p><p><strong>编辑距离，又称Levenshtein距离（也叫做Edit Distance），是指两个字串之间，由⼀一个转成 另一个所需的少编辑操作次数。许可的编辑操作包括将⼀一个字符替换成另一个字符，插入一个字 符，删除一个字符</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>; </span><br><span class="line"><span class="keyword">int</span> T, cas = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> n, m; </span><br><span class="line"><span class="keyword">int</span> dp[N][N]; </span><br><span class="line"><span class="keyword">char</span> s[N], t[N]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s,t)!=EOF)&#123;</span><br><span class="line"><span class="keyword">int</span> n=(<span class="keyword">int</span>)<span class="built_in">strlen</span>(s),m=(<span class="keyword">int</span>)<span class="built_in">strlen</span>(t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">dp[i][<span class="number">0</span>]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++)&#123;</span><br><span class="line">dp[<span class="number">0</span>][i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">dp[i][j]=min(dp[i<span class="number">-1</span>][j],dp[i][j<span class="number">-1</span>])+<span class="number">1</span>;</span><br><span class="line">dp[i][j]=min(dp[i][j],dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+(s[i<span class="number">-1</span>]!=t[j<span class="number">-1</span>]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[n][m]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Manacher回文串算法（马拉车）模板</title>
      <link href="/article/Manacher%E5%9B%9E%E6%96%87%E4%B8%B2%E7%AE%97%E6%B3%95%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%EF%BC%89%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/Manacher%E5%9B%9E%E6%96%87%E4%B8%B2%E7%AE%97%E6%B3%95%EF%BC%88%E9%A9%AC%E6%8B%89%E8%BD%A6%EF%BC%89%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/171224/22003934Y-9.jpg" alt=""></p><p><strong>求一个串中最长回文串的长度</strong><br><strong>给定一个字符串，求出其最长回文子串。例如：<br>（1）s=”abcd”, 最长回文长度为 1；<br>（2）s=”ababa”, 最长回文长度为 5；<br>（3）s=”abccb”, 最长回文长度为 4，即 bccb。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">111111</span>];</span><br><span class="line"><span class="keyword">char</span> s_new[<span class="number">111111</span>*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">111111</span>*<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    s_new[<span class="number">0</span>] = <span class="string">'$'</span>;</span><br><span class="line">    s_new[<span class="number">1</span>] = <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s_new[j++] = s[i];</span><br><span class="line">        s_new[j++] = <span class="string">'#'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    s_new[j] = <span class="string">'\0'</span>;  <span class="comment">//别忘了哦  </span></span><br><span class="line"> <span class="comment">//printf("%s\n",s_new);</span></span><br><span class="line">    <span class="keyword">return</span> j;  <span class="comment">//返回s_new的长度  </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = Init();  <span class="comment">//取得新字符串长度并完成向s_new的转换  </span></span><br><span class="line">    <span class="keyword">int</span> maxLen = <span class="number">-1</span>;   <span class="comment">//最长回文长度  </span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; mx)</span><br><span class="line">            p[i] = min(p[<span class="number">2</span> * id - i], mx - i);  <span class="comment">//需搞清楚上面那张图含义, mx和2*id-i的含义</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p[i] = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">while</span> (s_new[i - p[i]] == s_new[i + p[i]])  <span class="comment">//不需边界判断，因为左有'$',右有'\0'  </span></span><br><span class="line">            p[i]++;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//我们每走一步i，都要和mx比较，我们希望mx尽可能的远，这样才能更有机会执行if (i &lt; mx)这句代码，从而提高效率 </span></span><br><span class="line">        <span class="keyword">if</span> (mx &lt; i + p[i])  </span><br><span class="line">        &#123;</span><br><span class="line">            id = i;</span><br><span class="line">            mx = i + p[i];</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        maxLen = max(maxLen, p[i] - <span class="number">1</span>);</span><br><span class="line">       <span class="comment">// printf("%d %d %d\n",mx,id,maxLen);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*for(int i=1;i&lt;=len;i++)printf("%d ",p[i]);</span></span><br><span class="line"><span class="comment">    printf("\n");*/</span></span><br><span class="line">    <span class="keyword">return</span> maxLen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%s"</span>, s))</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Manacher());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>拓展KMP模板</title>
      <link href="/article/%E6%8B%93%E5%B1%95KMP%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E6%8B%93%E5%B1%95KMP%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180423/163GW017-12.jpg" alt=""></p><h4 id="博主CSDN"><a href="#博主CSDN" class="headerlink" title="博主CSDN"></a><a href="https://blog.csdn.net/Anoy_acer" target="_blank" rel="noopener">博主CSDN</a></h4><ul><li><strong>扩展KMP</strong></li><li><strong>next[i]表示为模式串S2中以i为起点的后缀字符串和模式串S2的最长公共前缀长度.</strong></li><li><strong>extend[i]表示为以字符串S1中以i为起点的后缀字符串和模式串S2的最长公共前缀长度.</strong><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100010</span>;<span class="comment">//字符串长度最大值 </span></span><br><span class="line"><span class="keyword">int</span> next[maxn],ex[maxn];<span class="comment">//ex数组即为extend数组</span></span><br><span class="line"><span class="keyword">char</span> s[maxn],s2[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="comment">//预处理计算next数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j,po,len=<span class="built_in">strlen</span>(s);</span><br><span class="line">next[<span class="number">0</span>]=len;<span class="comment">//初始化next[0]</span></span><br><span class="line"><span class="keyword">while</span>(s[i]==s[i+<span class="number">1</span>]&amp;&amp;i+<span class="number">1</span>&lt;len)<span class="comment">//计算next[1]</span></span><br><span class="line">i++;</span><br><span class="line">next[<span class="number">1</span>]=i;</span><br><span class="line">po=<span class="number">1</span>;<span class="comment">//初始化po的位置 </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(next[i-po]+i&lt;next[po]+po)<span class="comment">//第一种情况，可以直接得到next[i]的值</span></span><br><span class="line">next[i]=next[i-po];</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//第二种情况，要继续匹配才能得到next[i]的值 </span></span><br><span class="line">&#123;</span><br><span class="line">j=next[po]+po-i;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span>)j=<span class="number">0</span>;<span class="comment">//如果i&gt;po+next[po],则要从头开始匹配</span></span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len&amp;&amp;s[j]==s[j+i])<span class="comment">//计算next[i]</span></span><br><span class="line">j++;</span><br><span class="line">next[i]=j;</span><br><span class="line">po=i;<span class="comment">//更新po的位置 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//计算extend数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j,po,len=<span class="built_in">strlen</span>(s),l2=<span class="built_in">strlen</span>(s2);</span><br><span class="line">getnext();<span class="comment">//计算子串的next数组</span></span><br><span class="line"><span class="keyword">while</span>(s[i]==s2[i]&amp;&amp;i&lt;len)i++;</span><br><span class="line">ex[<span class="number">0</span>]=i;</span><br><span class="line">po=<span class="number">0</span>;<span class="comment">//初始化po的位置</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(next[i-po]+i&lt;ex[po]+po)</span><br><span class="line">ex[i]=next[i-po];<span class="comment">//第一种情况</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">j=ex[po]+po-i;</span><br><span class="line"><span class="keyword">if</span>(j&lt;<span class="number">0</span>)j=<span class="number">0</span>;<span class="comment">//如果j&gt;ex[po]+po则从头开始匹配</span></span><br><span class="line"><span class="keyword">while</span>(i+j&lt;len&amp;&amp;j&lt;&lt;l2&amp;&amp;s[j+i]==s2[j])<span class="comment">//计算ex[i]</span></span><br><span class="line">j++;</span><br><span class="line">ex[i]=j;</span><br><span class="line">po=i; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>KMP最短公共祖先</title>
      <link href="/article/KMP%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html"/>
      <url>/article/KMP%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170616/36-1F616161RA54.jpg" alt=""></p><p><strong>HDU1841–题意是给出两个串，用这两个串组成一个新串，使新串包含这两个串，</strong><br><strong>问这个新串的长度最小是多少，显然，对于两个串A，B，A如果是B的字串或者B如果是A的字串的话，直接输出那个母串的长度即可，如果没有这种关系，那么看一个串的后缀是否是另一个串的前缀如果某个串的后缀与另一个串的前缀的公共部分最长，则答案=A.length+B.length-公共长度。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000100</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">3</span>][<span class="number">2</span>*N];</span><br><span class="line"><span class="keyword">int</span> fail[<span class="number">2</span>*N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kmp</span><span class="params">(<span class="keyword">int</span> &amp;i, <span class="keyword">int</span> &amp;j, <span class="keyword">char</span>* str, <span class="keyword">char</span>* pat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">memset</span>(fail, <span class="number">-1</span>, <span class="keyword">sizeof</span>(fail));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; pat[i]; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = fail[i - <span class="number">1</span>]; k &gt;= <span class="number">0</span> &amp;&amp; pat[i] != pat[k + <span class="number">1</span>]; k = fail[k]);</span><br><span class="line">        <span class="keyword">if</span> (pat[k + <span class="number">1</span>] == pat[i])</span><br><span class="line">        &#123;</span><br><span class="line">            fail[i] = k + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    i = j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i] &amp;&amp; pat[j])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pat[j] == str[i])</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            j = fail[j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pat[j])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> i - j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, l1 = <span class="number">0</span>, l2 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[<span class="number">0</span>] &gt;&gt; a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> len1 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">0</span>]), len2 = (<span class="keyword">int</span>)<span class="built_in">strlen</span>(a[<span class="number">1</span>]), val;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">1</span>], a[<span class="number">0</span>]);            </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            l1 = len1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len2 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">1</span>][len2 - <span class="number">1</span>] == a[<span class="number">0</span>][j - <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                l1 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        val = kmp(i, j, a[<span class="number">0</span>], a[<span class="number">1</span>]);           </span><br><span class="line">        <span class="keyword">if</span> (val != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            l2 = len2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == len1 &amp;&amp; j - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>][len1 - <span class="number">1</span>] == a[<span class="number">1</span>][j - <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                l2 = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, len1 + len2 - max(l1, l2));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 字符串模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM模板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/article/hello-world.html"/>
      <url>/article/hello-world.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/170316/211S262S-6.jpg" alt=""></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文章模板</title>
      <link href="/article/%E6%A8%A1%E6%9D%BF.html"/>
      <url>/article/%E6%A8%A1%E6%9D%BF.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.005.tv/uploads/allimg/180601/1P2394Z6-3.jpg" alt=""></p><p><img src="http://www.005.tv/uploads/allimg/180522/1K4431Y1-3.jpg" alt=""></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
